{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stAurVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_auroraToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeCollectorRole",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contractOperatorRole",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_lpTokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_lpTokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_minDepositAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_swapFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_liqProvFeeCutBasisPoints",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_auroraAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lpTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "AddLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_isFullyOperational",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "ContractUpdateOperation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lpTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_auroraAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_stAurAmount",
          "type": "uint256"
        }
      ],
      "name": "RemoveLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_stAurAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_auroraAmount",
          "type": "uint256"
        }
      ],
      "name": "StAurLiquidityProvidedByPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_auroraAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_stAurAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_totalFee",
          "type": "uint256"
        }
      ],
      "name": "SwapStAur",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_new",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "UpdateFeeBasisPoints",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_new",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "UpdateLiqProvFeeBasisPoints",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_new",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "UpdateMinDepositAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "WithdrawCollectedFees",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_COLLECTOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ONE_HUNDRED_PERCENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPERATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auroraBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auroraToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectedStAurFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "convertToAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "convertToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fullyOperational",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "isStAurBalanceAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liqProvFeeCutBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "maxRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "maxWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDepositAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "previewSwapStAurForAurora",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stAurBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stAurVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stAurAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minAuroraToReceive",
          "type": "uint256"
        }
      ],
      "name": "swapStAurForAurora",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_assets",
          "type": "uint256"
        }
      ],
      "name": "transferStAur",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isFullyOperational",
          "type": "bool"
        }
      ],
      "name": "updateContractOperation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "updateFeeBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "updateLiqProvFeeBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "updateMinDepositAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "withdrawCollectedStAurFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b506040516200335938038062003359833981016040819052620000359162000538565b87858560036200004683826200069a565b5060046200005582826200069a565b5050506000806200006c83620002bf60201b60201c565b915091508162000091576200008b620003a460201b620019001760201c565b62000093565b805b60ff1660a05250506001600160a01b031660805281612710811115620001005760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f42415349535f504f494e545300000000000000000000000060448201526064015b60405180910390fd5b81612710811115620001555760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f42415349535f504f494e54530000000000000000000000006044820152606401620000f7565b6001600160a01b038b16158015906200017657506001600160a01b038a1615155b80156200018b57506001600160a01b03891615155b8015620001a057506001600160a01b03881615155b620001ee5760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f414444524553530000000000000000000000006044820152606401620000f7565b6001600160a01b03808c1660c0528a1660e05260088590556009849055600a839055600c805460ff19166001179055620002497fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533620003a9565b62000256600033620003a9565b620002827f2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b670388218a620003a9565b620002ae7f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92989620003a9565b50505050505050505050506200079e565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000918291829182916001600160a01b03871691620003089162000766565b600060405180830381855afa9150503d806000811462000345576040519150601f19603f3d011682016040523d82523d6000602084013e6200034a565b606091505b50915091508180156200035f57506020815110155b1562000397576000818060200190518101906200037d919062000784565b905060ff811162000395576001969095509350505050565b505b5060009485945092505050565b601290565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff166200044a5760008281526005602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620004093390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b80516001600160a01b03811681146200046657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200049e57818101518382015260200162000484565b50506000910152565b600082601f830112620004b957600080fd5b81516001600160401b0380821115620004d657620004d66200046b565b604051601f8301601f19908116603f011681019082821181831017156200050157620005016200046b565b816040528381528660208588010111156200051b57600080fd5b6200052e84602083016020890162000481565b9695505050505050565b60008060008060008060008060006101208a8c0312156200055857600080fd5b620005638a6200044e565b98506200057360208b016200044e565b97506200058360408b016200044e565b96506200059360608b016200044e565b60808b01519096506001600160401b0380821115620005b157600080fd5b620005bf8d838e01620004a7565b965060a08c0151915080821115620005d657600080fd5b50620005e58c828d01620004a7565b94505060c08a0151925060e08a015191506101008a015190509295985092959850929598565b600181811c908216806200062057607f821691505b6020821081036200064157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200069557600081815260208120601f850160051c81016020861015620006705750805b601f850160051c820191505b8181101562000691578281556001016200067c565b5050505b505050565b81516001600160401b03811115620006b657620006b66200046b565b620006ce81620006c784546200060b565b8462000647565b602080601f831160018114620007065760008415620006ed5750858301515b600019600386901b1c1916600185901b17855562000691565b600085815260208120601f198616915b82811015620007375788860151825594840194600190910190840162000716565b5085821015620007565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516200077a81846020870162000481565b9190910192915050565b6000602082840312156200079757600080fd5b5051919050565b60805160a05160c05160e051612b34620008256000396000818161064101528181610e3e015261117801526000818161054c01528181610ac501528181610d6801528181610de401528181610ff3015281816113050152818161144f0152611740015260006104f00152600081816105950152818161170c0152611ee80152612b346000f3fe60806040526004361061036f5760003560e01c806370a08231116101c6578063b3d7f6b9116100f7578063d905777e11610095578063dd62ed3e1161006f578063dd62ed3e14610a50578063e1437bcb14610a70578063ef8b30f71461099a578063f5b541a614610a8657600080fd5b8063d905777e146109fa578063da9c4b6714610a1a578063dd0081c714610a3a57600080fd5b8063c63d75b6116100d1578063c63d75b614610978578063c6e6f5921461099a578063ce96cb77146109ba578063d547741f146109da57600080fd5b8063b3d7f6b91461091d578063b460af941461093d578063ba0876521461095857600080fd5b806395d89b4111610164578063a22f23921161013e578063a22f2392146108a7578063a457c2d7146108bd578063a9059cbb146108dd578063a915277c146108fd57600080fd5b806395d89b411461085d5780639a47b53c14610872578063a217fddf1461089257600080fd5b806389197faf116101a057806389197faf146107dd57806390c69fe3146107fd57806391d148541461081d57806394bf804d1461083d57600080fd5b806370a082311461075357806375b238fc1461078957806384780205146107bd57600080fd5b806339509351116102a0578063597cc4d11161023e57806362a2a47c1161021857806362a2a47c146106c9578063645006ca146106fd5780636505bef4146107135780636e553f651461073357600080fd5b8063597cc4d1146106835780635ade1904146106995780635e30d67e146106b357600080fd5b80634cdad5061161027a5780634cdad506146103f55780634fb88847146106195780635578fdb21461062f57806357802c7d1461066357600080fd5b806339509351146105b9578063402d267d146105d95780634579c717146105f957600080fd5b806323b872dd1161030d578063313ce567116102e7578063313ce567146104dc57806336568abe1461051a578063367c98b81461053a57806338d52e0f1461058657600080fd5b806323b872dd1461046a578063248a9ca31461048a5780632f2ff15d146104ba57600080fd5b806307a2d13a1161034957806307a2d13a146103f5578063095ea7b3146104155780630a28a4771461043557806318160ddd1461045557600080fd5b806301e1d1141461037b57806301ffc9a7146103a357806306fdde03146103d357600080fd5b3661037657005b600080fd5b34801561038757600080fd5b50610390610aa8565b6040519081526020015b60405180910390f35b3480156103af57600080fd5b506103c36103be36600461266f565b610b4f565b604051901515815260200161039a565b3480156103df57600080fd5b506103e8610b86565b60405161039a91906126bd565b34801561040157600080fd5b506103906104103660046126f0565b610c18565b34801561042157600080fd5b506103c3610430366004612725565b610c25565b34801561044157600080fd5b506103906104503660046126f0565b610c3d565b34801561046157600080fd5b50600254610390565b34801561047657600080fd5b506103c361048536600461274f565b610c4a565b34801561049657600080fd5b506103906104a53660046126f0565b60009081526005602052604090206001015490565b3480156104c657600080fd5b506104da6104d536600461278b565b610c70565b005b3480156104e857600080fd5b5060405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161039a565b34801561052657600080fd5b506104da61053536600461278b565b610c9a565b34801561054657600080fd5b5061056e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161039a565b34801561059257600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061056e565b3480156105c557600080fd5b506103c36105d4366004612725565b610d1d565b3480156105e557600080fd5b506103906105f43660046127b7565b610d3f565b34801561060557600080fd5b506104da6106143660046127d2565b610d5d565b34801561062557600080fd5b5061039060075481565b34801561063b57600080fd5b5061056e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561066f57600080fd5b506104da61067e3660046126f0565b610eb0565b34801561068f57600080fd5b50610390600b5481565b3480156106a557600080fd5b50600c546103c39060ff1681565b3480156106bf57600080fd5b50610390600a5481565b3480156106d557600080fd5b506103907f2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b6703882181565b34801561070957600080fd5b5061039060085481565b34801561071f57600080fd5b506104da61072e366004612805565b610f55565b34801561073f57600080fd5b5061039061074e36600461278b565b6111f4565b34801561075f57600080fd5b5061039061076e3660046127b7565b6001600160a01b031660009081526020819052604090205490565b34801561079557600080fd5b506103907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b3480156107c957600080fd5b506104da6107d83660046126f0565b611284565b3480156107e957600080fd5b506103906107f83660046126f0565b6112de565b34801561080957600080fd5b506103c36108183660046126f0565b611378565b34801561082957600080fd5b506103c361083836600461278b565b611393565b34801561084957600080fd5b5061039061085836600461278b565b6113be565b34801561086957600080fd5b506103e8611400565b34801561087e57600080fd5b506104da61088d3660046127b7565b61140f565b34801561089e57600080fd5b50610390600081565b3480156108b357600080fd5b5061039060095481565b3480156108c957600080fd5b506103c36108d8366004612725565b6114bf565b3480156108e957600080fd5b506103c36108f8366004612725565b611545565b34801561090957600080fd5b506104da610918366004612835565b611553565b34801561092957600080fd5b506103906109383660046126f0565b6115c3565b34801561094957600080fd5b50610390610858366004612852565b34801561096457600080fd5b50610390610973366004612852565b6115d0565b34801561098457600080fd5b506103906109933660046127b7565b5060001990565b3480156109a657600080fd5b506103906109b53660046126f0565b6117c5565b3480156109c657600080fd5b506103906109d53660046127b7565b6117d2565b3480156109e657600080fd5b506104da6109f536600461278b565b6117f6565b348015610a0657600080fd5b50610390610a153660046127b7565b61181b565b348015610a2657600080fd5b506104da610a353660046126f0565b611839565b348015610a4657600080fd5b5061039061271081565b348015610a5c57600080fd5b50610390610a6b36600461288e565b6118d5565b348015610a7c57600080fd5b5061039060065481565b348015610a9257600080fd5b50610390600080516020612adf83398151915281565b6006546040516303d1689d60e11b81526000916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916307a2d13a91610afc9160040190815260200190565b602060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d91906128b8565b600754610b4a91906128e7565b905090565b60006001600160e01b03198216637965db0b60e01b1480610b8057506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060038054610b95906128fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc1906128fa565b8015610c0e5780601f10610be357610100808354040283529160200191610c0e565b820191906000526020600020905b815481529060010190602001808311610bf157829003601f168201915b5050505050905090565b6000610b80826000611905565b600033610c3381858561193c565b5060019392505050565b6000610b80826001611a60565b600033610c58858285611a92565b610c63858585611b0c565b60019150505b9392505050565b600082815260056020526040902060010154610c8b81611cb0565b610c958383611cbd565b505050565b6001600160a01b0381163314610d0f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610d198282611d43565b5050565b600033610c33818585610d3083836118d5565b610d3a91906128e7565b61193c565b6000610d49611daa565b610d54576000610b80565b60001992915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610dcc5760405162461bcd60e51b815260206004820152601460248201527313d3931657d193d497d4d510555497d59055531560621b6044820152606401610d06565b8160066000828254610dde9190612934565b909155507f00000000000000000000000000000000000000000000000000000000000000009050610e196001600160a01b0382168585611dc4565b8160076000828254610e2b91906128e7565b90915550610e6690506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016823085611e27565b60408051848152602081018490526001600160a01b038616917f0d6187bb3c7ec2dd0eb99b4bcedc1d45e5b74cd7ccd1dc49fb7c872b36e596a9910160405180910390a250505050565b600080516020612adf833981519152610ec881611cb0565b81612710811115610f125760405162461bcd60e51b8152602060048201526014602482015273494e56414c49445f42415349535f504f494e545360601b6044820152606401610d06565b6009839055604080518481523360208201527fed3a4a867b255a46c78a48b00e97b35edcb1926c252bcaf417f4f5a954101e5a91015b60405180910390a1505050565b600c5460ff16610f775760405162461bcd60e51b8152600401610d0690612947565b60008211610fc75760405162461bcd60e51b815260206004820152601760248201527f43414e4e4f545f535741505f5a45524f5f414d4f554e540000000000000000006044820152606401610d06565b6000806000610fd585611e5f565b6040516303d1689d60e11b81526004810184905292955090935091507f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038316906307a2d13a90602401602060405180830381865afa158015611047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106b91906128b8565b90506007548111156110b35760405162461bcd60e51b81526020600482015260116024820152704e4f545f454e4f5547485f4155524f524160781b6044820152606401610d06565b858110156111035760405162461bcd60e51b815260206004820152601960248201527f554e524541434845445f4d494e5f535741505f414d4f554e54000000000000006044820152606401610d06565b61110d83866128e7565b6006600082825461111e91906128e7565b9250508190555083600b600082825461113791906128e7565b9250508190555080600760008282546111509190612934565b9091555061116b90506001600160a01b03831633308a611e27565b61119f6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383611dc4565b337fe05accdc5a28561b36f8ca0a5f5bc4dd98c66d1fd989f6f462df10f2b051a71382896111cd87896128e7565b6040805193845260208401929092529082015260600160405180910390a250505050505050565b600c5460009060ff166112195760405162461bcd60e51b8152600401610d0690612947565b60085483101561126b5760405162461bcd60e51b815260206004820152601c60248201527f4c4553535f5448414e5f4d494e5f4445504f5349545f414d4f554e54000000006044820152606401610d06565b6000611276846117c5565b9050610c6933848684611ec3565b600080516020612adf83398151915261129c81611cb0565b6008829055604080518381523360208201527f0b6230e568a34b6f5ab9ddf98203464e0af7f22ce172aef16b6e1acdd738a28091015b60405180910390a15050565b6000806112ea83611e5f565b50506040516303d1689d60e11b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906307a2d13a90602401602060405180830381865afa158015611354573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6991906128b8565b60008160065410158015610b805750600c5460ff1692915050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60405162461bcd60e51b81526020600482015260146024820152732aa720ab20a4a620a12622afa32aa721aa24a7a760611b6044820152600090606401610d06565b606060048054610b95906128fa565b7f2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b6703882161143981611cb0565b600b805460009091556114766001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611dc4565b604080516001600160a01b03851681526020810183905233918101919091527fef94dcd078ea9d8454995eaf86ac2451857392a75bb331c272b7d56a71b7192590606001610f48565b600033816114cd82866118d5565b90508381101561152d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610d06565b61153a828686840361193c565b506001949350505050565b600033610c33818585611b0c565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561157d81611cb0565b600c805460ff1916831515908117909155604080519182523360208301527f956501fb29fec297bb8258701ee6a99883446290e4dba4f0f75e3d47d917cc7291016112d2565b6000610b80826001611905565b600c5460009060ff166115f55760405162461bcd60e51b8152600401610d0690612947565b600084116116455760405162461bcd60e51b815260206004820152601960248201527f43414e4e4f545f52454445454d5f5a45524f5f534841524553000000000000006044820152606401610d06565b336001600160a01b0383161461166057611660823386611a92565b670de0b6b3a7640000600061167460025490565b61167e8388612988565b61168891906129b5565b90506000826007548361169b9190612988565b6116a591906129b5565b9050600083600654846116b89190612988565b6116c291906129b5565b905081600760008282546116d69190612934565b9250508190555080600660008282546116ef9190612934565b909155506116ff90503389611f76565b6117336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168884611dc4565b6117676001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168883611dc4565b60408051898152602081018490529081018290526001600160a01b03808816919089169033907f094577f52c15f75d98e8b7e35fd170e61ac73ad9fb3135eae6674b39828d4d6e9060600160405180910390a4509695505050505050565b6000610b80826000611a60565b6001600160a01b038116600090815260208190526040812054610b80906000611905565b60008281526005602052604090206001015461181181611cb0565b610c958383611d43565b6001600160a01b038116600090815260208190526040812054610b80565b600080516020612adf83398151915261185181611cb0565b8161271081111561189b5760405162461bcd60e51b8152602060048201526014602482015273494e56414c49445f42415349535f504f494e545360601b6044820152606401610d06565b600a839055604080518481523360208201527f6b1f29362bd8791be9e453cd5c9eb1b0e1066ef28ceb7b4c5c61b5ded29b16619101610f48565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b601290565b60008061191160025490565b905080156119325761192d611924610aa8565b859083866120a8565b611934565b835b949350505050565b6001600160a01b03831661199e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610d06565b6001600160a01b0382166119ff5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610d06565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600080611a6c60025490565b9050831580611a79575080155b6119325761192d81611a89610aa8565b869190866120a8565b6000611a9e84846118d5565b90506000198114611b065781811015611af95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610d06565b611b06848484840361193c565b50505050565b6001600160a01b038316611b705760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610d06565b6001600160a01b038216611bd25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610d06565b6001600160a01b03831660009081526020819052604090205481811015611c4a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610d06565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611b06565b611cba8133612105565b50565b611cc78282611393565b610d195760008281526005602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611cff3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611d4d8282611393565b15610d195760008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600080611db5610aa8565b1180610b4a5750506002541590565b6040516001600160a01b038316602482015260448101829052610c9590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261215e565b6040516001600160a01b0380851660248301528316604482015260648101829052611b069085906323b872dd60e01b90608401611df0565b60008060008061271060095486611e769190612988565b611e8091906129b5565b90506000612710600a5483611e959190612988565b611e9f91906129b5565b9050611eab8287612934565b611eb58284612934565b909790965090945092505050565b8160076000828254611ed591906128e7565b90915550611f1090506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016853085611e27565b611f1a8382612230565b826001600160a01b0316846001600160a01b03167fd2491a9b4fe81a7cd4511e8b7b7743951b061dad5bed7da8a7795b080ee08c7e8484604051611f68929190918252602082015260400190565b60405180910390a350505050565b6001600160a01b038216611fd65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610d06565b6001600160a01b0382166000908152602081905260409020548181101561204a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610d06565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6000806120b68686866122ef565b905060018360028111156120cc576120cc6129d7565b1480156120e95750600084806120e4576120e461299f565b868809115b156120fc576120f96001826128e7565b90505b95945050505050565b61210f8282611393565b610d195761211c8161239e565b6121278360206123b0565b6040516020016121389291906129ed565b60408051601f198184030181529082905262461bcd60e51b8252610d06916004016126bd565b60006121b3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661254c9092919063ffffffff16565b805190915015610c9557808060200190518101906121d19190612a62565b610c955760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d06565b6001600160a01b0382166122865760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610d06565b806002600082825461229891906128e7565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60008080600019858709858702925082811083820303915050806000036123295783828161231f5761231f61299f565b0492505050610c69565b80841161233557600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6060610b806001600160a01b03831660145b606060006123bf836002612988565b6123ca9060026128e7565b67ffffffffffffffff8111156123e2576123e2612a7f565b6040519080825280601f01601f19166020018201604052801561240c576020820181803683370190505b509050600360fc1b8160008151811061242757612427612a95565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061245657612456612a95565b60200101906001600160f81b031916908160001a905350600061247a846002612988565b6124859060016128e7565b90505b60018111156124fd576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106124b9576124b9612a95565b1a60f81b8282815181106124cf576124cf612a95565b60200101906001600160f81b031916908160001a90535060049490941c936124f681612aab565b9050612488565b508315610c695760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d06565b6060611934848460008585600080866001600160a01b031685876040516125739190612ac2565b60006040518083038185875af1925050503d80600081146125b0576040519150601f19603f3d011682016040523d82523d6000602084013e6125b5565b606091505b50915091506125c6878383876125d1565b979650505050505050565b60608315612640578251600003612639576001600160a01b0385163b6126395760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d06565b5081611934565b61193483838151156126555781518083602001fd5b8060405162461bcd60e51b8152600401610d0691906126bd565b60006020828403121561268157600080fd5b81356001600160e01b031981168114610c6957600080fd5b60005b838110156126b457818101518382015260200161269c565b50506000910152565b60208152600082518060208401526126dc816040850160208701612699565b601f01601f19169190910160400192915050565b60006020828403121561270257600080fd5b5035919050565b80356001600160a01b038116811461272057600080fd5b919050565b6000806040838503121561273857600080fd5b61274183612709565b946020939093013593505050565b60008060006060848603121561276457600080fd5b61276d84612709565b925061277b60208501612709565b9150604084013590509250925092565b6000806040838503121561279e57600080fd5b823591506127ae60208401612709565b90509250929050565b6000602082840312156127c957600080fd5b610c6982612709565b6000806000606084860312156127e757600080fd5b6127f084612709565b95602085013595506040909401359392505050565b6000806040838503121561281857600080fd5b50508035926020909101359150565b8015158114611cba57600080fd5b60006020828403121561284757600080fd5b8135610c6981612827565b60008060006060848603121561286757600080fd5b8335925061287760208501612709565b915061288560408501612709565b90509250925092565b600080604083850312156128a157600080fd5b6128aa83612709565b91506127ae60208401612709565b6000602082840312156128ca57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610b8057610b806128d1565b600181811c9082168061290e57607f821691505b60208210810361292e57634e487b7160e01b600052602260045260246000fd5b50919050565b81810381811115610b8057610b806128d1565b60208082526021908201527f434f4e54524143545f49535f4e4f545f46554c4c595f4f5045524154494f4e416040820152601360fa1b606082015260800190565b8082028115828204841417610b8057610b806128d1565b634e487b7160e01b600052601260045260246000fd5b6000826129d257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612a25816017850160208801612699565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612a56816028840160208801612699565b01602801949350505050565b600060208284031215612a7457600080fd5b8151610c6981612827565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081612aba57612aba6128d1565b506000190190565b60008251612ad4818460208701612699565b919091019291505056fe97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929a2646970667358221220a0c83d60fc27c28238c26584329bdf6430b139ebceb8755045740cdbd5c753db64736f6c63430008120033",
    "sourceMap": "474:11351:1:-:0;;;2051:1260;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2414:12;2443;2457:14;2042:5:55;:13;2443:12:1;2042:5:55;:13;:::i;:::-;-1:-1:-1;2065:7:55;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;1977:12:57;1991:19;2014:28;2035:6;2014:20;;;:28;;:::i;:::-;1976:66;;;;2064:7;:42;;2090:16;:14;;;;;:16;;:::i;:::-;2064:42;;;2074:13;2064:42;2052:54;;;;-1:-1:-1;;;;;;;2116:15:57;;;2498:19:1;715:6:::2;1967:35:::0;::::2;;1959:68;;;::::0;-1:-1:-1;;;1959:68:1;;5174:2:70;1959:68:1::2;::::0;::::2;5156:21:70::0;5213:2;5193:18;;;5186:30;5252:22;5232:18;;;5225:50;5292:18;;1959:68:1::2;;;;;;;;;2544:25:::3;715:6;1967:12;:35;;1959:68;;;::::0;-1:-1:-1;;;1959:68:1;;5174:2:70;1959:68:1::3;::::0;::::3;5156:21:70::0;5213:2;5193:18;;;5186:30;5252:22;5232:18;;;5225:50;5292:18;;1959:68:1::3;4972:344:70::0;1959:68:1::3;-1:-1:-1::0;;;;;2606:25:1;::::4;::::0;;::::4;::::0;:71:::4;;-1:-1:-1::0;;;;;;2651:26:1;::::4;::::0;::::4;2606:71;:122;;;;-1:-1:-1::0;;;;;;2697:31:1;::::4;::::0;::::4;2606:122;:177;;;;-1:-1:-1::0;;;;;;2748:35:1;::::4;::::0;::::4;2606:177;2585:244;;;::::0;-1:-1:-1;;;2585:244:1;;5523:2:70;2585:244:1::4;::::0;::::4;5505:21:70::0;5562:2;5542:18;;;5535:30;5601:22;5581:18;;;5574:50;5641:18;;2585:244:1::4;5321:344:70::0;2585:244:1::4;-1:-1:-1::0;;;;;2839:24:1;;::::4;;::::0;2873:26;::::4;;::::0;2909:16:::4;:36:::0;;;2955:18:::4;:40:::0;;;3005:24:::4;:52:::0;;;3067:16:::4;:23:::0;;-1:-1:-1;;3067:23:1::4;3086:4;3067:23;::::0;;3101:34:::4;765:23;3124:10;3101;:34::i;:::-;3145:42;2072:4:52;3176:10:1;3145;:42::i;:::-;3197:49;839:31;3228:17:::0;3197:10:::4;:49::i;:::-;3256:48;916:26;3282:21:::0;3256:10:::4;:48::i;:::-;2037:1:::3;2051:1260:::2;::::0;;;;;;;;;474:11351;;2281:546:57;2458:56;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2458:56:57;-1:-1:-1;;;2458:56:57;;;2418:106;;2348:4;;;;;;;;-1:-1:-1;;;;;2418:26:57;;;:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2371:153;;;;2538:7;:39;;;;;2575:2;2549:15;:22;:28;;2538:39;2534:260;;;2593:24;2631:15;2620:38;;;;;;;;;;;;:::i;:::-;2593:65;-1:-1:-1;2696:15:57;2676:35;;2672:112;;2739:4;;2751:16;;-1:-1:-1;2281:546:57;-1:-1:-1;;;;2281:546:57:o;2672:112::-;2579:215;2534:260;-1:-1:-1;2811:5:57;;;;-1:-1:-1;2281:546:57;-1:-1:-1;;;2281:546:57:o;3091:91:55:-;3173:2;;3091:91::o;7461:233:52:-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:52;;;;;;;;;;;;7539:149;;7582:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7582:29:52;;;;;;;;;:36;;-1:-1:-1;;7582:36:52;7614:4;7582:36;;;7664:12;719:10:62;;640:96;7664:12:52;-1:-1:-1;;;;;7637:40:52;7655:7;-1:-1:-1;;;;;7637:40:52;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;14:177:70:-;93:13;;-1:-1:-1;;;;;135:31:70;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:250;413:1;423:113;437:6;434:1;431:13;423:113;;;513:11;;;507:18;494:11;;;487:39;459:2;452:10;423:113;;;-1:-1:-1;;570:1:70;552:16;;545:27;328:250::o;583:699::-;637:5;690:3;683:4;675:6;671:17;667:27;657:55;;708:1;705;698:12;657:55;731:13;;-1:-1:-1;;;;;793:10:70;;;790:36;;;806:18;;:::i;:::-;881:2;875:9;849:2;935:13;;-1:-1:-1;;931:22:70;;;955:2;927:31;923:40;911:53;;;979:18;;;999:22;;;976:46;973:72;;;1025:18;;:::i;:::-;1065:10;1061:2;1054:22;1100:2;1092:6;1085:18;1146:3;1139:4;1134:2;1126:6;1122:15;1118:26;1115:35;1112:55;;;1163:1;1160;1153:12;1112:55;1176:76;1249:2;1242:4;1234:6;1230:17;1223:4;1215:6;1211:17;1176:76;:::i;:::-;1270:6;583:699;-1:-1:-1;;;;;;583:699:70:o;1287:1091::-;1449:6;1457;1465;1473;1481;1489;1497;1505;1513;1566:3;1554:9;1545:7;1541:23;1537:33;1534:53;;;1583:1;1580;1573:12;1534:53;1606:40;1636:9;1606:40;:::i;:::-;1596:50;;1665:49;1710:2;1699:9;1695:18;1665:49;:::i;:::-;1655:59;;1733:49;1778:2;1767:9;1763:18;1733:49;:::i;:::-;1723:59;;1801:49;1846:2;1835:9;1831:18;1801:49;:::i;:::-;1894:3;1879:19;;1873:26;1791:59;;-1:-1:-1;;;;;;1948:14:70;;;1945:34;;;1975:1;1972;1965:12;1945:34;1998:61;2051:7;2042:6;2031:9;2027:22;1998:61;:::i;:::-;1988:71;;2105:3;2094:9;2090:19;2084:26;2068:42;;2135:2;2125:8;2122:16;2119:36;;;2151:1;2148;2141:12;2119:36;;2174:63;2229:7;2218:8;2207:9;2203:24;2174:63;:::i;:::-;2164:73;;;2277:3;2266:9;2262:19;2256:26;2246:36;;2322:3;2311:9;2307:19;2301:26;2291:36;;2367:3;2356:9;2352:19;2346:26;2336:36;;1287:1091;;;;;;;;;;;:::o;2383:380::-;2462:1;2458:12;;;;2505;;;2526:61;;2580:4;2572:6;2568:17;2558:27;;2526:61;2633:2;2625:6;2622:14;2602:18;2599:38;2596:161;;2679:10;2674:3;2670:20;2667:1;2660:31;2714:4;2711:1;2704:15;2742:4;2739:1;2732:15;2596:161;;2383:380;;;:::o;2894:545::-;2996:2;2991:3;2988:11;2985:448;;;3032:1;3057:5;3053:2;3046:17;3102:4;3098:2;3088:19;3172:2;3160:10;3156:19;3153:1;3149:27;3143:4;3139:38;3208:4;3196:10;3193:20;3190:47;;;-1:-1:-1;3231:4:70;3190:47;3286:2;3281:3;3277:12;3274:1;3270:20;3264:4;3260:31;3250:41;;3341:82;3359:2;3352:5;3349:13;3341:82;;;3404:17;;;3385:1;3374:13;3341:82;;;3345:3;;;2985:448;2894:545;;;:::o;3615:1352::-;3735:10;;-1:-1:-1;;;;;3757:30:70;;3754:56;;;3790:18;;:::i;:::-;3819:97;3909:6;3869:38;3901:4;3895:11;3869:38;:::i;:::-;3863:4;3819:97;:::i;:::-;3971:4;;4035:2;4024:14;;4052:1;4047:663;;;;4754:1;4771:6;4768:89;;;-1:-1:-1;4823:19:70;;;4817:26;4768:89;-1:-1:-1;;3572:1:70;3568:11;;;3564:24;3560:29;3550:40;3596:1;3592:11;;;3547:57;4870:81;;4017:944;;4047:663;2841:1;2834:14;;;2878:4;2865:18;;-1:-1:-1;;4083:20:70;;;4201:236;4215:7;4212:1;4209:14;4201:236;;;4304:19;;;4298:26;4283:42;;4396:27;;;;4364:1;4352:14;;;;4231:19;;4201:236;;;4205:3;4465:6;4456:7;4453:19;4450:201;;;4526:19;;;4520:26;-1:-1:-1;;4609:1:70;4605:14;;;4621:3;4601:24;4597:37;4593:42;4578:58;4563:74;;4450:201;-1:-1:-1;;;;;4697:1:70;4681:14;;;4677:22;4664:36;;-1:-1:-1;3615:1352:70:o;5670:287::-;5799:3;5837:6;5831:13;5853:66;5912:6;5907:3;5900:4;5892:6;5888:17;5853:66;:::i;:::-;5935:16;;;;;5670:287;-1:-1:-1;;5670:287:70:o;5962:184::-;6032:6;6085:2;6073:9;6064:7;6060:23;6056:32;6053:52;;;6101:1;6098;6091:12;6053:52;-1:-1:-1;6124:16:70;;5962:184;-1:-1:-1;5962:184:70:o;:::-;474:11351:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061036f5760003560e01c806370a08231116101c6578063b3d7f6b9116100f7578063d905777e11610095578063dd62ed3e1161006f578063dd62ed3e14610a50578063e1437bcb14610a70578063ef8b30f71461099a578063f5b541a614610a8657600080fd5b8063d905777e146109fa578063da9c4b6714610a1a578063dd0081c714610a3a57600080fd5b8063c63d75b6116100d1578063c63d75b614610978578063c6e6f5921461099a578063ce96cb77146109ba578063d547741f146109da57600080fd5b8063b3d7f6b91461091d578063b460af941461093d578063ba0876521461095857600080fd5b806395d89b4111610164578063a22f23921161013e578063a22f2392146108a7578063a457c2d7146108bd578063a9059cbb146108dd578063a915277c146108fd57600080fd5b806395d89b411461085d5780639a47b53c14610872578063a217fddf1461089257600080fd5b806389197faf116101a057806389197faf146107dd57806390c69fe3146107fd57806391d148541461081d57806394bf804d1461083d57600080fd5b806370a082311461075357806375b238fc1461078957806384780205146107bd57600080fd5b806339509351116102a0578063597cc4d11161023e57806362a2a47c1161021857806362a2a47c146106c9578063645006ca146106fd5780636505bef4146107135780636e553f651461073357600080fd5b8063597cc4d1146106835780635ade1904146106995780635e30d67e146106b357600080fd5b80634cdad5061161027a5780634cdad506146103f55780634fb88847146106195780635578fdb21461062f57806357802c7d1461066357600080fd5b806339509351146105b9578063402d267d146105d95780634579c717146105f957600080fd5b806323b872dd1161030d578063313ce567116102e7578063313ce567146104dc57806336568abe1461051a578063367c98b81461053a57806338d52e0f1461058657600080fd5b806323b872dd1461046a578063248a9ca31461048a5780632f2ff15d146104ba57600080fd5b806307a2d13a1161034957806307a2d13a146103f5578063095ea7b3146104155780630a28a4771461043557806318160ddd1461045557600080fd5b806301e1d1141461037b57806301ffc9a7146103a357806306fdde03146103d357600080fd5b3661037657005b600080fd5b34801561038757600080fd5b50610390610aa8565b6040519081526020015b60405180910390f35b3480156103af57600080fd5b506103c36103be36600461266f565b610b4f565b604051901515815260200161039a565b3480156103df57600080fd5b506103e8610b86565b60405161039a91906126bd565b34801561040157600080fd5b506103906104103660046126f0565b610c18565b34801561042157600080fd5b506103c3610430366004612725565b610c25565b34801561044157600080fd5b506103906104503660046126f0565b610c3d565b34801561046157600080fd5b50600254610390565b34801561047657600080fd5b506103c361048536600461274f565b610c4a565b34801561049657600080fd5b506103906104a53660046126f0565b60009081526005602052604090206001015490565b3480156104c657600080fd5b506104da6104d536600461278b565b610c70565b005b3480156104e857600080fd5b5060405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161039a565b34801561052657600080fd5b506104da61053536600461278b565b610c9a565b34801561054657600080fd5b5061056e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161039a565b34801561059257600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061056e565b3480156105c557600080fd5b506103c36105d4366004612725565b610d1d565b3480156105e557600080fd5b506103906105f43660046127b7565b610d3f565b34801561060557600080fd5b506104da6106143660046127d2565b610d5d565b34801561062557600080fd5b5061039060075481565b34801561063b57600080fd5b5061056e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561066f57600080fd5b506104da61067e3660046126f0565b610eb0565b34801561068f57600080fd5b50610390600b5481565b3480156106a557600080fd5b50600c546103c39060ff1681565b3480156106bf57600080fd5b50610390600a5481565b3480156106d557600080fd5b506103907f2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b6703882181565b34801561070957600080fd5b5061039060085481565b34801561071f57600080fd5b506104da61072e366004612805565b610f55565b34801561073f57600080fd5b5061039061074e36600461278b565b6111f4565b34801561075f57600080fd5b5061039061076e3660046127b7565b6001600160a01b031660009081526020819052604090205490565b34801561079557600080fd5b506103907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b3480156107c957600080fd5b506104da6107d83660046126f0565b611284565b3480156107e957600080fd5b506103906107f83660046126f0565b6112de565b34801561080957600080fd5b506103c36108183660046126f0565b611378565b34801561082957600080fd5b506103c361083836600461278b565b611393565b34801561084957600080fd5b5061039061085836600461278b565b6113be565b34801561086957600080fd5b506103e8611400565b34801561087e57600080fd5b506104da61088d3660046127b7565b61140f565b34801561089e57600080fd5b50610390600081565b3480156108b357600080fd5b5061039060095481565b3480156108c957600080fd5b506103c36108d8366004612725565b6114bf565b3480156108e957600080fd5b506103c36108f8366004612725565b611545565b34801561090957600080fd5b506104da610918366004612835565b611553565b34801561092957600080fd5b506103906109383660046126f0565b6115c3565b34801561094957600080fd5b50610390610858366004612852565b34801561096457600080fd5b50610390610973366004612852565b6115d0565b34801561098457600080fd5b506103906109933660046127b7565b5060001990565b3480156109a657600080fd5b506103906109b53660046126f0565b6117c5565b3480156109c657600080fd5b506103906109d53660046127b7565b6117d2565b3480156109e657600080fd5b506104da6109f536600461278b565b6117f6565b348015610a0657600080fd5b50610390610a153660046127b7565b61181b565b348015610a2657600080fd5b506104da610a353660046126f0565b611839565b348015610a4657600080fd5b5061039061271081565b348015610a5c57600080fd5b50610390610a6b36600461288e565b6118d5565b348015610a7c57600080fd5b5061039060065481565b348015610a9257600080fd5b50610390600080516020612adf83398151915281565b6006546040516303d1689d60e11b81526000916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916307a2d13a91610afc9160040190815260200190565b602060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d91906128b8565b600754610b4a91906128e7565b905090565b60006001600160e01b03198216637965db0b60e01b1480610b8057506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060038054610b95906128fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc1906128fa565b8015610c0e5780601f10610be357610100808354040283529160200191610c0e565b820191906000526020600020905b815481529060010190602001808311610bf157829003601f168201915b5050505050905090565b6000610b80826000611905565b600033610c3381858561193c565b5060019392505050565b6000610b80826001611a60565b600033610c58858285611a92565b610c63858585611b0c565b60019150505b9392505050565b600082815260056020526040902060010154610c8b81611cb0565b610c958383611cbd565b505050565b6001600160a01b0381163314610d0f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610d198282611d43565b5050565b600033610c33818585610d3083836118d5565b610d3a91906128e7565b61193c565b6000610d49611daa565b610d54576000610b80565b60001992915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610dcc5760405162461bcd60e51b815260206004820152601460248201527313d3931657d193d497d4d510555497d59055531560621b6044820152606401610d06565b8160066000828254610dde9190612934565b909155507f00000000000000000000000000000000000000000000000000000000000000009050610e196001600160a01b0382168585611dc4565b8160076000828254610e2b91906128e7565b90915550610e6690506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016823085611e27565b60408051848152602081018490526001600160a01b038616917f0d6187bb3c7ec2dd0eb99b4bcedc1d45e5b74cd7ccd1dc49fb7c872b36e596a9910160405180910390a250505050565b600080516020612adf833981519152610ec881611cb0565b81612710811115610f125760405162461bcd60e51b8152602060048201526014602482015273494e56414c49445f42415349535f504f494e545360601b6044820152606401610d06565b6009839055604080518481523360208201527fed3a4a867b255a46c78a48b00e97b35edcb1926c252bcaf417f4f5a954101e5a91015b60405180910390a1505050565b600c5460ff16610f775760405162461bcd60e51b8152600401610d0690612947565b60008211610fc75760405162461bcd60e51b815260206004820152601760248201527f43414e4e4f545f535741505f5a45524f5f414d4f554e540000000000000000006044820152606401610d06565b6000806000610fd585611e5f565b6040516303d1689d60e11b81526004810184905292955090935091507f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038316906307a2d13a90602401602060405180830381865afa158015611047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106b91906128b8565b90506007548111156110b35760405162461bcd60e51b81526020600482015260116024820152704e4f545f454e4f5547485f4155524f524160781b6044820152606401610d06565b858110156111035760405162461bcd60e51b815260206004820152601960248201527f554e524541434845445f4d494e5f535741505f414d4f554e54000000000000006044820152606401610d06565b61110d83866128e7565b6006600082825461111e91906128e7565b9250508190555083600b600082825461113791906128e7565b9250508190555080600760008282546111509190612934565b9091555061116b90506001600160a01b03831633308a611e27565b61119f6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383611dc4565b337fe05accdc5a28561b36f8ca0a5f5bc4dd98c66d1fd989f6f462df10f2b051a71382896111cd87896128e7565b6040805193845260208401929092529082015260600160405180910390a250505050505050565b600c5460009060ff166112195760405162461bcd60e51b8152600401610d0690612947565b60085483101561126b5760405162461bcd60e51b815260206004820152601c60248201527f4c4553535f5448414e5f4d494e5f4445504f5349545f414d4f554e54000000006044820152606401610d06565b6000611276846117c5565b9050610c6933848684611ec3565b600080516020612adf83398151915261129c81611cb0565b6008829055604080518381523360208201527f0b6230e568a34b6f5ab9ddf98203464e0af7f22ce172aef16b6e1acdd738a28091015b60405180910390a15050565b6000806112ea83611e5f565b50506040516303d1689d60e11b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906307a2d13a90602401602060405180830381865afa158015611354573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6991906128b8565b60008160065410158015610b805750600c5460ff1692915050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60405162461bcd60e51b81526020600482015260146024820152732aa720ab20a4a620a12622afa32aa721aa24a7a760611b6044820152600090606401610d06565b606060048054610b95906128fa565b7f2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b6703882161143981611cb0565b600b805460009091556114766001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611dc4565b604080516001600160a01b03851681526020810183905233918101919091527fef94dcd078ea9d8454995eaf86ac2451857392a75bb331c272b7d56a71b7192590606001610f48565b600033816114cd82866118d5565b90508381101561152d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610d06565b61153a828686840361193c565b506001949350505050565b600033610c33818585611b0c565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561157d81611cb0565b600c805460ff1916831515908117909155604080519182523360208301527f956501fb29fec297bb8258701ee6a99883446290e4dba4f0f75e3d47d917cc7291016112d2565b6000610b80826001611905565b600c5460009060ff166115f55760405162461bcd60e51b8152600401610d0690612947565b600084116116455760405162461bcd60e51b815260206004820152601960248201527f43414e4e4f545f52454445454d5f5a45524f5f534841524553000000000000006044820152606401610d06565b336001600160a01b0383161461166057611660823386611a92565b670de0b6b3a7640000600061167460025490565b61167e8388612988565b61168891906129b5565b90506000826007548361169b9190612988565b6116a591906129b5565b9050600083600654846116b89190612988565b6116c291906129b5565b905081600760008282546116d69190612934565b9250508190555080600660008282546116ef9190612934565b909155506116ff90503389611f76565b6117336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168884611dc4565b6117676001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168883611dc4565b60408051898152602081018490529081018290526001600160a01b03808816919089169033907f094577f52c15f75d98e8b7e35fd170e61ac73ad9fb3135eae6674b39828d4d6e9060600160405180910390a4509695505050505050565b6000610b80826000611a60565b6001600160a01b038116600090815260208190526040812054610b80906000611905565b60008281526005602052604090206001015461181181611cb0565b610c958383611d43565b6001600160a01b038116600090815260208190526040812054610b80565b600080516020612adf83398151915261185181611cb0565b8161271081111561189b5760405162461bcd60e51b8152602060048201526014602482015273494e56414c49445f42415349535f504f494e545360601b6044820152606401610d06565b600a839055604080518481523360208201527f6b1f29362bd8791be9e453cd5c9eb1b0e1066ef28ceb7b4c5c61b5ded29b16619101610f48565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b601290565b60008061191160025490565b905080156119325761192d611924610aa8565b859083866120a8565b611934565b835b949350505050565b6001600160a01b03831661199e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610d06565b6001600160a01b0382166119ff5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610d06565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600080611a6c60025490565b9050831580611a79575080155b6119325761192d81611a89610aa8565b869190866120a8565b6000611a9e84846118d5565b90506000198114611b065781811015611af95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610d06565b611b06848484840361193c565b50505050565b6001600160a01b038316611b705760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610d06565b6001600160a01b038216611bd25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610d06565b6001600160a01b03831660009081526020819052604090205481811015611c4a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610d06565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611b06565b611cba8133612105565b50565b611cc78282611393565b610d195760008281526005602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611cff3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611d4d8282611393565b15610d195760008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600080611db5610aa8565b1180610b4a5750506002541590565b6040516001600160a01b038316602482015260448101829052610c9590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261215e565b6040516001600160a01b0380851660248301528316604482015260648101829052611b069085906323b872dd60e01b90608401611df0565b60008060008061271060095486611e769190612988565b611e8091906129b5565b90506000612710600a5483611e959190612988565b611e9f91906129b5565b9050611eab8287612934565b611eb58284612934565b909790965090945092505050565b8160076000828254611ed591906128e7565b90915550611f1090506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016853085611e27565b611f1a8382612230565b826001600160a01b0316846001600160a01b03167fd2491a9b4fe81a7cd4511e8b7b7743951b061dad5bed7da8a7795b080ee08c7e8484604051611f68929190918252602082015260400190565b60405180910390a350505050565b6001600160a01b038216611fd65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610d06565b6001600160a01b0382166000908152602081905260409020548181101561204a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610d06565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6000806120b68686866122ef565b905060018360028111156120cc576120cc6129d7565b1480156120e95750600084806120e4576120e461299f565b868809115b156120fc576120f96001826128e7565b90505b95945050505050565b61210f8282611393565b610d195761211c8161239e565b6121278360206123b0565b6040516020016121389291906129ed565b60408051601f198184030181529082905262461bcd60e51b8252610d06916004016126bd565b60006121b3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661254c9092919063ffffffff16565b805190915015610c9557808060200190518101906121d19190612a62565b610c955760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d06565b6001600160a01b0382166122865760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610d06565b806002600082825461229891906128e7565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60008080600019858709858702925082811083820303915050806000036123295783828161231f5761231f61299f565b0492505050610c69565b80841161233557600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6060610b806001600160a01b03831660145b606060006123bf836002612988565b6123ca9060026128e7565b67ffffffffffffffff8111156123e2576123e2612a7f565b6040519080825280601f01601f19166020018201604052801561240c576020820181803683370190505b509050600360fc1b8160008151811061242757612427612a95565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061245657612456612a95565b60200101906001600160f81b031916908160001a905350600061247a846002612988565b6124859060016128e7565b90505b60018111156124fd576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106124b9576124b9612a95565b1a60f81b8282815181106124cf576124cf612a95565b60200101906001600160f81b031916908160001a90535060049490941c936124f681612aab565b9050612488565b508315610c695760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d06565b6060611934848460008585600080866001600160a01b031685876040516125739190612ac2565b60006040518083038185875af1925050503d80600081146125b0576040519150601f19603f3d011682016040523d82523d6000602084013e6125b5565b606091505b50915091506125c6878383876125d1565b979650505050505050565b60608315612640578251600003612639576001600160a01b0385163b6126395760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d06565b5081611934565b61193483838151156126555781518083602001fd5b8060405162461bcd60e51b8152600401610d0691906126bd565b60006020828403121561268157600080fd5b81356001600160e01b031981168114610c6957600080fd5b60005b838110156126b457818101518382015260200161269c565b50506000910152565b60208152600082518060208401526126dc816040850160208701612699565b601f01601f19169190910160400192915050565b60006020828403121561270257600080fd5b5035919050565b80356001600160a01b038116811461272057600080fd5b919050565b6000806040838503121561273857600080fd5b61274183612709565b946020939093013593505050565b60008060006060848603121561276457600080fd5b61276d84612709565b925061277b60208501612709565b9150604084013590509250925092565b6000806040838503121561279e57600080fd5b823591506127ae60208401612709565b90509250929050565b6000602082840312156127c957600080fd5b610c6982612709565b6000806000606084860312156127e757600080fd5b6127f084612709565b95602085013595506040909401359392505050565b6000806040838503121561281857600080fd5b50508035926020909101359150565b8015158114611cba57600080fd5b60006020828403121561284757600080fd5b8135610c6981612827565b60008060006060848603121561286757600080fd5b8335925061287760208501612709565b915061288560408501612709565b90509250925092565b600080604083850312156128a157600080fd5b6128aa83612709565b91506127ae60208401612709565b6000602082840312156128ca57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610b8057610b806128d1565b600181811c9082168061290e57607f821691505b60208210810361292e57634e487b7160e01b600052602260045260246000fd5b50919050565b81810381811115610b8057610b806128d1565b60208082526021908201527f434f4e54524143545f49535f4e4f545f46554c4c595f4f5045524154494f4e416040820152601360fa1b606082015260800190565b8082028115828204841417610b8057610b806128d1565b634e487b7160e01b600052601260045260246000fd5b6000826129d257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612a25816017850160208801612699565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612a56816028840160208801612699565b01602801949350505050565b600060208284031215612a7457600080fd5b8151610c6981612827565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081612aba57612aba6128d1565b506000190190565b60008251612ad4818460208701612699565b919091019291505056fe97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929a2646970667358221220a0c83d60fc27c28238c26584329bdf6430b139ebceb8755045740cdbd5c753db64736f6c63430008120033",
    "sourceMap": "474:11351:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5685:202;;;;;;;;;;;;;:::i;:::-;;;160:25:70;;;148:2;133:18;5685:202:1;;;;;;;;2606::52;;;;;;;;;;-1:-1:-1;2606:202:52;;;;;:::i;:::-;;:::i;:::-;;;652:14:70;;645:22;627:41;;615:2;600:18;2606:202:52;487:187:70;2154:98:55;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3951:163:57:-;;;;;;;;;;-1:-1:-1;3951:163:57;;;;;:::i;:::-;;:::i;4431:197:55:-;;;;;;;;;;-1:-1:-1;4431:197:55;;;;;:::i;:::-;;:::i;5313:154:57:-;;;;;;;;;;-1:-1:-1;5313:154:57;;;;;:::i;:::-;;:::i;3242:106:55:-;;;;;;;;;;-1:-1:-1;3329:12:55;;3242:106;;5190:286;;;;;;;;;;-1:-1:-1;5190:286:55;;;;;:::i;:::-;;:::i;4378:129:52:-;;;;;;;;;;-1:-1:-1;4378:129:52;;;;;:::i;:::-;4452:7;4478:12;;;:6;:12;;;;;:22;;;;4378:129;4803:145;;;;;;;;;;-1:-1:-1;4803:145:52;;;;;:::i;:::-;;:::i;:::-;;3237:121:57;;;;;;;;;;-1:-1:-1;3237:121:57;;3088:4:70;3342:9:57;3076:17:70;3058:36;;3046:2;3031:18;3237:121:57;2916:184:70;5912:214:52;;;;;;;;;;-1:-1:-1;5912:214:52;;;;;:::i;:::-;;:::i;1022:35:1:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3269:32:70;;;3251:51;;3239:2;3224:18;1022:35:1;3105:203:70;3402:103:57;;;;;;;;;;-1:-1:-1;3491:6:57;3402:103;;5871:234:55;;;;;;;;;;-1:-1:-1;5871:234:55;;;;;:::i;:::-;;:::i;4163:148:57:-;;;;;;;;;;-1:-1:-1;4163:148:57;;;;;:::i;:::-;;:::i;5017:476:1:-;;;;;;;;;;-1:-1:-1;5017:476:1;;;;;:::i;:::-;;:::i;1198:28::-;;;;;;;;;;;;;;;;1063:36;;;;;;;;;;;;;;;3556:254;;;;;;;;;;-1:-1:-1;3556:254:1;;;;;:::i;:::-;;:::i;1581:33::-;;;;;;;;;;;;;;;;1621:28;;;;;;;;;;-1:-1:-1;1621:28:1;;;;;;;;1455:39;;;;;;;;;;;;;;;;794:76;;;;;;;;;;;;839:31;794:76;;1232:31;;;;;;;;;;;;;;;;8823:1198;;;;;;;;;;-1:-1:-1;8823:1198:1;;;;;:::i;:::-;;:::i;5978:351::-;;;;;;;;;;-1:-1:-1;5978:351:1;;;;;:::i;:::-;;:::i;3406:125:55:-;;;;;;;;;;-1:-1:-1;3406:125:55;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:55;3480:7;3506:18;;;;;;;;;;;;3406:125;728:60:1;;;;;;;;;;;;765:23;728:60;;3352:198;;;;;;;;;;-1:-1:-1;3352:198:1;;;;;:::i;:::-;;:::i;8294:242::-;;;;;;;;;;-1:-1:-1;8294:242:1;;;;;:::i;:::-;;:::i;4675:144::-;;;;;;;;;;-1:-1:-1;4675:144:1;;;;;:::i;:::-;;:::i;2895:145:52:-;;;;;;;;;;-1:-1:-1;2895:145:52;;;;;:::i;:::-;;:::i;7899:118:1:-;;;;;;;;;;-1:-1:-1;7899:118:1;;;;;:::i;:::-;;:::i;2365:102:55:-;;;;;;;;;;;;;:::i;10092:346:1:-;;;;;;;;;;-1:-1:-1;10092:346:1;;;;;:::i;:::-;;:::i;2027:49:52:-;;;;;;;;;;-1:-1:-1;2027:49:52;2072:4;2027:49;;1341:33:1;;;;;;;;;;;;;;;;6592:427:55;;;;;;;;;;-1:-1:-1;6592:427:55;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;;;;;-1:-1:-1;3727:189:55;;;;;:::i;:::-;;:::i;4308:228:1:-;;;;;;;;;;-1:-1:-1;4308:228:1;;;;;:::i;:::-;;:::i;5109:150:57:-;;;;;;;;;;-1:-1:-1;5109:150:57;;;;;:::i;:::-;;:::i;8059:131:1:-;;;;;;;;;;-1:-1:-1;8059:131:1;;;;;:::i;6636:1220::-;;;;;;;;;;-1:-1:-1;6636:1220:1;;;;;:::i;:::-;;:::i;4357:114:57:-;;;;;;;;;;-1:-1:-1;4357:114:57;;;;;:::i;:::-;-1:-1:-1;;;4447:17:57;4357:114;3734:163;;;;;;;;;;-1:-1:-1;3734:163:57;;;;;:::i;:::-;;:::i;4521:161::-;;;;;;;;;;-1:-1:-1;4521:161:57;;;;;:::i;:::-;;:::i;5228:147:52:-;;;;;;;;;;-1:-1:-1;5228:147:52;;;;;:::i;:::-;;:::i;4730:121:57:-;;;;;;;;;;-1:-1:-1;4730:121:57;;;;;:::i;:::-;;:::i;3816:274:1:-;;;;;;;;;;-1:-1:-1;3816:274:1;;;;;:::i;:::-;;:::i;669:52::-;;;;;;;;;;;;715:6;669:52;;3974:149:55;;;;;;;;;;-1:-1:-1;3974:149:55;;;;;:::i;:::-;;:::i;1165:27:1:-;;;;;;;;;;;;;;;;876:66;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;876:66:1;;5685:202;5857:12;;5810:60;;-1:-1:-1;;;5810:60:1;;5738:7;;-1:-1:-1;;;;;5829:10:1;5810:46;;;;:60;;;;160:25:70;;;148:2;133:18;;14:177;5810:60:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5778:13;;:92;;;;:::i;:::-;5757:123;;5685:202;:::o;2606::52:-;2691:4;-1:-1:-1;;;;;;2714:47:52;;-1:-1:-1;;;2714:47:52;;:87;;-1:-1:-1;;;;;;;;;;937:40:64;;;2765:36:52;2707:94;2606:202;-1:-1:-1;;2606:202:52:o;2154:98:55:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;3951:163:57:-;4030:14;4063:44;4080:6;4088:18;4063:16;:44::i;4431:197:55:-;4514:4;719:10:62;4568:32:55;719:10:62;4584:7:55;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:55;;4431:197;-1:-1:-1;;;4431:197:55:o;5313:154:57:-;5392:7;5418:42;5435:6;5443:16;5418;:42::i;5190:286:55:-;5317:4;719:10:62;5373:38:55;5389:4;719:10:62;5404:6:55;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;;:::o;4803:145:52:-;4452:7;4478:12;;;:6;:12;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;5912:214::-;-1:-1:-1;;;;;6007:23:52;;719:10:62;6007:23:52;5999:83;;;;-1:-1:-1;;;5999:83:52;;6348:2:70;5999:83:52;;;6330:21:70;6387:2;6367:18;;;6360:30;6426:34;6406:18;;;6399:62;-1:-1:-1;;;6477:18:70;;;6470:45;6532:19;;5999:83:52;;;;;;;;;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;5871:234:55:-;5959:4;719:10:62;6013:64:55;719:10:62;6029:7:55;6066:10;6038:25;719:10:62;6029:7:55;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;4163:148:57:-;4230:7;4256:24;:22;:24::i;:::-;:48;;4303:1;4256:48;;;-1:-1:-1;;4249:55:57;4163:148;-1:-1:-1;;4163:148:57:o;5017:476:1:-;1700:10;-1:-1:-1;;;;;1714:10:1;1700:24;;1692:57;;;;-1:-1:-1;;;1692:57:1;;6764:2:70;1692:57:1;;;6746:21:70;6803:2;6783:18;;;6776:30;-1:-1:-1;;;6822:18:70;;;6815:50;6882:18;;1692:57:1;6562:344:70;1692:57:1;5173:7:::1;5157:12;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5212:10:1::1;::::0;-1:-1:-1;5232:64:1::1;-1:-1:-1::0;;;;;5232:44:1;::::1;5277:9:::0;5288:7;5232:44:::1;:64::i;:::-;5323:7;5306:13;;:24;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5340:73:1::1;::::0;-1:-1:-1;;;;;;5347:11:1::1;5340:36;5377:11:::0;5398:4:::1;5405:7:::0;5340:36:::1;:73::i;:::-;5429:57;::::0;;7218:25:70;;;7274:2;7259:18;;7252:34;;;-1:-1:-1;;;;;5429:57:1;::::1;::::0;::::1;::::0;7191:18:70;5429:57:1::1;;;;;;;5147:346;5017:476:::0;;;:::o;3556:254::-;-1:-1:-1;;;;;;;;;;;2505:16:52;2516:4;2505:10;:16::i;:::-;3675:15:1::1;715:6;1967:12;:35;;1959:68;;;::::0;-1:-1:-1;;;1959:68:1;;7499:2:70;1959:68:1::1;::::0;::::1;7481:21:70::0;7538:2;7518:18;;;7511:30;-1:-1:-1;;;7557:18:70;;;7550:50;7617:18;;1959:68:1::1;7297:344:70::0;1959:68:1::1;3702:18:::2;:36:::0;;;3754:49:::2;::::0;;7820:25:70;;;3792:10:1::2;7876:2:70::0;7861:18;;7854:60;3754:49:1::2;::::0;7793:18:70;3754:49:1::2;;;;;;;;2531:1:52::1;3556:254:1::0;;:::o;8823:1198::-;1823:16;;;;1815:62;;;;-1:-1:-1;;;1815:62:1;;;;;;;:::i;:::-;8987:1:::1;8972:12;:16;8964:52;;;::::0;-1:-1:-1;;;8964:52:1;;8529:2:70;8964:52:1::1;::::0;::::1;8511:21:70::0;8568:2;8548:18;;;8541:30;8607:25;8587:18;;;8580:53;8650:18;;8964:52:1::1;8327:347:70::0;8964:52:1::1;9040:25;9079:21:::0;9114:17:::1;9144:32;9163:12;9144:18;:32::i;:::-;9277:40;::::0;-1:-1:-1;;;9277:40:1;;::::1;::::0;::::1;160:25:70::0;;;9026:150:1;;-1:-1:-1;9026:150:1;;-1:-1:-1;9026:150:1;-1:-1:-1;9233:10:1::1;::::0;9187:24:::1;::::0;-1:-1:-1;;;;;9277:21:1;::::1;::::0;::::1;::::0;133:18:70;;9277:40:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9254:63;;9352:13;;9336:12;:29;;9328:59;;;::::0;-1:-1:-1;;;9328:59:1;;8881:2:70;9328:59:1::1;::::0;::::1;8863:21:70::0;8920:2;8900:18;;;8893:30;-1:-1:-1;;;8939:18:70;;;8932:47;8996:18;;9328:59:1::1;8679:341:70::0;9328:59:1::1;9421:19;9405:12;:35;;9397:73;;;::::0;-1:-1:-1;;;9397:73:1;;9227:2:70;9397:73:1::1;::::0;::::1;9209:21:70::0;9266:2;9246:18;;;9239:30;9305:27;9285:18;;;9278:55;9350:18;;9397:73:1::1;9025:349:70::0;9397:73:1::1;9498:29;9518:9:::0;9498:17;:29:::1;:::i;:::-;9481:12;;:47;;;;;;;:::i;:::-;;;;;;;;9560:13;9538:18;;:35;;;;;;;:::i;:::-;;;;;;;;9600:12;9583:13;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;9671:63:1::1;::::0;-1:-1:-1;;;;;;9671:22:1;::::1;9694:10;9714:4;9721:12:::0;9671:22:::1;:63::i;:::-;9806:58;-1:-1:-1::0;;;;;9813:11:1::1;9806:32;9839:10;9851:12:::0;9806:32:::1;:58::i;:::-;9903:10;9880:134;9927:12:::0;9953;9979:25:::1;9995:9:::0;9979:13;:25:::1;:::i;:::-;9880:134;::::0;;9581:25:70;;;9637:2;9622:18;;9615:34;;;;9665:18;;;9658:34;9569:2;9554:18;9880:134:1::1;;;;;;;8954:1067;;;;;8823:1198:::0;;:::o;5978:351::-;1823:16;;6099:7;;1823:16;;1815:62;;;;-1:-1:-1;;;1815:62:1;;;;;;;:::i;:::-;6137:16:::1;;6126:7;:27;;6118:68;;;::::0;-1:-1:-1;;;6118:68:1;;9905:2:70;6118:68:1::1;::::0;::::1;9887:21:70::0;9944:2;9924:18;;;9917:30;9983;9963:18;;;9956:58;10031:18;;6118:68:1::1;9703:352:70::0;6118:68:1::1;6197:15;6215:23;6230:7;6215:14;:23::i;:::-;6197:41;;6248:49;6257:10;6269:9;6280:7;6289;6248:8;:49::i;3352:198::-:0;-1:-1:-1;;;;;;;;;;;2505:16:52;2516:4;2505:10;:16::i;:::-;3458::1::1;:26:::0;;;3500:43:::1;::::0;;7820:25:70;;;3532:10:1::1;7876:2:70::0;7861:18;;7854:60;3500:43:1::1;::::0;7793:18:70;3500:43:1::1;;;;;;;;3352:198:::0;;:::o;8294:242::-;8369:7;8389:25;8420:27;8439:7;8420:18;:27::i;:::-;-1:-1:-1;;8464:65:1;;-1:-1:-1;;;8464:65:1;;;;;160:25:70;;;8388:59:1;;-1:-1:-1;8483:10:1;-1:-1:-1;;;;;8464:46:1;;;;133:18:70;;8464:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4675:144::-;4744:4;4784:7;4768:12;;:23;;4767:45;;;;-1:-1:-1;4796:16:1;;;;4760:52;4675:144;-1:-1:-1;;4675:144:1:o;2895:145:52:-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:52;;;;;;;;;;;;;;;2895:145::o;7899:118:1:-;7980:30;;-1:-1:-1;;;7980:30:1;;10262:2:70;7980:30:1;;;10244:21:70;10301:2;10281:18;;;10274:30;-1:-1:-1;;;10320:18:70;;;10313:50;7961:7:1;;10380:18:70;;7980:30:1;10060:344:70;2365:102:55;2421:13;2453:7;2446:14;;;;;:::i;10092:346:1:-;839:31;2505:16:52;2516:4;2505:10;:16::i;:::-;10231:18:1::1;::::0;;10209:19:::1;10259:22:::0;;;10291:67:::1;-1:-1:-1::0;;;;;10310:10:1::1;10291:43;10335:9:::0;10231:18;10291:43:::1;:67::i;:::-;10374:57;::::0;;-1:-1:-1;;;;;10667:15:70;;10649:34;;10714:2;10699:18;;10692:34;;;10420:10:1::1;10742:18:70::0;;;10735:43;;;;10374:57:1::1;::::0;10599:2:70;10584:18;10374:57:1::1;10409:375:70::0;6592:427:55;6685:4;719:10:62;6685:4:55;6766:25;719:10:62;6783:7:55;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:55;;10991:2:70;6801:85:55;;;10973:21:70;11030:2;11010:18;;;11003:30;11069:34;11049:18;;;11042:62;-1:-1:-1;;;11120:18:70;;;11113:35;11165:19;;6801:85:55;10789:401:70;6801:85:55;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;-1:-1:-1;7008:4:55;;6592:427;-1:-1:-1;;;;6592:427:55:o;3727:189::-;3806:4;719:10:62;3860:28:55;719:10:62;3877:2:55;3881:6;3860:9;:28::i;4308:228:1:-;765:23;2505:16:52;2516:4;2505:10;:16::i;:::-;4419::1::1;:38:::0;;-1:-1:-1;;4419:38:1::1;::::0;::::1;;::::0;;::::1;::::0;;;4473:56:::1;::::0;;11363:41:70;;;4518:10:1::1;11435:2:70::0;11420:18;;11413:60;4473:56:1::1;::::0;11336:18:70;4473:56:1::1;11195:284:70::0;5109:150:57;5184:7;5210:42;5227:6;5235:16;5210;:42::i;6636:1220:1:-;1823:16;;6780:7;;1823:16;;1815:62;;;;-1:-1:-1;;;1815:62:1;;;;;;;:::i;:::-;6817:1:::1;6807:7;:11;6799:49;;;::::0;-1:-1:-1;;;6799:49:1;;11686:2:70;6799:49:1::1;::::0;::::1;11668:21:70::0;11725:2;11705:18;;;11698:30;11764:27;11744:18;;;11737:55;11809:18;;6799:49:1::1;11484:349:70::0;6799:49:1::1;6862:10;-1:-1:-1::0;;;;;6862:20:1;::::1;;6858:95;;6898:44;6914:6;6922:10;6934:7;6898:15;:44::i;:::-;7014:7;6993:18;7081:13;3329:12:55::0;;;3242:106;7081:13:1::1;7057:20;7067:10:::0;7057:7;:20:::1;:::i;:::-;7056:38;;;;:::i;:::-;7031:63;;7104:20;7162:10;7145:13;;7128:14;:30;;;;:::i;:::-;7127:45;;;;:::i;:::-;7104:68;;7182:19;7238:10;7222:12;;7205:14;:29;;;;:::i;:::-;7204:44;;;;:::i;:::-;7182:66;;7276:12;7259:13;;:29;;;;;;;:::i;:::-;;;;;;;;7314:11;7298:12;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;7405:26:1::1;::::0;-1:-1:-1;7411:10:1::1;7423:7:::0;7405:5:::1;:26::i;:::-;7473:53;-1:-1:-1::0;;;;;3491:6:57;7473:28:1::1;7502:9:::0;7513:12;7473:28:::1;:53::i;:::-;7573:67;-1:-1:-1::0;;;;;7592:10:1::1;7573:43;7617:9:::0;7628:11;7573:43:::1;:67::i;:::-;7656:164;::::0;;9581:25:70;;;9637:2;9622:18;;9615:34;;;9665:18;;;9658:34;;;-1:-1:-1;;;;;7656:164:1;;::::1;::::0;;;::::1;::::0;7685:10:::1;::::0;7656:164:::1;::::0;9569:2:70;9554:18;7656:164:1::1;;;;;;;-1:-1:-1::0;7837:12:1;6636:1220;-1:-1:-1;;;;;;6636:1220:1:o;3734:163:57:-;3813:14;3846:44;3863:6;3871:18;3846:16;:44::i;4521:161::-;-1:-1:-1;;;;;3506:18:55;;4595:7:57;3506:18:55;;;;;;;;;;;4621:54:57;;4656:18;4621:16;:54::i;5228:147:52:-;4452:7;4478:12;;;:6;:12;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;4730:121:57:-:0;-1:-1:-1;;;;;3506:18:55;;4802:7:57;3506:18:55;;;;;;;;;;;4828:16:57;3406:125:55;3816:274:1;-1:-1:-1;;;;;;;;;;;2505:16:52;2516:4;2505:10;:16::i;:::-;3942:15:1::1;715:6;1967:12;:35;;1959:68;;;::::0;-1:-1:-1;;;1959:68:1;;7499:2:70;1959:68:1::1;::::0;::::1;7481:21:70::0;7538:2;7518:18;;;7511:30;-1:-1:-1;;;7557:18:70;;;7550:50;7617:18;;1959:68:1::1;7297:344:70::0;1959:68:1::1;3969:24:::2;:42:::0;;;4027:56:::2;::::0;;7820:25:70;;;4072:10:1::2;7876:2:70::0;7861:18;;7854:60;4027:56:1::2;::::0;7793:18:70;4027:56:1::2;7646:274:70::0;3974:149:55;-1:-1:-1;;;;;4089:18:55;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;3091:91::-;3173:2;;3091:91::o;8601:295:57:-;8698:14;8724;8741:13;3329:12:55;;;3242:106;8741:13:57;8724:30;-1:-1:-1;8784:11:57;;8783:106;;8843:46;8857:13;:11;:13::i;:::-;8843:6;;8872;8880:8;8843:13;:46::i;:::-;8783:106;;;8823:6;8799:41;8764:125;8601:295;-1:-1:-1;;;;8601:295:57:o;10504:370:55:-;-1:-1:-1;;;;;10635:19:55;;10627:68;;;;-1:-1:-1;;;10627:68:55;;12567:2:70;10627:68:55;;;12549:21:70;12606:2;12586:18;;;12579:30;12645:34;12625:18;;;12618:62;-1:-1:-1;;;12696:18:70;;;12689:34;12740:19;;10627:68:55;12365:400:70;10627:68:55;-1:-1:-1;;;;;10713:21:55;;10705:68;;;;-1:-1:-1;;;10705:68:55;;12972:2:70;10705:68:55;;;12954:21:70;13011:2;12991:18;;;12984:30;13050:34;13030:18;;;13023:62;-1:-1:-1;;;13101:18:70;;;13094:32;13143:19;;10705:68:55;12770:398:70;10705:68:55;-1:-1:-1;;;;;10784:18:55;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;160:25:70;;;10835:32:55;;133:18:70;10835:32:55;;;;;;;10504:370;;;:::o;7724:342:57:-;7821:14;7847;7864:13;3329:12:55;;;3242:106;7864:13:57;7847:30;-1:-1:-1;7907:11:57;;;:26;;-1:-1:-1;7922:11:57;;7907:26;7906:153;;8013:46;8027:6;8035:13;:11;:13::i;:::-;8013:6;;:46;8050:8;8013:13;:46::i;11155:441:55:-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:55;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:55;;13375:2:70;11404:68:55;;;13357:21:70;13414:2;13394:18;;;13387:30;13453:31;13433:18;;;13426:59;13502:18;;11404:68:55;13173:353:70;11404:68:55;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:55;;7591:68;;;;-1:-1:-1;;;7591:68:55;;13733:2:70;7591:68:55;;;13715:21:70;13772:2;13752:18;;;13745:30;13811:34;13791:18;;;13784:62;-1:-1:-1;;;13862:18:70;;;13855:35;13907:19;;7591:68:55;13531:401:70;7591:68:55;-1:-1:-1;;;;;7677:16:55;;7669:64;;;;-1:-1:-1;;;7669:64:55;;14139:2:70;7669:64:55;;;14121:21:70;14178:2;14158:18;;;14151:30;14217:34;14197:18;;;14190:62;-1:-1:-1;;;14268:18:70;;;14261:33;14311:19;;7669:64:55;13937:399:70;7669:64:55;-1:-1:-1;;;;;7815:15:55;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:55;;14543:2:70;7840:72:55;;;14525:21:70;14582:2;14562:18;;;14555:30;14621:34;14601:18;;;14594:62;-1:-1:-1;;;14672:18:70;;;14665:36;14718:19;;7840:72:55;14341:402:70;7840:72:55;-1:-1:-1;;;;;7946:15:55;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;160:25:70;;;8161:13:55;;8210:26;;133:18:70;8210:26:55;;;;;;;8247:37;4803:145:52;3334:103;3400:30;3411:4;719:10:62;3400::52;:30::i;:::-;3334:103;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7582:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7582:29:52;;;;;;;;;:36;;-1:-1:-1;;7582:36:52;7614:4;7582:36;;;7664:12;719:10:62;;640:96;7664:12:52;-1:-1:-1;;;;;7637:40:52;7655:7;-1:-1:-1;;;;;7637:40:52;7649:4;7637:40;;;;;;;;;;7461:233;;:::o;7865:234::-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7986:29:52;;;;;;;;;;:37;;-1:-1:-1;;7986:37:52;;;8042:40;719:10:62;;7986:12:52;;8042:40;;8018:5;8042:40;7865:234;;:::o;11346:125:57:-;11402:4;11441:1;11425:13;:11;:13::i;:::-;:17;:39;;;-1:-1:-1;;3329:12:55;;11446:18:57;;11346:125::o;763:205:60:-;902:58;;-1:-1:-1;;;;;14940:32:70;;902:58:60;;;14922:51:70;14989:18;;;14982:34;;;875:86:60;;895:5;;-1:-1:-1;;;925:23:60;14895:18:70;;902:58:60;;;;-1:-1:-1;;902:58:60;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:60;-1:-1:-1;;;;;;902:58:60;;;;;;;;;;875:19;:86::i;974:241::-;1139:68;;-1:-1:-1;;;;;15285:15:70;;;1139:68:60;;;15267:34:70;15337:15;;15317:18;;;15310:43;15369:18;;;15362:34;;;1112:96:60;;1132:5;;-1:-1:-1;;;1162:27:60;15202:18:70;;1139:68:60;15027:375:70;10911:470:1;10992:7;11001;11010;11029:16;715:6;11072:18;;11062:7;:28;;;;:::i;:::-;11048:74;;;;:::i;:::-;11029:93;;11202:17;715:6;11247:24;;11236:8;:35;;;;:::i;:::-;11222:81;;;;:::i;:::-;11202:101;-1:-1:-1;11322:18:1;11332:8;11322:7;:18;:::i;:::-;11342:20;11353:9;11342:8;:20;:::i;:::-;11314:60;;;;-1:-1:-1;11364:9:1;;-1:-1:-1;10911:470:1;-1:-1:-1;;;10911:470:1:o;11454:369::-;11633:7;11616:13;;:24;;;;;;;:::i;:::-;;;;-1:-1:-1;11650:65:1;;-1:-1:-1;;;;;;3491:6:57;11650:32:1;11683:7;11700:4;11707:7;11650:32;:65::i;:::-;11725:25;11731:9;11742:7;11725:5;:25::i;:::-;11788:9;-1:-1:-1;;;;;11766:50:1;11779:7;-1:-1:-1;;;;;11766:50:1;;11799:7;11808;11766:50;;;;;;7218:25:70;;;7274:2;7259:18;;7252:34;7206:2;7191:18;;7044:248;11766:50:1;;;;;;;;11454:369;;;;:::o;9422:659:55:-;-1:-1:-1;;;;;9505:21:55;;9497:67;;;;-1:-1:-1;;;9497:67:55;;15609:2:70;9497:67:55;;;15591:21:70;15648:2;15628:18;;;15621:30;15687:34;15667:18;;;15660:62;-1:-1:-1;;;15738:18:70;;;15731:31;15779:19;;9497:67:55;15407:397:70;9497:67:55;-1:-1:-1;;;;;9660:18:55;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:55;;16011:2:70;9688:71:55;;;15993:21:70;16050:2;16030:18;;;16023:30;16089:34;16069:18;;;16062:62;-1:-1:-1;;;16140:18:70;;;16133:32;16182:19;;9688:71:55;15809:398:70;9688:71:55;-1:-1:-1;;;;;9793:18:55;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;160:25:70;;;9793:9:55;;:18;9978:37;;133:18:70;9978:37:55;;;;;;;4803:145:52;;;:::o;5724:337:66:-;5863:7;5882:14;5899:25;5906:1;5909;5912:11;5899:6;:25::i;:::-;5882:42;-1:-1:-1;5950:11:66;5938:8;:23;;;;;;;;:::i;:::-;;:56;;;;;5993:1;5978:11;5965:25;;;;;:::i;:::-;5975:1;5972;5965:25;:29;5938:56;5934:98;;;6010:11;6020:1;6010:11;;:::i;:::-;;;5934:98;6048:6;5724:337;-1:-1:-1;;;;;5724:337:66:o;3718:479:52:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:252:52;;;;;;;;;;-1:-1:-1;;;3844:336:52;;;;;;;:::i;3747:706:60:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:60;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:60;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:60;;17613:2:70;4351:85:60;;;17595:21:70;17652:2;17632:18;;;17625:30;17691:34;17671:18;;;17664:62;-1:-1:-1;;;17742:18:70;;;17735:40;17792:19;;4351:85:60;17411:406:70;8567:535:55;-1:-1:-1;;;;;8650:21:55;;8642:65;;;;-1:-1:-1;;;8642:65:55;;18024:2:70;8642:65:55;;;18006:21:70;18063:2;18043:18;;;18036:30;18102:33;18082:18;;;18075:61;18153:18;;8642:65:55;17822:355:70;8642:65:55;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:55;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;160:25:70;;;8999:37:55;;133:18:70;8999:37:55;;;;;;;5912:214:52;;:::o;1667:3925:66:-;1779:14;;;-1:-1:-1;;2316:1:66;2313;2306:20;2359:1;2356;2352:9;2343:18;;2414:5;2410:2;2407:13;2399:5;2395:2;2391:14;2387:34;2378:43;;;2516:5;2525:1;2516:10;2512:75;;2561:11;2553:5;:19;;;;;:::i;:::-;;2546:26;;;;;;2512:75;2711:5;2697:11;:19;2689:28;;;;;;2973:17;3108:11;3105:1;3102;3095:25;4486:1;3656;3641:12;;:16;;3626:32;;3761:22;;;;4467:1;:15;;4466:21;;4719;;;4715:25;;4704:36;4788:21;;;4784:25;;4773:36;4858:21;;;4854:25;;4843:36;4928:21;;;4924:25;;4913:36;4998:21;;;4994:25;;4983:36;5069:21;;;5065:25;;;5054:36;;;3611:12;4006;;;4002:23;;;3998:31;;;3222:20;;;3211:32;;;4118:12;;;;3269:21;;3859:16;;;;4109:21;;;;5533:15;;;-1:-1:-1;;;;1667:3925:66:o;2102:149:63:-;2160:13;2192:52;-1:-1:-1;;;;;2204:22:63;;311:2;1513:437;1588:13;1613:19;1645:10;1649:6;1645:1;:10;:::i;:::-;:14;;1658:1;1645:14;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1635:25:63;;1613:47;;-1:-1:-1;;;1670:6:63;1677:1;1670:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1670:15:63;;;;;;;;;-1:-1:-1;;;1695:6:63;1702:1;1695:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1695:15:63;;;;;;;;-1:-1:-1;1725:9:63;1737:10;1741:6;1737:1;:10;:::i;:::-;:14;;1750:1;1737:14;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;-1:-1:-1;;;1800:5:63;1808:3;1800:11;1791:21;;;;;;;:::i;:::-;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1779:33:63;;;;;;;;-1:-1:-1;1836:1:63;1826:11;;;;;1760:3;;;:::i;:::-;;;1720:128;;;-1:-1:-1;1865:10:63;;1857:55;;;;-1:-1:-1;;;1857:55:63;;18789:2:70;1857:55:63;;;18771:21:70;;;18808:18;;;18801:30;18867:34;18847:18;;;18840:62;18919:18;;1857:55:63;18587:356:70;3873:223:61;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4006;5241;5255:23;5282:6;-1:-1:-1;;;;;5282:11:61;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:61:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:61;;;7908:60;;;;-1:-1:-1;;;7908:60:61;;19849:2:70;7908:60:61;;;19831:21:70;19888:2;19868:18;;;19861:30;19927:31;19907:18;;;19900:59;19976:18;;7908:60:61;19647:353:70;7908:60:61;-1:-1:-1;8003:10:61;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:61;;;;;;;;:::i;196:286:70:-;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;349:23;;-1:-1:-1;;;;;;401:32:70;;391:43;;381:71;;448:1;445;438:12;679:250;764:1;774:113;788:6;785:1;782:13;774:113;;;864:11;;;858:18;845:11;;;838:39;810:2;803:10;774:113;;;-1:-1:-1;;921:1:70;903:16;;896:27;679:250::o;934:396::-;1083:2;1072:9;1065:21;1046:4;1115:6;1109:13;1158:6;1153:2;1142:9;1138:18;1131:34;1174:79;1246:6;1241:2;1230:9;1226:18;1221:2;1213:6;1209:15;1174:79;:::i;:::-;1314:2;1293:15;-1:-1:-1;;1289:29:70;1274:45;;;;1321:2;1270:54;;934:396;-1:-1:-1;;934:396:70:o;1335:180::-;1394:6;1447:2;1435:9;1426:7;1422:23;1418:32;1415:52;;;1463:1;1460;1453:12;1415:52;-1:-1:-1;1486:23:70;;1335:180;-1:-1:-1;1335:180:70:o;1520:173::-;1588:20;;-1:-1:-1;;;;;1637:31:70;;1627:42;;1617:70;;1683:1;1680;1673:12;1617:70;1520:173;;;:::o;1698:254::-;1766:6;1774;1827:2;1815:9;1806:7;1802:23;1798:32;1795:52;;;1843:1;1840;1833:12;1795:52;1866:29;1885:9;1866:29;:::i;:::-;1856:39;1942:2;1927:18;;;;1914:32;;-1:-1:-1;;;1698:254:70:o;1957:328::-;2034:6;2042;2050;2103:2;2091:9;2082:7;2078:23;2074:32;2071:52;;;2119:1;2116;2109:12;2071:52;2142:29;2161:9;2142:29;:::i;:::-;2132:39;;2190:38;2224:2;2213:9;2209:18;2190:38;:::i;:::-;2180:48;;2275:2;2264:9;2260:18;2247:32;2237:42;;1957:328;;;;;:::o;2657:254::-;2725:6;2733;2786:2;2774:9;2765:7;2761:23;2757:32;2754:52;;;2802:1;2799;2792:12;2754:52;2838:9;2825:23;2815:33;;2867:38;2901:2;2890:9;2886:18;2867:38;:::i;:::-;2857:48;;2657:254;;;;;:::o;3313:186::-;3372:6;3425:2;3413:9;3404:7;3400:23;3396:32;3393:52;;;3441:1;3438;3431:12;3393:52;3464:29;3483:9;3464:29;:::i;3504:322::-;3581:6;3589;3597;3650:2;3638:9;3629:7;3625:23;3621:32;3618:52;;;3666:1;3663;3656:12;3618:52;3689:29;3708:9;3689:29;:::i;:::-;3679:39;3765:2;3750:18;;3737:32;;-1:-1:-1;3816:2:70;3801:18;;;3788:32;;3504:322;-1:-1:-1;;;3504:322:70:o;3831:248::-;3899:6;3907;3960:2;3948:9;3939:7;3935:23;3931:32;3928:52;;;3976:1;3973;3966:12;3928:52;-1:-1:-1;;3999:23:70;;;4069:2;4054:18;;;4041:32;;-1:-1:-1;3831:248:70:o;4343:118::-;4429:5;4422:13;4415:21;4408:5;4405:32;4395:60;;4451:1;4448;4441:12;4466:241;4522:6;4575:2;4563:9;4554:7;4550:23;4546:32;4543:52;;;4591:1;4588;4581:12;4543:52;4630:9;4617:23;4649:28;4671:5;4649:28;:::i;4712:328::-;4789:6;4797;4805;4858:2;4846:9;4837:7;4833:23;4829:32;4826:52;;;4874:1;4871;4864:12;4826:52;4910:9;4897:23;4887:33;;4939:38;4973:2;4962:9;4958:18;4939:38;:::i;:::-;4929:48;;4996:38;5030:2;5019:9;5015:18;4996:38;:::i;:::-;4986:48;;4712:328;;;;;:::o;5045:260::-;5113:6;5121;5174:2;5162:9;5153:7;5149:23;5145:32;5142:52;;;5190:1;5187;5180:12;5142:52;5213:29;5232:9;5213:29;:::i;:::-;5203:39;;5261:38;5295:2;5284:9;5280:18;5261:38;:::i;5310:184::-;5380:6;5433:2;5421:9;5412:7;5408:23;5404:32;5401:52;;;5449:1;5446;5439:12;5401:52;-1:-1:-1;5472:16:70;;5310:184;-1:-1:-1;5310:184:70:o;5499:127::-;5560:10;5555:3;5551:20;5548:1;5541:31;5591:4;5588:1;5581:15;5615:4;5612:1;5605:15;5631:125;5696:9;;;5717:10;;;5714:36;;;5730:18;;:::i;5761:380::-;5840:1;5836:12;;;;5883;;;5904:61;;5958:4;5950:6;5946:17;5936:27;;5904:61;6011:2;6003:6;6000:14;5980:18;5977:38;5974:161;;6057:10;6052:3;6048:20;6045:1;6038:31;6092:4;6089:1;6082:15;6120:4;6117:1;6110:15;5974:161;;5761:380;;;:::o;6911:128::-;6978:9;;;6999:11;;;6996:37;;;7013:18;;:::i;7925:397::-;8127:2;8109:21;;;8166:2;8146:18;;;8139:30;8205:34;8200:2;8185:18;;8178:62;-1:-1:-1;;;8271:2:70;8256:18;;8249:31;8312:3;8297:19;;7925:397::o;11838:168::-;11911:9;;;11942;;11959:15;;;11953:22;;11939:37;11929:71;;11980:18;;:::i;12011:127::-;12072:10;12067:3;12063:20;12060:1;12053:31;12103:4;12100:1;12093:15;12127:4;12124:1;12117:15;12143:217;12183:1;12209;12199:132;;12253:10;12248:3;12244:20;12241:1;12234:31;12288:4;12285:1;12278:15;12316:4;12313:1;12306:15;12199:132;-1:-1:-1;12345:9:70;;12143:217::o;16212:127::-;16273:10;16268:3;16264:20;16261:1;16254:31;16304:4;16301:1;16294:15;16328:4;16325:1;16318:15;16344:812;16755:25;16750:3;16743:38;16725:3;16810:6;16804:13;16826:75;16894:6;16889:2;16884:3;16880:12;16873:4;16865:6;16861:17;16826:75;:::i;:::-;-1:-1:-1;;;16960:2:70;16920:16;;;16952:11;;;16945:40;17010:13;;17032:76;17010:13;17094:2;17086:11;;17079:4;17067:17;;17032:76;:::i;:::-;17128:17;17147:2;17124:26;;16344:812;-1:-1:-1;;;;16344:812:70:o;17161:245::-;17228:6;17281:2;17269:9;17260:7;17256:23;17252:32;17249:52;;;17297:1;17294;17287:12;17249:52;17329:9;17323:16;17348:28;17370:5;17348:28;:::i;18182:127::-;18243:10;18238:3;18234:20;18231:1;18224:31;18274:4;18271:1;18264:15;18298:4;18295:1;18288:15;18314:127;18375:10;18370:3;18366:20;18363:1;18356:31;18406:4;18403:1;18396:15;18430:4;18427:1;18420:15;18446:136;18485:3;18513:5;18503:39;;18522:18;;:::i;:::-;-1:-1:-1;;;18558:18:70;;18446:136::o;19355:287::-;19484:3;19522:6;19516:13;19538:66;19597:6;19592:3;19585:4;19577:6;19573:17;19538:66;:::i;:::-;19620:16;;;;;19355:287;-1:-1:-1;;19355:287:70:o",
    "linkReferences": {},
    "immutableReferences": {
      "42018": [
        {
          "start": 1429,
          "length": 32
        },
        {
          "start": 5900,
          "length": 32
        },
        {
          "start": 7912,
          "length": 32
        }
      ],
      "42020": [
        {
          "start": 1264,
          "length": 32
        }
      ],
      "491": [
        {
          "start": 1356,
          "length": 32
        },
        {
          "start": 2757,
          "length": 32
        },
        {
          "start": 3432,
          "length": 32
        },
        {
          "start": 3556,
          "length": 32
        },
        {
          "start": 4083,
          "length": 32
        },
        {
          "start": 4869,
          "length": 32
        },
        {
          "start": 5199,
          "length": 32
        },
        {
          "start": 5952,
          "length": 32
        }
      ],
      "493": [
        {
          "start": 1601,
          "length": 32
        },
        {
          "start": 3646,
          "length": 32
        },
        {
          "start": 4472,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ADMIN_ROLE()": "75b238fc",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "FEE_COLLECTOR_ROLE()": "62a2a47c",
    "ONE_HUNDRED_PERCENT()": "dd0081c7",
    "OPERATOR_ROLE()": "f5b541a6",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "asset()": "38d52e0f",
    "auroraBalance()": "4fb88847",
    "auroraToken()": "5578fdb2",
    "balanceOf(address)": "70a08231",
    "collectedStAurFees()": "597cc4d1",
    "convertToAssets(uint256)": "07a2d13a",
    "convertToShares(uint256)": "c6e6f592",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(uint256,address)": "6e553f65",
    "fullyOperational()": "5ade1904",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "increaseAllowance(address,uint256)": "39509351",
    "isStAurBalanceAvailable(uint256)": "90c69fe3",
    "liqProvFeeCutBasisPoints()": "5e30d67e",
    "maxDeposit(address)": "402d267d",
    "maxMint(address)": "c63d75b6",
    "maxRedeem(address)": "d905777e",
    "maxWithdraw(address)": "ce96cb77",
    "minDepositAmount()": "645006ca",
    "mint(uint256,address)": "94bf804d",
    "name()": "06fdde03",
    "previewDeposit(uint256)": "ef8b30f7",
    "previewMint(uint256)": "b3d7f6b9",
    "previewRedeem(uint256)": "4cdad506",
    "previewSwapStAurForAurora(uint256)": "89197faf",
    "previewWithdraw(uint256)": "0a28a477",
    "redeem(uint256,address,address)": "ba087652",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "stAurBalance()": "e1437bcb",
    "stAurVault()": "367c98b8",
    "supportsInterface(bytes4)": "01ffc9a7",
    "swapFeeBasisPoints()": "a22f2392",
    "swapStAurForAurora(uint256,uint256)": "6505bef4",
    "symbol()": "95d89b41",
    "totalAssets()": "01e1d114",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferStAur(address,uint256,uint256)": "4579c717",
    "updateContractOperation(bool)": "a915277c",
    "updateFeeBasisPoints(uint256)": "57802c7d",
    "updateLiqProvFeeBasisPoints(uint256)": "da9c4b67",
    "updateMinDepositAmount(uint256)": "84780205",
    "withdraw(uint256,address,address)": "b460af94",
    "withdrawCollectedStAurFees(address)": "9a47b53c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stAurVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_auroraToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeCollectorRole\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_contractOperatorRole\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_lpTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_lpTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_minDepositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_swapFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liqProvFeeCutBasisPoints\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_auroraAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lpTokenAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_isFullyOperational\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"ContractUpdateOperation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lpTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_auroraAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_stAurAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_stAurAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_auroraAmount\",\"type\":\"uint256\"}],\"name\":\"StAurLiquidityProvidedByPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_auroraAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_stAurAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalFee\",\"type\":\"uint256\"}],\"name\":\"SwapStAur\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_new\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"UpdateFeeBasisPoints\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_new\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"UpdateLiqProvFeeBasisPoints\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_new\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"UpdateMinDepositAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"WithdrawCollectedFees\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_COLLECTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE_HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auroraBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auroraToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectedStAurFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fullyOperational\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"isStAurBalanceAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liqProvFeeCutBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDepositAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"previewSwapStAurForAurora\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stAurBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stAurVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stAurAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAuroraToReceive\",\"type\":\"uint256\"}],\"name\":\"swapStAurForAurora\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"}],\"name\":\"transferStAur\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isFullyOperational\",\"type\":\"bool\"}],\"name\":\"updateContractOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"updateFeeBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"updateLiqProvFeeBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateMinDepositAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdrawCollectedStAurFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are read from the underlying asset in the constructor and cached. If this fails (e.g., the asset has not been created yet), the cached value is set to a default obtained by `super.decimals()` (which depends on inheritance but is most likely 18). Override this function in order to set a guaranteed hardcoded value. See {IERC20Metadata-decimals}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"Use deposit fn instead.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"See {IERC4626-previewDeposit}. \"},\"previewMint(uint256)\":{\"details\":\"See {IERC4626-previewMint}. \"},\"previewRedeem(uint256)\":{\"details\":\"See {IERC4626-previewRedeem}. \"},\"previewSwapStAurForAurora(uint256)\":{\"params\":{\"_amount\":\"Denominated in stAUR.\"},\"returns\":{\"_0\":\"_auroraAmount Denominated in AURORA.\"}},\"previewWithdraw(uint256)\":{\"details\":\"See {IERC4626-previewWithdraw}. \"},\"redeem(uint256,address,address)\":{\"returns\":{\"_0\":\"ONLY the amount of base assets (AURORA token) that will be returned. However, the liquidity provider expects to receive stAUR tokens as well, in proportion of the redeemed shares.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"swapStAurForAurora(uint256,uint256)\":{\"params\":{\"_minAuroraToReceive\":\"Min amount of AURORA tokens that the user is expecting, get a value for this parameter using the function previewSwapStAurForAurora().\",\"_stAurAmount\":\"Denominated in stAUR.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"Calculate sum of AURORA and stAUR balance, converting the amount of stAUR to AURORA using the Vault price.\",\"returns\":{\"_0\":\"_amount Denominated in AURORA tokens.\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferStAur(address,uint256,uint256)\":{\"details\":\"This function will ONLY be called by the stAUR vault to cover Aurora deposits (FLOW 1).\"},\"withdraw(uint256,address,address)\":{\"details\":\"Use redeem fn instead.\"}},\"stateVariables\":{\"ONE_HUNDRED_PERCENT\":{\"details\":\"100% represented as Basis Points.\"},\"collectedStAurFees\":{\"details\":\"The remaining Fees will be available to be collected by Meta Pool.\"},\"liqProvFeeCutBasisPoints\":{\"details\":\"How much of the Swap Fee, the liquidity providers will keep.\"},\"stAurBalance\":{\"details\":\"Internal accounting for the two vault assets.\"},\"stAurVault\":{\"details\":\"Contract addresses of the stAUR vault and the AURORA token.\"},\"swapFeeBasisPoints\":{\"details\":\"Fee is represented as Basis Points (100 points == 1.00%).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256,address)\":{\"notice\":\"The deposit flow is used to **Add** liquidity to the Liquidity Pool.\"},\"isStAurBalanceAvailable(uint256)\":{\"notice\":\"Function to evaluate if a Vault deposit can be covered by the balance of stAUR tokens in the Liquidity Pool.\"},\"redeem(uint256,address,address)\":{\"notice\":\"The redeem flow is used to **Remove** liquidity from the Liquidity Pool.\"},\"swapStAurForAurora(uint256,uint256)\":{\"notice\":\"Function that allows \\\"fast unstake\\\".\"},\"transferStAur(address,uint256,uint256)\":{\"notice\":\"The stAUR Vault will emit the Deposit event if this function runs.\"},\"updateContractOperation(bool)\":{\"notice\":\"Use in case of emergency \\ud83e\\uddba, stops: 1) adding and removing liquidity, 2) all swaps from stAUR to AURORA tokens and 3) providing stAUR token liquidity to cover deposits (FLOW 1).\"},\"withdrawCollectedStAurFees(address)\":{\"notice\":\"The collected stAUR fees are owned by Meta Pool.\"}},\"notice\":\"Liquidity Pool that allows the fast convertion of stAUR to AURORA tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityPool.sol\":\"LiquidityPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/LiquidityPool.sol\":{\"keccak256\":\"0x825584823066bf1816e51977a097bd7059547bf234485e3b863cc6c1c40d9415\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fe56a1d97635491d049895723246e71a55c5b5d2c9db4849434530c830a20a\",\"dweb:/ipfs/QmfRwBhjDdHqJUmVQvcfx5CsdMRy2PQe6dKujWSxwE4kUY\"]},\"contracts/interfaces/ILiquidityPool.sol\":{\"keccak256\":\"0x3bd626e66aada281d141a3fede6134f0633553cdf20d57a6f75be872ea9343ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c9eab213ef03a8e61684362a735ac7ee0009aa7ff2ba1ea23b75bcdcf50ace5\",\"dweb:/ipfs/QmWbeTKEvmiEBgc54y3MzzCqsYSFFp9strjc8oZw2HPoUy\"]},\"contracts/interfaces/IStakedAuroraVault.sol\":{\"keccak256\":\"0xea339e7b7e8535f211cc98dd629e5fa4241614437c6ab6c8dfd7a42ae51b7ac7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a03799d4a69fcc952c529336d995f4f5bf06380bae1699fea6e11ebc5440e78\",\"dweb:/ipfs/QmZFCRr93wmtBQL2Z1nSgFTThAvwoyDDoTzy7XvP8tePxG\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0xd82776ed6975a5939668e068f995acb1394c2f60a12a9ef3f14cacb91b5a8fd4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f381a6a834cd8d5296b819365ffd39d192ab7ac3d458b894a612d1c3b92f03f\",\"dweb:/ipfs/QmTRQE9c57bHGtuubLp8fMAA5jfsb1BR5s7iPd9cWSPfKm\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0xab83c36e40ee8fd41471fe94edcad13adae83b7f5179d022780062414e8fbf55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff872f2a6fb1431e727c09151ffbb30f3e45212d6ad73b64b27c6b64608a23b\",\"dweb:/ipfs/Qmd2Gzqb12qheWkL94RBK1HU9XBoKwECUbXwLpahR35u31\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stAurVault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_auroraToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_feeCollectorRole",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_contractOperatorRole",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_lpTokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_lpTokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_minDepositAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_swapFeeBasisPoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_liqProvFeeCutBasisPoints",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_auroraAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_lpTokenAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddLiquidity",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_isFullyOperational",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractUpdateOperation",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_lpTokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_auroraAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_stAurAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemoveLiquidity",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_stAurAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_auroraAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StAurLiquidityProvidedByPool",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_auroraAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_stAurAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_totalFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapStAur",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_new",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdateFeeBasisPoints",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_new",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdateLiqProvFeeBasisPoints",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_new",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdateMinDepositAmount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawCollectedFees",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_COLLECTOR_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ONE_HUNDRED_PERCENT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "asset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "auroraBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "auroraToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collectedStAurFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fullyOperational",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isStAurBalanceAvailable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liqProvFeeCutBasisPoints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDepositAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewSwapStAurForAurora",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stAurBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stAurVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapFeeBasisPoints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_stAurAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minAuroraToReceive",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapStAurForAurora"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferStAur"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_isFullyOperational",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateContractOperation"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_feeBasisPoints",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateFeeBasisPoints"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_feeBasisPoints",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateLiqProvFeeBasisPoints"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMinDepositAmount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawCollectedStAurFees"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "asset()": {
            "details": "See {IERC4626-asset}. "
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "convertToAssets(uint256)": {
            "details": "See {IERC4626-convertToAssets}. "
          },
          "convertToShares(uint256)": {
            "details": "See {IERC4626-convertToShares}. "
          },
          "decimals()": {
            "details": "Decimals are read from the underlying asset in the constructor and cached. If this fails (e.g., the asset has not been created yet), the cached value is set to a default obtained by `super.decimals()` (which depends on inheritance but is most likely 18). Override this function in order to set a guaranteed hardcoded value. See {IERC20Metadata-decimals}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "maxDeposit(address)": {
            "details": "See {IERC4626-maxDeposit}. "
          },
          "maxMint(address)": {
            "details": "See {IERC4626-maxMint}. "
          },
          "maxRedeem(address)": {
            "details": "See {IERC4626-maxRedeem}. "
          },
          "maxWithdraw(address)": {
            "details": "See {IERC4626-maxWithdraw}. "
          },
          "mint(uint256,address)": {
            "details": "Use deposit fn instead."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "previewDeposit(uint256)": {
            "details": "See {IERC4626-previewDeposit}. "
          },
          "previewMint(uint256)": {
            "details": "See {IERC4626-previewMint}. "
          },
          "previewRedeem(uint256)": {
            "details": "See {IERC4626-previewRedeem}. "
          },
          "previewSwapStAurForAurora(uint256)": {
            "params": {
              "_amount": "Denominated in stAUR."
            },
            "returns": {
              "_0": "_auroraAmount Denominated in AURORA."
            }
          },
          "previewWithdraw(uint256)": {
            "details": "See {IERC4626-previewWithdraw}. "
          },
          "redeem(uint256,address,address)": {
            "returns": {
              "_0": "ONLY the amount of base assets (AURORA token) that will be returned. However, the liquidity provider expects to receive stAUR tokens as well, in proportion of the redeemed shares."
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "swapStAurForAurora(uint256,uint256)": {
            "params": {
              "_minAuroraToReceive": "Min amount of AURORA tokens that the user is expecting, get a value for this parameter using the function previewSwapStAurForAurora().",
              "_stAurAmount": "Denominated in stAUR."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalAssets()": {
            "details": "Calculate sum of AURORA and stAUR balance, converting the amount of stAUR to AURORA using the Vault price.",
            "returns": {
              "_0": "_amount Denominated in AURORA tokens."
            }
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferStAur(address,uint256,uint256)": {
            "details": "This function will ONLY be called by the stAUR vault to cover Aurora deposits (FLOW 1)."
          },
          "withdraw(uint256,address,address)": {
            "details": "Use redeem fn instead."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deposit(uint256,address)": {
            "notice": "The deposit flow is used to **Add** liquidity to the Liquidity Pool."
          },
          "isStAurBalanceAvailable(uint256)": {
            "notice": "Function to evaluate if a Vault deposit can be covered by the balance of stAUR tokens in the Liquidity Pool."
          },
          "redeem(uint256,address,address)": {
            "notice": "The redeem flow is used to **Remove** liquidity from the Liquidity Pool."
          },
          "swapStAurForAurora(uint256,uint256)": {
            "notice": "Function that allows \"fast unstake\"."
          },
          "transferStAur(address,uint256,uint256)": {
            "notice": "The stAUR Vault will emit the Deposit event if this function runs."
          },
          "updateContractOperation(bool)": {
            "notice": "Use in case of emergency 🦺, stops: 1) adding and removing liquidity, 2) all swaps from stAUR to AURORA tokens and 3) providing stAUR token liquidity to cover deposits (FLOW 1)."
          },
          "withdrawCollectedStAurFees(address)": {
            "notice": "The collected stAUR fees are owned by Meta Pool."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/LiquidityPool.sol": "LiquidityPool"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/LiquidityPool.sol": {
        "keccak256": "0x825584823066bf1816e51977a097bd7059547bf234485e3b863cc6c1c40d9415",
        "urls": [
          "bzz-raw://75fe56a1d97635491d049895723246e71a55c5b5d2c9db4849434530c830a20a",
          "dweb:/ipfs/QmfRwBhjDdHqJUmVQvcfx5CsdMRy2PQe6dKujWSxwE4kUY"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILiquidityPool.sol": {
        "keccak256": "0x3bd626e66aada281d141a3fede6134f0633553cdf20d57a6f75be872ea9343ad",
        "urls": [
          "bzz-raw://3c9eab213ef03a8e61684362a735ac7ee0009aa7ff2ba1ea23b75bcdcf50ace5",
          "dweb:/ipfs/QmWbeTKEvmiEBgc54y3MzzCqsYSFFp9strjc8oZw2HPoUy"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakedAuroraVault.sol": {
        "keccak256": "0xea339e7b7e8535f211cc98dd629e5fa4241614437c6ab6c8dfd7a42ae51b7ac7",
        "urls": [
          "bzz-raw://5a03799d4a69fcc952c529336d995f4f5bf06380bae1699fea6e11ebc5440e78",
          "dweb:/ipfs/QmZFCRr93wmtBQL2Z1nSgFTThAvwoyDDoTzy7XvP8tePxG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a",
        "urls": [
          "bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe",
          "dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0xd82776ed6975a5939668e068f995acb1394c2f60a12a9ef3f14cacb91b5a8fd4",
        "urls": [
          "bzz-raw://0f381a6a834cd8d5296b819365ffd39d192ab7ac3d458b894a612d1c3b92f03f",
          "dweb:/ipfs/QmTRQE9c57bHGtuubLp8fMAA5jfsb1BR5s7iPd9cWSPfKm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol": {
        "keccak256": "0xab83c36e40ee8fd41471fe94edcad13adae83b7f5179d022780062414e8fbf55",
        "urls": [
          "bzz-raw://0ff872f2a6fb1431e727c09151ffbb30f3e45212d6ad73b64b27c6b64608a23b",
          "dweb:/ipfs/Qmd2Gzqb12qheWkL94RBK1HU9XBoKwECUbXwLpahR35u31"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/LiquidityPool.sol",
    "id": 1255,
    "exportedSymbols": {
      "AccessControl": [
        41095
      ],
      "Address": [
        43356
      ],
      "Context": [
        43378
      ],
      "ERC165": [
        43577
      ],
      "ERC20": [
        41923
      ],
      "ERC4626": [
        42684
      ],
      "IAccessControl": [
        41168
      ],
      "IERC165": [
        43589
      ],
      "IERC20": [
        42001
      ],
      "IERC20Metadata": [
        42709
      ],
      "IERC20Permit": [
        42745
      ],
      "IERC4626": [
        41336
      ],
      "ILiquidityPool": [
        3609
      ],
      "IStakedAuroraVault": [
        3653
      ],
      "LiquidityPool": [
        1254
      ],
      "Math": [
        44454
      ],
      "SafeERC20": [
        43026
      ],
      "Strings": [
        43553
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:11793:1",
    "nodes": [
      {
        "id": 448,
        "nodeType": "PragmaDirective",
        "src": "32:23:1",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 449,
        "nodeType": "ImportDirective",
        "src": "57:41:1",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ILiquidityPool.sol",
        "file": "./interfaces/ILiquidityPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1255,
        "sourceUnit": 3610,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 450,
        "nodeType": "ImportDirective",
        "src": "99:45:1",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakedAuroraVault.sol",
        "file": "./interfaces/IStakedAuroraVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1255,
        "sourceUnit": 3654,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 451,
        "nodeType": "ImportDirective",
        "src": "145:58:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1255,
        "sourceUnit": 41096,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 452,
        "nodeType": "ImportDirective",
        "src": "204:55:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1255,
        "sourceUnit": 41924,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 453,
        "nodeType": "ImportDirective",
        "src": "260:56:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1255,
        "sourceUnit": 42002,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 454,
        "nodeType": "ImportDirective",
        "src": "317:68:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1255,
        "sourceUnit": 42685,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1254,
        "nodeType": "ContractDefinition",
        "src": "474:11351:1",
        "nodes": [
          {
            "id": 465,
            "nodeType": "UsingForDirective",
            "src": "545:27:1",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 462,
              "name": "SafeERC20",
              "nameLocations": [
                "551:9:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43026,
              "src": "551:9:1"
            },
            "typeName": {
              "id": 464,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 463,
                "name": "IERC20",
                "nameLocations": [
                  "565:6:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42001,
                "src": "565:6:1"
              },
              "referencedDeclaration": 42001,
              "src": "565:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$42001",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 469,
            "nodeType": "UsingForDirective",
            "src": "577:39:1",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 466,
              "name": "SafeERC20",
              "nameLocations": [
                "583:9:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43026,
              "src": "583:9:1"
            },
            "typeName": {
              "id": 468,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 467,
                "name": "IStakedAuroraVault",
                "nameLocations": [
                  "597:18:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3653,
                "src": "597:18:1"
              },
              "referencedDeclaration": 3653,
              "src": "597:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakedAuroraVault_$3653",
                "typeString": "contract IStakedAuroraVault"
              }
            }
          },
          {
            "id": 473,
            "nodeType": "VariableDeclaration",
            "src": "669:52:1",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 470,
              "nodeType": "StructuredDocumentation",
              "src": "622:42:1",
              "text": "@dev 100% represented as Basis Points."
            },
            "functionSelector": "dd0081c7",
            "mutability": "constant",
            "name": "ONE_HUNDRED_PERCENT",
            "nameLocation": "693:19:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 471,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "669:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 472,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "715:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "public"
          },
          {
            "id": 478,
            "nodeType": "VariableDeclaration",
            "src": "728:60:1",
            "nodes": [],
            "constant": true,
            "functionSelector": "75b238fc",
            "mutability": "constant",
            "name": "ADMIN_ROLE",
            "nameLocation": "752:10:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 474,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "728:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e5f524f4c45",
                  "id": 476,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "775:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  },
                  "value": "ADMIN_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  }
                ],
                "id": 475,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "765:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 477,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "765:23:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 483,
            "nodeType": "VariableDeclaration",
            "src": "794:76:1",
            "nodes": [],
            "constant": true,
            "functionSelector": "62a2a47c",
            "mutability": "constant",
            "name": "FEE_COLLECTOR_ROLE",
            "nameLocation": "818:18:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 479,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "794:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4645455f434f4c4c4543544f525f524f4c45",
                  "id": 481,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "849:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b67038821",
                    "typeString": "literal_string \"FEE_COLLECTOR_ROLE\""
                  },
                  "value": "FEE_COLLECTOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_2dca0f5ce7e75a4b43fe2b0d6f5d0b7a2bf92ecf89f8f0aa17b8308b67038821",
                    "typeString": "literal_string \"FEE_COLLECTOR_ROLE\""
                  }
                ],
                "id": 480,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "839:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 482,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "839:31:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 488,
            "nodeType": "VariableDeclaration",
            "src": "876:66:1",
            "nodes": [],
            "constant": true,
            "functionSelector": "f5b541a6",
            "mutability": "constant",
            "name": "OPERATOR_ROLE",
            "nameLocation": "900:13:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 484,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "876:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f50455241544f525f524f4c45",
                  "id": 486,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "926:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  },
                  "value": "OPERATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  }
                ],
                "id": 485,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "916:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 487,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "916:26:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 491,
            "nodeType": "VariableDeclaration",
            "src": "1022:35:1",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 489,
              "nodeType": "StructuredDocumentation",
              "src": "949:68:1",
              "text": "@dev Contract addresses of the stAUR vault and the AURORA token."
            },
            "functionSelector": "367c98b8",
            "mutability": "immutable",
            "name": "stAurVault",
            "nameLocation": "1047:10:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 490,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1022:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 493,
            "nodeType": "VariableDeclaration",
            "src": "1063:36:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "5578fdb2",
            "mutability": "immutable",
            "name": "auroraToken",
            "nameLocation": "1088:11:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 492,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1063:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 496,
            "nodeType": "VariableDeclaration",
            "src": "1165:27:1",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 494,
              "nodeType": "StructuredDocumentation",
              "src": "1106:54:1",
              "text": "@dev Internal accounting for the two vault assets."
            },
            "functionSelector": "e1437bcb",
            "mutability": "mutable",
            "name": "stAurBalance",
            "nameLocation": "1180:12:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 495,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1165:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 498,
            "nodeType": "VariableDeclaration",
            "src": "1198:28:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "4fb88847",
            "mutability": "mutable",
            "name": "auroraBalance",
            "nameLocation": "1213:13:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 497,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1198:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 500,
            "nodeType": "VariableDeclaration",
            "src": "1232:31:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "645006ca",
            "mutability": "mutable",
            "name": "minDepositAmount",
            "nameLocation": "1247:16:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 499,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1232:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 503,
            "nodeType": "VariableDeclaration",
            "src": "1341:33:1",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 501,
              "nodeType": "StructuredDocumentation",
              "src": "1270:66:1",
              "text": "@dev Fee is represented as Basis Points (100 points == 1.00%)."
            },
            "functionSelector": "a22f2392",
            "mutability": "mutable",
            "name": "swapFeeBasisPoints",
            "nameLocation": "1356:18:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 502,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1341:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 506,
            "nodeType": "VariableDeclaration",
            "src": "1455:39:1",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 504,
              "nodeType": "StructuredDocumentation",
              "src": "1381:69:1",
              "text": "@dev How much of the Swap Fee, the liquidity providers will keep."
            },
            "functionSelector": "5e30d67e",
            "mutability": "mutable",
            "name": "liqProvFeeCutBasisPoints",
            "nameLocation": "1470:24:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 505,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1455:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 509,
            "nodeType": "VariableDeclaration",
            "src": "1581:33:1",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 507,
              "nodeType": "StructuredDocumentation",
              "src": "1501:75:1",
              "text": "@dev The remaining Fees will be available to be collected by Meta Pool."
            },
            "functionSelector": "597cc4d1",
            "mutability": "mutable",
            "name": "collectedStAurFees",
            "nameLocation": "1596:18:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 508,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1581:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 511,
            "nodeType": "VariableDeclaration",
            "src": "1621:28:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "5ade1904",
            "mutability": "mutable",
            "name": "fullyOperational",
            "nameLocation": "1633:16:1",
            "scope": 1254,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 510,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1621:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 523,
            "nodeType": "ModifierDefinition",
            "src": "1656:111:1",
            "nodes": [],
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "1682:85:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 514,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1700:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1704:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1700:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 516,
                          "name": "stAurVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "1714:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1700:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f464f525f53544155525f5641554c54",
                        "id": 518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1726:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c8e75ec6330a623f1a99eecbfb7f450990b8b6d59c62a9c31ff8219e989608c",
                          "typeString": "literal_string \"ONLY_FOR_STAUR_VAULT\""
                        },
                        "value": "ONLY_FOR_STAUR_VAULT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c8e75ec6330a623f1a99eecbfb7f450990b8b6d59c62a9c31ff8219e989608c",
                          "typeString": "literal_string \"ONLY_FOR_STAUR_VAULT\""
                        }
                      ],
                      "id": 513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1692:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1692:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "1692:57:1"
                },
                {
                  "id": 521,
                  "nodeType": "PlaceholderStatement",
                  "src": "1759:1:1"
                }
              ]
            },
            "name": "onlyStAurVault",
            "nameLocation": "1665:14:1",
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1679:2:1"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 532,
            "nodeType": "ModifierDefinition",
            "src": "1773:122:1",
            "nodes": [],
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "1805:90:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 526,
                        "name": "fullyOperational",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 511,
                        "src": "1823:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "434f4e54524143545f49535f4e4f545f46554c4c595f4f5045524154494f4e414c",
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1841:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ce173d78881edd92f304f7ded4ef2abd7f0112a2e9ab78a0f7cf22076f331fb",
                          "typeString": "literal_string \"CONTRACT_IS_NOT_FULLY_OPERATIONAL\""
                        },
                        "value": "CONTRACT_IS_NOT_FULLY_OPERATIONAL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ce173d78881edd92f304f7ded4ef2abd7f0112a2e9ab78a0f7cf22076f331fb",
                          "typeString": "literal_string \"CONTRACT_IS_NOT_FULLY_OPERATIONAL\""
                        }
                      ],
                      "id": 525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1815:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1815:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:62:1"
                },
                {
                  "id": 530,
                  "nodeType": "PlaceholderStatement",
                  "src": "1887:1:1"
                }
              ]
            },
            "name": "onlyFullyOperational",
            "nameLocation": "1782:20:1",
            "parameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1802:2:1"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 545,
            "nodeType": "ModifierDefinition",
            "src": "1901:144:1",
            "nodes": [],
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "1949:96:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 537,
                          "name": "_basisPoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "1967:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 538,
                          "name": "ONE_HUNDRED_PERCENT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 473,
                          "src": "1983:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1967:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e56414c49445f42415349535f504f494e5453",
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2004:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccc231903cc56d466e42c95461e916bccfec5ce993183c180be6353273dc5fd8",
                          "typeString": "literal_string \"INVALID_BASIS_POINTS\""
                        },
                        "value": "INVALID_BASIS_POINTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccc231903cc56d466e42c95461e916bccfec5ce993183c180be6353273dc5fd8",
                          "typeString": "literal_string \"INVALID_BASIS_POINTS\""
                        }
                      ],
                      "id": 536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1959:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1959:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:68:1"
                },
                {
                  "id": 543,
                  "nodeType": "PlaceholderStatement",
                  "src": "2037:1:1"
                }
              ]
            },
            "name": "checkBasisPoints",
            "nameLocation": "1910:16:1",
            "parameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "_basisPoints",
                  "nameLocation": "1935:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "1927:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1926:22:1"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 659,
            "nodeType": "FunctionDefinition",
            "src": "2051:1260:1",
            "nodes": [],
            "body": {
              "id": 658,
              "nodeType": "Block",
              "src": "2575:736:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 582,
                                "name": "_stAurVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 547,
                                "src": "2606:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 585,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2629:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 584,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2621:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 583,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2621:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2621:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2606:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 588,
                                "name": "_auroraToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 549,
                                "src": "2651:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 591,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2675:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2667:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 589,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2667:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2667:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2651:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2606:71:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 595,
                              "name": "_feeCollectorRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 551,
                              "src": "2697:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2726:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2718:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 596,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2718:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2718:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2697:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2606:122:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 602,
                            "name": "_contractOperatorRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "2748:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2781:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2773:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 603,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2773:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2773:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2748:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2606:177:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e56414c49445f5a45524f5f41444452455353",
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2797:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a5a6fa8818e8780fab0c0fa60c5846123b4c114f4f77a89436958663aff4437",
                          "typeString": "literal_string \"INVALID_ZERO_ADDRESS\""
                        },
                        "value": "INVALID_ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a5a6fa8818e8780fab0c0fa60c5846123b4c114f4f77a89436958663aff4437",
                          "typeString": "literal_string \"INVALID_ZERO_ADDRESS\""
                        }
                      ],
                      "id": 581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2585:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:244:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:244:1"
                },
                {
                  "expression": {
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 612,
                      "name": "stAurVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "2839:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 613,
                      "name": "_stAurVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 547,
                      "src": "2852:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2839:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "2839:24:1"
                },
                {
                  "expression": {
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 616,
                      "name": "auroraToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "2873:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 617,
                      "name": "_auroraToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "2887:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2873:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "2873:26:1"
                },
                {
                  "expression": {
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 620,
                      "name": "minDepositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "2909:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 621,
                      "name": "_minDepositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "2928:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2909:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "2909:36:1"
                },
                {
                  "expression": {
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 624,
                      "name": "swapFeeBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "2955:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 625,
                      "name": "_swapFeeBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "2976:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2955:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "2955:40:1"
                },
                {
                  "expression": {
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 628,
                      "name": "liqProvFeeCutBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 506,
                      "src": "3005:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 629,
                      "name": "_liqProvFeeCutBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 563,
                      "src": "3032:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3005:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "3005:52:1"
                },
                {
                  "expression": {
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 632,
                      "name": "fullyOperational",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "3067:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3086:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3067:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "3067:23:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 637,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "3112:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 638,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3124:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3128:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3124:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 636,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41063,
                      "src": "3101:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3101:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "3101:34:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 643,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40807,
                        "src": "3156:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 644,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3176:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3180:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3176:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 642,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41063,
                      "src": "3145:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3145:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "3145:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 649,
                        "name": "FEE_COLLECTOR_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "3208:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 650,
                        "name": "_feeCollectorRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "3228:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 648,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41063,
                      "src": "3197:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3197:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "3197:49:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 654,
                        "name": "OPERATOR_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 488,
                        "src": "3267:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 655,
                        "name": "_contractOperatorRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "3282:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 653,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41063,
                      "src": "3256:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3256:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "3256:48:1"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 567,
                        "name": "_auroraToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "2414:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 566,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42001,
                      "src": "2407:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$42001_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2407:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42001",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 569,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 565,
                  "name": "ERC4626",
                  "nameLocations": [
                    "2399:7:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42684,
                  "src": "2399:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2399:29:1"
              },
              {
                "arguments": [
                  {
                    "id": 571,
                    "name": "_lpTokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 555,
                    "src": "2443:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 572,
                    "name": "_lpTokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 557,
                    "src": "2457:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 573,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 570,
                  "name": "ERC20",
                  "nameLocations": [
                    "2437:5:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41923,
                  "src": "2437:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2437:35:1"
              },
              {
                "arguments": [
                  {
                    "id": 575,
                    "name": "_swapFeeBasisPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 561,
                    "src": "2498:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 576,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 574,
                  "name": "checkBasisPoints",
                  "nameLocations": [
                    "2481:16:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 545,
                  "src": "2481:16:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2481:37:1"
              },
              {
                "arguments": [
                  {
                    "id": 578,
                    "name": "_liqProvFeeCutBasisPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 563,
                    "src": "2544:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 579,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 577,
                  "name": "checkBasisPoints",
                  "nameLocations": [
                    "2527:16:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 545,
                  "src": "2527:16:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2527:43:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "mutability": "mutable",
                  "name": "_stAurVault",
                  "nameLocation": "2080:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "2072:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "_auroraToken",
                  "nameLocation": "2109:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "2101:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2101:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "_feeCollectorRole",
                  "nameLocation": "2139:17:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "2131:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2131:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "mutability": "mutable",
                  "name": "_contractOperatorRole",
                  "nameLocation": "2174:21:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "2166:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2166:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 555,
                  "mutability": "mutable",
                  "name": "_lpTokenName",
                  "nameLocation": "2219:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "2205:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2205:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "mutability": "mutable",
                  "name": "_lpTokenSymbol",
                  "nameLocation": "2255:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "2241:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2241:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "_minDepositAmount",
                  "nameLocation": "2287:17:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "2279:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2279:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "_swapFeeBasisPoints",
                  "nameLocation": "2322:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "2314:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2314:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "_liqProvFeeCutBasisPoints",
                  "nameLocation": "2359:25:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "2351:33:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2062:328:1"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2575:0:1"
            },
            "scope": 1254,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 663,
            "nodeType": "FunctionDefinition",
            "src": "3317:29:1",
            "nodes": [],
            "body": {
              "id": 662,
              "nodeType": "Block",
              "src": "3344:2:1",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3324:2:1"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3344:0:1"
            },
            "scope": 1254,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 682,
            "nodeType": "FunctionDefinition",
            "src": "3352:198:1",
            "nodes": [],
            "body": {
              "id": 681,
              "nodeType": "Block",
              "src": "3448:102:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 671,
                      "name": "minDepositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "3458:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 672,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "3477:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3458:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "3458:26:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 676,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "3523:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 677,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3532:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3536:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3532:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 675,
                      "name": "UpdateMinDepositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3570,
                      "src": "3500:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 680,
                  "nodeType": "EmitStatement",
                  "src": "3495:48:1"
                }
              ]
            },
            "functionSelector": "84780205",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 668,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 488,
                    "src": "3433:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 669,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 667,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3424:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40818,
                  "src": "3424:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3424:23:1"
              }
            ],
            "name": "updateMinDepositAmount",
            "nameLocation": "3361:22:1",
            "parameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3401:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "3393:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3393:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3383:31:1"
            },
            "returnParameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3448:0:1"
            },
            "scope": 1254,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 704,
            "nodeType": "FunctionDefinition",
            "src": "3556:254:1",
            "nodes": [],
            "body": {
              "id": 703,
              "nodeType": "Block",
              "src": "3692:118:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 693,
                      "name": "swapFeeBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "3702:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 694,
                      "name": "_feeBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 684,
                      "src": "3723:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3702:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "3702:36:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 698,
                        "name": "_feeBasisPoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "3775:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 699,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3792:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3796:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3792:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 697,
                      "name": "UpdateFeeBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3558,
                      "src": "3754:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3754:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 702,
                  "nodeType": "EmitStatement",
                  "src": "3749:54:1"
                }
              ]
            },
            "functionSelector": "57802c7d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 687,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 488,
                    "src": "3643:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 688,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 686,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3634:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40818,
                  "src": "3634:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3634:23:1"
              },
              {
                "arguments": [
                  {
                    "id": 690,
                    "name": "_feeBasisPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 684,
                    "src": "3675:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 691,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 689,
                  "name": "checkBasisPoints",
                  "nameLocations": [
                    "3658:16:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 545,
                  "src": "3658:16:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3658:33:1"
              }
            ],
            "name": "updateFeeBasisPoints",
            "nameLocation": "3565:20:1",
            "parameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "_feeBasisPoints",
                  "nameLocation": "3603:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "3595:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3595:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3585:39:1"
            },
            "returnParameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3692:0:1"
            },
            "scope": 1254,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 726,
            "nodeType": "FunctionDefinition",
            "src": "3816:274:1",
            "nodes": [],
            "body": {
              "id": 725,
              "nodeType": "Block",
              "src": "3959:131:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 715,
                      "name": "liqProvFeeCutBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 506,
                      "src": "3969:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 716,
                      "name": "_feeBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "3996:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3969:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "3969:42:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 720,
                        "name": "_feeBasisPoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "4055:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 721,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4072:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4076:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4072:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 719,
                      "name": "UpdateLiqProvFeeBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3564,
                      "src": "4027:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4027:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 724,
                  "nodeType": "EmitStatement",
                  "src": "4022:61:1"
                }
              ]
            },
            "functionSelector": "da9c4b67",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 709,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 488,
                    "src": "3910:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 710,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 708,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3901:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40818,
                  "src": "3901:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3901:23:1"
              },
              {
                "arguments": [
                  {
                    "id": 712,
                    "name": "_feeBasisPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 706,
                    "src": "3942:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 713,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 711,
                  "name": "checkBasisPoints",
                  "nameLocations": [
                    "3925:16:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 545,
                  "src": "3925:16:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3925:33:1"
              }
            ],
            "name": "updateLiqProvFeeBasisPoints",
            "nameLocation": "3825:27:1",
            "parameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 706,
                  "mutability": "mutable",
                  "name": "_feeBasisPoints",
                  "nameLocation": "3870:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 726,
                  "src": "3862:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3862:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3852:39:1"
            },
            "returnParameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3959:0:1"
            },
            "scope": 1254,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 746,
            "nodeType": "FunctionDefinition",
            "src": "4308:228:1",
            "nodes": [],
            "body": {
              "id": 745,
              "nodeType": "Block",
              "src": "4409:127:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 735,
                      "name": "fullyOperational",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "4419:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 736,
                      "name": "_isFullyOperational",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 729,
                      "src": "4438:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4419:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 740,
                        "name": "_isFullyOperational",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "4497:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 741,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4518:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4522:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4518:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 739,
                      "name": "ContractUpdateOperation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "4473:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,address)"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4473:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 744,
                  "nodeType": "EmitStatement",
                  "src": "4468:61:1"
                }
              ]
            },
            "documentation": {
              "id": 727,
              "nodeType": "StructuredDocumentation",
              "src": "4096:207:1",
              "text": "@notice Use in case of emergency 🦺, stops: 1) adding and removing\n liquidity, 2) all swaps from stAUR to AURORA tokens and 3) providing\n stAUR token liquidity to cover deposits (FLOW 1)."
            },
            "functionSelector": "a915277c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 732,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 478,
                    "src": "4397:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 733,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 731,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4388:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40818,
                  "src": "4388:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4388:20:1"
              }
            ],
            "name": "updateContractOperation",
            "nameLocation": "4317:23:1",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "_isFullyOperational",
                  "nameLocation": "4355:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "4350:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4350:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4340:40:1"
            },
            "returnParameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4409:0:1"
            },
            "scope": 1254,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 762,
            "nodeType": "FunctionDefinition",
            "src": "4675:144:1",
            "nodes": [],
            "body": {
              "id": 761,
              "nodeType": "Block",
              "src": "4750:69:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 754,
                            "name": "stAurBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 496,
                            "src": "4768:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 755,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "4784:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4768:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 757,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4767:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 758,
                      "name": "fullyOperational",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "4796:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4767:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 753,
                  "id": 760,
                  "nodeType": "Return",
                  "src": "4760:52:1"
                }
              ]
            },
            "baseFunctions": [
              3585
            ],
            "documentation": {
              "id": 747,
              "nodeType": "StructuredDocumentation",
              "src": "4542:128:1",
              "text": "@notice Function to evaluate if a Vault deposit can be covered by the\n balance of stAUR tokens in the Liquidity Pool."
            },
            "functionSelector": "90c69fe3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStAurBalanceAvailable",
            "nameLocation": "4684:23:1",
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4713:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 762,
                  "src": "4708:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4708:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4707:14:1"
            },
            "returnParameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 762,
                  "src": "4744:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4744:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4743:6:1"
            },
            "scope": 1254,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 813,
            "nodeType": "FunctionDefinition",
            "src": "5017:476:1",
            "nodes": [],
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "5147:346:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 774,
                      "name": "stAurBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 496,
                      "src": "5157:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 775,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 767,
                      "src": "5173:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5157:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "5157:23:1"
                },
                {
                  "assignments": [
                    779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 779,
                      "mutability": "mutable",
                      "name": "_stAurVault",
                      "nameLocation": "5198:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 812,
                      "src": "5190:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 778,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5190:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 781,
                  "initialValue": {
                    "id": 780,
                    "name": "stAurVault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 491,
                    "src": "5212:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5190:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 786,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "5277:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 787,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 767,
                        "src": "5288:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 783,
                            "name": "_stAurVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 779,
                            "src": "5251:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 782,
                          "name": "IStakedAuroraVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3653,
                          "src": "5232:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStakedAuroraVault_$3653_$",
                            "typeString": "type(contract IStakedAuroraVault)"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5232:31:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakedAuroraVault_$3653",
                          "typeString": "contract IStakedAuroraVault"
                        }
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5264:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42777,
                      "src": "5232:44:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42001_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42001_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5232:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "5232:64:1"
                },
                {
                  "expression": {
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 790,
                      "name": "auroraBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "5306:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 791,
                      "name": "_assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "5323:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5306:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 793,
                  "nodeType": "ExpressionStatement",
                  "src": "5306:24:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 798,
                        "name": "_stAurVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "5377:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 801,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5398:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityPool_$1254",
                              "typeString": "contract LiquidityPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityPool_$1254",
                              "typeString": "contract LiquidityPool"
                            }
                          ],
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5390:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 799,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5390:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5390:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 803,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "5405:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 795,
                            "name": "auroraToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "5347:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 794,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42001,
                          "src": "5340:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$42001_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5340:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42001",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5360:16:1",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42803,
                      "src": "5340:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42001_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42001_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5340:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "5340:73:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 807,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "5458:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 808,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 767,
                        "src": "5469:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 809,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "5478:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 806,
                      "name": "StAurLiquidityProvidedByPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3542,
                      "src": "5429:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5429:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 811,
                  "nodeType": "EmitStatement",
                  "src": "5424:62:1"
                }
              ]
            },
            "baseFunctions": [
              3608
            ],
            "documentation": {
              "id": 763,
              "nodeType": "StructuredDocumentation",
              "src": "4825:187:1",
              "text": "@notice The stAUR Vault will emit the Deposit event if this function runs.\n @dev This function will ONLY be called by the stAUR vault\n to cover Aurora deposits (FLOW 1)."
            },
            "functionSelector": "4579c717",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 772,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 771,
                  "name": "onlyStAurVault",
                  "nameLocations": [
                    "5132:14:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 523,
                  "src": "5132:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5132:14:1"
              }
            ],
            "name": "transferStAur",
            "nameLocation": "5026:13:1",
            "parameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "5057:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "5049:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5049:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 767,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5084:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "5076:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5076:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 769,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "5109:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "5101:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5101:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5039:83:1"
            },
            "returnParameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5147:0:1"
            },
            "scope": 1254,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 831,
            "nodeType": "FunctionDefinition",
            "src": "5685:202:1",
            "nodes": [],
            "body": {
              "id": 830,
              "nodeType": "Block",
              "src": "5747:140:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 820,
                          "name": "auroraBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 498,
                          "src": "5778:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 825,
                              "name": "stAurBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "5857:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 822,
                                  "name": "stAurVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 491,
                                  "src": "5829:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 821,
                                "name": "IStakedAuroraVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3653,
                                "src": "5810:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IStakedAuroraVault_$3653_$",
                                  "typeString": "type(contract IStakedAuroraVault)"
                                }
                              },
                              "id": 823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5810:30:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStakedAuroraVault_$3653",
                                "typeString": "contract IStakedAuroraVault"
                              }
                            },
                            "id": 824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5841:15:1",
                            "memberName": "convertToAssets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3628,
                            "src": "5810:46:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5810:60:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5778:92:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 828,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5764:116:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 819,
                  "id": 829,
                  "nodeType": "Return",
                  "src": "5757:123:1"
                }
              ]
            },
            "baseFunctions": [
              42157
            ],
            "documentation": {
              "id": 814,
              "nodeType": "StructuredDocumentation",
              "src": "5503:177:1",
              "text": "@dev Calculate sum of AURORA and stAUR balance, converting the amount of\n stAUR to AURORA using the Vault price.\n @return _amount Denominated in AURORA tokens."
            },
            "functionSelector": "01e1d114",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalAssets",
            "nameLocation": "5694:11:1",
            "overrides": {
              "id": 816,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5720:8:1"
            },
            "parameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5705:2:1"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "5738:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5738:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5737:9:1"
            },
            "scope": 1254,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 868,
            "nodeType": "FunctionDefinition",
            "src": "5978:351:1",
            "nodes": [],
            "body": {
              "id": 867,
              "nodeType": "Block",
              "src": "6108:221:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 845,
                          "name": "_assets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 834,
                          "src": "6126:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 846,
                          "name": "minDepositAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 500,
                          "src": "6137:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6126:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c4553535f5448414e5f4d494e5f4445504f5349545f414d4f554e54",
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6155:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e3aac547a24f9f34de8ec97d0c0d463ca4894c99e76572f1c1f3a50cbf2579c",
                          "typeString": "literal_string \"LESS_THAN_MIN_DEPOSIT_AMOUNT\""
                        },
                        "value": "LESS_THAN_MIN_DEPOSIT_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e3aac547a24f9f34de8ec97d0c0d463ca4894c99e76572f1c1f3a50cbf2579c",
                          "typeString": "literal_string \"LESS_THAN_MIN_DEPOSIT_AMOUNT\""
                        }
                      ],
                      "id": 844,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6118:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6118:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "6118:68:1"
                },
                {
                  "assignments": [
                    852
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 852,
                      "mutability": "mutable",
                      "name": "_shares",
                      "nameLocation": "6205:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 867,
                      "src": "6197:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 851,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6197:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 856,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 854,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "6230:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 853,
                      "name": "previewDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42277,
                      "src": "6215:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6215:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6197:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 858,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6257:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6261:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6257:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 860,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "6269:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 861,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "6280:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 862,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 852,
                        "src": "6289:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 857,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1253
                      ],
                      "referencedDeclaration": 1253,
                      "src": "6248:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6248:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "6248:49:1"
                },
                {
                  "expression": {
                    "id": 865,
                    "name": "_shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 852,
                    "src": "6315:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 843,
                  "id": 866,
                  "nodeType": "Return",
                  "src": "6308:14:1"
                }
              ]
            },
            "baseFunctions": [
              42365
            ],
            "documentation": {
              "id": 832,
              "nodeType": "StructuredDocumentation",
              "src": "5893:80:1",
              "text": "@notice The deposit flow is used to **Add** liquidity to the Liquidity Pool."
            },
            "functionSelector": "6e553f65",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 840,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 839,
                  "name": "onlyFullyOperational",
                  "nameLocations": [
                    "6069:20:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 532,
                  "src": "6069:20:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6069:20:1"
              }
            ],
            "name": "deposit",
            "nameLocation": "5987:7:1",
            "overrides": {
              "id": 838,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6060:8:1"
            },
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "6012:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "6004:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6004:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "6037:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "6029:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6029:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5994:58:1"
            },
            "returnParameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "6099:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6099:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6098:9:1"
            },
            "scope": 1254,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 979,
            "nodeType": "FunctionDefinition",
            "src": "6636:1220:1",
            "nodes": [],
            "body": {
              "id": 978,
              "nodeType": "Block",
              "src": "6789:1067:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 884,
                          "name": "_shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "6807:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6817:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6807:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43414e4e4f545f52454445454d5f5a45524f5f534841524553",
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6820:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_366ffaf6877df8850ae214928525c69903d7756f348f8e8a1c9c826410eea10d",
                          "typeString": "literal_string \"CANNOT_REDEEM_ZERO_SHARES\""
                        },
                        "value": "CANNOT_REDEEM_ZERO_SHARES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_366ffaf6877df8850ae214928525c69903d7756f348f8e8a1c9c826410eea10d",
                          "typeString": "literal_string \"CANNOT_REDEEM_ZERO_SHARES\""
                        }
                      ],
                      "id": 883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6799:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6799:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 889,
                  "nodeType": "ExpressionStatement",
                  "src": "6799:49:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 890,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6862:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6866:6:1",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6862:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 892,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 875,
                      "src": "6876:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6862:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 902,
                  "nodeType": "IfStatement",
                  "src": "6858:95:1",
                  "trueBody": {
                    "id": 901,
                    "nodeType": "Block",
                    "src": "6884:69:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 895,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "6914:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 896,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6922:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6926:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6922:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 898,
                              "name": "_shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 871,
                              "src": "6934:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 894,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41900,
                            "src": "6898:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6898:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 900,
                        "nodeType": "ExpressionStatement",
                        "src": "6898:44:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 904,
                      "mutability": "mutable",
                      "name": "ONE_AURORA",
                      "nameLocation": "7001:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 978,
                      "src": "6993:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 903,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6993:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 906,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7014:7:1",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6993:28:1"
                },
                {
                  "assignments": [
                    908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 908,
                      "mutability": "mutable",
                      "name": "poolPercentage",
                      "nameLocation": "7039:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 978,
                      "src": "7031:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 907,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7031:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 916,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 909,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "7057:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 910,
                            "name": "ONE_AURORA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "7067:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7057:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 912,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7056:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 913,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41421,
                        "src": "7081:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7081:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7056:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7031:63:1"
                },
                {
                  "assignments": [
                    918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 918,
                      "mutability": "mutable",
                      "name": "auroraToSend",
                      "nameLocation": "7112:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 978,
                      "src": "7104:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 917,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7104:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 925,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 919,
                            "name": "poolPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "7128:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 920,
                            "name": "auroraBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
                            "src": "7145:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7128:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 922,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7127:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 923,
                      "name": "ONE_AURORA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 904,
                      "src": "7162:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7127:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7104:68:1"
                },
                {
                  "assignments": [
                    927
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 927,
                      "mutability": "mutable",
                      "name": "stAurToSend",
                      "nameLocation": "7190:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 978,
                      "src": "7182:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 926,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7182:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 934,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 928,
                            "name": "poolPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "7205:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 929,
                            "name": "stAurBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 496,
                            "src": "7222:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7205:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 931,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7204:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 932,
                      "name": "ONE_AURORA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 904,
                      "src": "7238:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7204:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7182:66:1"
                },
                {
                  "expression": {
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 935,
                      "name": "auroraBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "7259:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 936,
                      "name": "auroraToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "7276:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7259:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "7259:29:1"
                },
                {
                  "expression": {
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 939,
                      "name": "stAurBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 496,
                      "src": "7298:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 940,
                      "name": "stAurToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 927,
                      "src": "7314:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7298:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 942,
                  "nodeType": "ExpressionStatement",
                  "src": "7298:27:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 944,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7411:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7415:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7411:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 946,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 871,
                        "src": "7423:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 943,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41812,
                      "src": "7405:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7405:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "7405:26:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 954,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "7502:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 955,
                        "name": "auroraToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 918,
                        "src": "7513:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 950,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42141,
                              "src": "7480:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7480:7:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 949,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42001,
                          "src": "7473:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$42001_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7473:15:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42001",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7489:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42777,
                      "src": "7473:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42001_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42001_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7473:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "7473:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 962,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "7617:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 963,
                        "name": "stAurToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 927,
                        "src": "7628:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 959,
                            "name": "stAurVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "7592:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 958,
                          "name": "IStakedAuroraVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3653,
                          "src": "7573:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStakedAuroraVault_$3653_$",
                            "typeString": "type(contract IStakedAuroraVault)"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7573:30:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakedAuroraVault_$3653",
                          "typeString": "contract IStakedAuroraVault"
                        }
                      },
                      "id": 961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7604:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42777,
                      "src": "7573:43:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42001_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42001_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7573:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 965,
                  "nodeType": "ExpressionStatement",
                  "src": "7573:67:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 967,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7685:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7689:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7685:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 969,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "7709:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 970,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "7732:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 971,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 871,
                        "src": "7752:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 972,
                        "name": "auroraToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 918,
                        "src": "7773:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 973,
                        "name": "stAurToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 927,
                        "src": "7799:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 966,
                      "name": "RemoveLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3534,
                      "src": "7656:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7656:164:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 975,
                  "nodeType": "EmitStatement",
                  "src": "7651:169:1"
                },
                {
                  "expression": {
                    "id": 976,
                    "name": "auroraToSend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 918,
                    "src": "7837:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 882,
                  "id": 977,
                  "nodeType": "Return",
                  "src": "7830:19:1"
                }
              ]
            },
            "baseFunctions": [
              42482
            ],
            "documentation": {
              "id": 869,
              "nodeType": "StructuredDocumentation",
              "src": "6335:296:1",
              "text": "@notice The redeem flow is used to **Remove** liquidity from the Liquidity Pool.\n @return ONLY the amount of base assets (AURORA token) that will be returned.\n However, the liquidity provider expects to receive stAUR tokens as well,\n in proportion of the redeemed shares."
            },
            "functionSelector": "ba087652",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 879,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 878,
                  "name": "onlyFullyOperational",
                  "nameLocations": [
                    "6750:20:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 532,
                  "src": "6750:20:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6750:20:1"
              }
            ],
            "name": "redeem",
            "nameLocation": "6645:6:1",
            "overrides": {
              "id": 877,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6741:8:1"
            },
            "parameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "6669:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 979,
                  "src": "6661:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6661:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "6694:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 979,
                  "src": "6686:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6686:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "6721:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 979,
                  "src": "6713:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6713:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6651:82:1"
            },
            "returnParameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 979,
                  "src": "6780:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6780:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6779:9:1"
            },
            "scope": 1254,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 995,
            "nodeType": "FunctionDefinition",
            "src": "7899:118:1",
            "nodes": [],
            "body": {
              "id": 994,
              "nodeType": "Block",
              "src": "7970:47:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "554e415641494c41424c455f46554e4354494f4e",
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7987:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2ba802d38a5711dd46e4457c0011e0677fd130d7a6e86b9d4fc2b53a3530e88",
                          "typeString": "literal_string \"UNAVAILABLE_FUNCTION\""
                        },
                        "value": "UNAVAILABLE_FUNCTION"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a2ba802d38a5711dd46e4457c0011e0677fd130d7a6e86b9d4fc2b53a3530e88",
                          "typeString": "literal_string \"UNAVAILABLE_FUNCTION\""
                        }
                      ],
                      "id": 990,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "7980:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7980:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "7980:30:1"
                }
              ]
            },
            "baseFunctions": [
              42402
            ],
            "documentation": {
              "id": 980,
              "nodeType": "StructuredDocumentation",
              "src": "7862:32:1",
              "text": "@dev Use deposit fn instead."
            },
            "functionSelector": "94bf804d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "7908:4:1",
            "overrides": {
              "id": 986,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7938:8:1"
            },
            "parameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 982,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "7913:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7913:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 984,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "7922:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7922:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7912:18:1"
            },
            "returnParameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "7961:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7961:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7960:9:1"
            },
            "scope": 1254,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1013,
            "nodeType": "FunctionDefinition",
            "src": "8059:131:1",
            "nodes": [],
            "body": {
              "id": 1012,
              "nodeType": "Block",
              "src": "8143:47:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "554e415641494c41424c455f46554e4354494f4e",
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8160:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2ba802d38a5711dd46e4457c0011e0677fd130d7a6e86b9d4fc2b53a3530e88",
                          "typeString": "literal_string \"UNAVAILABLE_FUNCTION\""
                        },
                        "value": "UNAVAILABLE_FUNCTION"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a2ba802d38a5711dd46e4457c0011e0677fd130d7a6e86b9d4fc2b53a3530e88",
                          "typeString": "literal_string \"UNAVAILABLE_FUNCTION\""
                        }
                      ],
                      "id": 1008,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "8153:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8153:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "8153:30:1"
                }
              ]
            },
            "baseFunctions": [
              42442
            ],
            "documentation": {
              "id": 996,
              "nodeType": "StructuredDocumentation",
              "src": "8023:31:1",
              "text": "@dev Use redeem fn instead."
            },
            "functionSelector": "b460af94",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "8068:8:1",
            "overrides": {
              "id": 1004,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8111:8:1"
            },
            "parameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1013,
                  "src": "8077:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8077:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1013,
                  "src": "8086:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8086:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1002,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1013,
                  "src": "8095:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8095:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8076:27:1"
            },
            "returnParameters": {
              "id": 1007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1006,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1013,
                  "src": "8134:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8134:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8133:9:1"
            },
            "scope": 1254,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1035,
            "nodeType": "FunctionDefinition",
            "src": "8294:242:1",
            "nodes": [],
            "body": {
              "id": 1034,
              "nodeType": "Block",
              "src": "8378:158:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1022,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1022,
                      "mutability": "mutable",
                      "name": "_discountedAmount",
                      "nameLocation": "8397:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1034,
                      "src": "8389:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1021,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8389:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 1026,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1024,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "8439:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1023,
                      "name": "_calculatePoolFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1210,
                      "src": "8420:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8420:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8388:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1031,
                        "name": "_discountedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1022,
                        "src": "8511:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1028,
                            "name": "stAurVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "8483:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1027,
                          "name": "IStakedAuroraVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3653,
                          "src": "8464:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStakedAuroraVault_$3653_$",
                            "typeString": "type(contract IStakedAuroraVault)"
                          }
                        },
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8464:30:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakedAuroraVault_$3653",
                          "typeString": "contract IStakedAuroraVault"
                        }
                      },
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8495:15:1",
                      "memberName": "convertToAssets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3628,
                      "src": "8464:46:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8464:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1020,
                  "id": 1033,
                  "nodeType": "Return",
                  "src": "8457:72:1"
                }
              ]
            },
            "baseFunctions": [
              3592
            ],
            "documentation": {
              "id": 1014,
              "nodeType": "StructuredDocumentation",
              "src": "8196:93:1",
              "text": "@param _amount Denominated in stAUR.\n @return _auroraAmount Denominated in AURORA."
            },
            "functionSelector": "89197faf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewSwapStAurForAurora",
            "nameLocation": "8303:25:1",
            "parameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8337:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "8329:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8329:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8328:17:1"
            },
            "returnParameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "8369:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8369:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8368:9:1"
            },
            "scope": 1254,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1137,
            "nodeType": "FunctionDefinition",
            "src": "8823:1198:1",
            "nodes": [],
            "body": {
              "id": 1136,
              "nodeType": "Block",
              "src": "8954:1067:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1046,
                          "name": "_stAurAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1038,
                          "src": "8972:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8987:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8972:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43414e4e4f545f535741505f5a45524f5f414d4f554e54",
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8990:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_917e7131ad24e2dc761d7c24de6f490e6111abfdb06c74fcf1797c187e9719bd",
                          "typeString": "literal_string \"CANNOT_SWAP_ZERO_AMOUNT\""
                        },
                        "value": "CANNOT_SWAP_ZERO_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_917e7131ad24e2dc761d7c24de6f490e6111abfdb06c74fcf1797c187e9719bd",
                          "typeString": "literal_string \"CANNOT_SWAP_ZERO_AMOUNT\""
                        }
                      ],
                      "id": 1045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8964:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8964:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "8964:52:1"
                },
                {
                  "assignments": [
                    1053,
                    1055,
                    1057
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1053,
                      "mutability": "mutable",
                      "name": "_discountedAmount",
                      "nameLocation": "9048:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1136,
                      "src": "9040:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1052,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9040:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1055,
                      "mutability": "mutable",
                      "name": "_collectedFee",
                      "nameLocation": "9087:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1136,
                      "src": "9079:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1054,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9079:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1057,
                      "mutability": "mutable",
                      "name": "_lpFeeCut",
                      "nameLocation": "9122:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1136,
                      "src": "9114:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1056,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9114:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1061,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1059,
                        "name": "_stAurAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1038,
                        "src": "9163:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1058,
                      "name": "_calculatePoolFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1210,
                      "src": "9144:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9144:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9026:150:1"
                },
                {
                  "assignments": [
                    1064
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1064,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "9206:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1136,
                      "src": "9187:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakedAuroraVault_$3653",
                        "typeString": "contract IStakedAuroraVault"
                      },
                      "typeName": {
                        "id": 1063,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1062,
                          "name": "IStakedAuroraVault",
                          "nameLocations": [
                            "9187:18:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3653,
                          "src": "9187:18:1"
                        },
                        "referencedDeclaration": 3653,
                        "src": "9187:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakedAuroraVault_$3653",
                          "typeString": "contract IStakedAuroraVault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1068,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1066,
                        "name": "stAurVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "9233:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1065,
                      "name": "IStakedAuroraVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "9214:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStakedAuroraVault_$3653_$",
                        "typeString": "type(contract IStakedAuroraVault)"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9214:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakedAuroraVault_$3653",
                      "typeString": "contract IStakedAuroraVault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9187:57:1"
                },
                {
                  "assignments": [
                    1070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1070,
                      "mutability": "mutable",
                      "name": "auroraToSend",
                      "nameLocation": "9262:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1136,
                      "src": "9254:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1069,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9254:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1075,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1073,
                        "name": "_discountedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "9299:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1071,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "9277:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakedAuroraVault_$3653",
                          "typeString": "contract IStakedAuroraVault"
                        }
                      },
                      "id": 1072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9283:15:1",
                      "memberName": "convertToAssets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3628,
                      "src": "9277:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9277:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9254:63:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1077,
                          "name": "auroraToSend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1070,
                          "src": "9336:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1078,
                          "name": "auroraBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 498,
                          "src": "9352:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9336:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f545f454e4f5547485f4155524f5241",
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9367:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4549e7ab19434bdcb5ee34acb459f42d5271b2860ce6db73d6cc10d7492ed4e2",
                          "typeString": "literal_string \"NOT_ENOUGH_AURORA\""
                        },
                        "value": "NOT_ENOUGH_AURORA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4549e7ab19434bdcb5ee34acb459f42d5271b2860ce6db73d6cc10d7492ed4e2",
                          "typeString": "literal_string \"NOT_ENOUGH_AURORA\""
                        }
                      ],
                      "id": 1076,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9328:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9328:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1082,
                  "nodeType": "ExpressionStatement",
                  "src": "9328:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1084,
                          "name": "auroraToSend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1070,
                          "src": "9405:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1085,
                          "name": "_minAuroraToReceive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1040,
                          "src": "9421:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9405:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "554e524541434845445f4d494e5f535741505f414d4f554e54",
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9442:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a89eb6cff365ae32343eb2b06e822b8fe0fc14537ff55daf4812e531122dd8a",
                          "typeString": "literal_string \"UNREACHED_MIN_SWAP_AMOUNT\""
                        },
                        "value": "UNREACHED_MIN_SWAP_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a89eb6cff365ae32343eb2b06e822b8fe0fc14537ff55daf4812e531122dd8a",
                          "typeString": "literal_string \"UNREACHED_MIN_SWAP_AMOUNT\""
                        }
                      ],
                      "id": 1083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9397:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9397:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "9397:73:1"
                },
                {
                  "expression": {
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1090,
                      "name": "stAurBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 496,
                      "src": "9481:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1091,
                            "name": "_discountedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "9498:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1092,
                            "name": "_lpFeeCut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1057,
                            "src": "9518:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9498:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1094,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9497:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9481:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1096,
                  "nodeType": "ExpressionStatement",
                  "src": "9481:47:1"
                },
                {
                  "expression": {
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1097,
                      "name": "collectedStAurFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "9538:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1098,
                      "name": "_collectedFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1055,
                      "src": "9560:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9538:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
                  "src": "9538:35:1"
                },
                {
                  "expression": {
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1101,
                      "name": "auroraBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "9583:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1102,
                      "name": "auroraToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1070,
                      "src": "9600:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9583:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "9583:29:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9694:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9698:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9694:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1112,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9714:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityPool_$1254",
                              "typeString": "contract LiquidityPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityPool_$1254",
                              "typeString": "contract LiquidityPool"
                            }
                          ],
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9706:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1110,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9706:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9706:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1114,
                        "name": "_stAurAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1038,
                        "src": "9721:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1105,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "9671:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakedAuroraVault_$3653",
                          "typeString": "contract IStakedAuroraVault"
                        }
                      },
                      "id": 1107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9677:16:1",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42803,
                      "src": "9671:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42001_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42001_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9671:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "9671:63:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9839:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9843:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9839:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1123,
                        "name": "auroraToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "9851:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1118,
                            "name": "auroraToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "9813:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1117,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42001,
                          "src": "9806:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$42001_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9806:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42001",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9826:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42777,
                      "src": "9806:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42001_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42001_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9806:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1125,
                  "nodeType": "ExpressionStatement",
                  "src": "9806:58:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1127,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9903:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9907:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9903:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1129,
                        "name": "auroraToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "9927:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1130,
                        "name": "_stAurAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1038,
                        "src": "9953:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1131,
                          "name": "_collectedFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1055,
                          "src": "9979:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 1132,
                          "name": "_lpFeeCut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "9995:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9979:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1126,
                      "name": "SwapStAur",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3552,
                      "src": "9880:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9880:134:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1135,
                  "nodeType": "EmitStatement",
                  "src": "9875:139:1"
                }
              ]
            },
            "baseFunctions": [
              3599
            ],
            "documentation": {
              "id": 1036,
              "nodeType": "StructuredDocumentation",
              "src": "8542:276:1",
              "text": "@notice Function that allows \"fast unstake\".\n @param _stAurAmount Denominated in stAUR.\n @param _minAuroraToReceive Min amount of AURORA tokens that the user is expecting,\n get a value for this parameter using the function previewSwapStAurForAurora()."
            },
            "functionSelector": "6505bef4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1042,
                  "name": "onlyFullyOperational",
                  "nameLocations": [
                    "8933:20:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 532,
                  "src": "8933:20:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "8933:20:1"
              }
            ],
            "name": "swapStAurForAurora",
            "nameLocation": "8832:18:1",
            "parameters": {
              "id": 1041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1038,
                  "mutability": "mutable",
                  "name": "_stAurAmount",
                  "nameLocation": "8868:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "8860:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8860:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1040,
                  "mutability": "mutable",
                  "name": "_minAuroraToReceive",
                  "nameLocation": "8898:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "8890:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8890:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8850:73:1"
            },
            "returnParameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8954:0:1"
            },
            "scope": 1254,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1170,
            "nodeType": "FunctionDefinition",
            "src": "10092:346:1",
            "nodes": [],
            "body": {
              "id": 1169,
              "nodeType": "Block",
              "src": "10199:239:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1147,
                      "mutability": "mutable",
                      "name": "_toTransfer",
                      "nameLocation": "10217:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1169,
                      "src": "10209:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1146,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10209:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1149,
                  "initialValue": {
                    "id": 1148,
                    "name": "collectedStAurFees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 509,
                    "src": "10231:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10209:40:1"
                },
                {
                  "expression": {
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1150,
                      "name": "collectedStAurFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "10259:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10280:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10259:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "10259:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1158,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1140,
                        "src": "10335:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1159,
                        "name": "_toTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "10346:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1155,
                            "name": "stAurVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "10310:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1154,
                          "name": "IStakedAuroraVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3653,
                          "src": "10291:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStakedAuroraVault_$3653_$",
                            "typeString": "type(contract IStakedAuroraVault)"
                          }
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10291:30:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakedAuroraVault_$3653",
                          "typeString": "contract IStakedAuroraVault"
                        }
                      },
                      "id": 1157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10322:12:1",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42777,
                      "src": "10291:43:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42001_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42001_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10291:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1161,
                  "nodeType": "ExpressionStatement",
                  "src": "10291:67:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1163,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1140,
                        "src": "10396:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1164,
                        "name": "_toTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "10407:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10420:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10424:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10420:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1162,
                      "name": "WithdrawCollectedFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3578,
                      "src": "10374:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10374:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1168,
                  "nodeType": "EmitStatement",
                  "src": "10369:62:1"
                }
              ]
            },
            "documentation": {
              "id": 1138,
              "nodeType": "StructuredDocumentation",
              "src": "10027:60:1",
              "text": "@notice The collected stAUR fees are owned by Meta Pool."
            },
            "functionSelector": "9a47b53c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1143,
                    "name": "FEE_COLLECTOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 483,
                    "src": "10170:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1142,
                  "name": "onlyRole",
                  "nameLocations": [
                    "10161:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40818,
                  "src": "10161:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "10161:28:1"
              }
            ],
            "name": "withdrawCollectedStAurFees",
            "nameLocation": "10101:26:1",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "10145:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1170,
                  "src": "10137:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10137:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10127:33:1"
            },
            "returnParameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10199:0:1"
            },
            "scope": 1254,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1210,
            "nodeType": "FunctionDefinition",
            "src": "10911:470:1",
            "nodes": [],
            "body": {
              "id": 1209,
              "nodeType": "Block",
              "src": "11019:362:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1183,
                      "mutability": "mutable",
                      "name": "totalFee",
                      "nameLocation": "11037:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1209,
                      "src": "11029:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1182,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11029:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1190,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1184,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1173,
                            "src": "11062:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1185,
                            "name": "swapFeeBasisPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 503,
                            "src": "11072:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11062:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1187,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11048:52:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1188,
                      "name": "ONE_HUNDRED_PERCENT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "11103:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11048:74:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11029:93:1"
                },
                {
                  "assignments": [
                    1192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1192,
                      "mutability": "mutable",
                      "name": "_lpFeeCut",
                      "nameLocation": "11210:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1209,
                      "src": "11202:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1191,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11202:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1199,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1193,
                            "name": "totalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "11236:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1194,
                            "name": "liqProvFeeCutBasisPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "11247:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11236:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1196,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11222:59:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1197,
                      "name": "ONE_HUNDRED_PERCENT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "11284:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11222:81:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11202:101:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1200,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "11322:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1201,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1183,
                          "src": "11332:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11322:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1203,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1183,
                          "src": "11342:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1204,
                          "name": "_lpFeeCut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1192,
                          "src": "11353:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11342:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1206,
                        "name": "_lpFeeCut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "11364:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1207,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11321:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1181,
                  "id": 1208,
                  "nodeType": "Return",
                  "src": "11314:60:1"
                }
              ]
            },
            "documentation": {
              "id": 1171,
              "nodeType": "StructuredDocumentation",
              "src": "10444:462:1",
              "text": "@notice The fee is splited in two: first, for the Liquidity Providers, and\n second, for Meta Pool, granted for FEE_COLLECTOR_ROLE.\n @dev CONSIDER FORMULA: _discountedAmount + _collectedFee + _lpFeeCut == _amount\n @return _discountedAmount stAUR to be taken from the pool to cover the swap.\n @return _collectedFee stAUR to be granted for FEE_COLLECTOR_ROLE.\n @return _lpFeeCut stAUR for our friends, the Liquidity Providers."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculatePoolFees",
            "nameLocation": "10920:18:1",
            "parameters": {
              "id": 1174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "10956:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1210,
                  "src": "10948:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10948:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10938:31:1"
            },
            "returnParameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1176,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1210,
                  "src": "10992:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10992:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1178,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1210,
                  "src": "11001:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11001:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1180,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1210,
                  "src": "11010:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11010:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10991:27:1"
            },
            "scope": 1254,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1253,
            "nodeType": "FunctionDefinition",
            "src": "11454:369:1",
            "nodes": [],
            "body": {
              "id": 1252,
              "nodeType": "Block",
              "src": "11606:217:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1223,
                      "name": "auroraBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "11616:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1224,
                      "name": "_assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1217,
                      "src": "11633:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11616:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1226,
                  "nodeType": "ExpressionStatement",
                  "src": "11616:24:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1232,
                        "name": "_caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1213,
                        "src": "11683:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1235,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11700:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityPool_$1254",
                              "typeString": "contract LiquidityPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityPool_$1254",
                              "typeString": "contract LiquidityPool"
                            }
                          ],
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11692:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1233,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11692:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11692:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1237,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1217,
                        "src": "11707:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1228,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42141,
                              "src": "11657:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11657:7:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1227,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42001,
                          "src": "11650:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$42001_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11650:15:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42001",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11666:16:1",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42803,
                      "src": "11650:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42001_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42001_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11650:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "11650:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1241,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1215,
                        "src": "11731:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1242,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "11742:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1240,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41740,
                      "src": "11725:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11725:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1244,
                  "nodeType": "ExpressionStatement",
                  "src": "11725:25:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1246,
                        "name": "_caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1213,
                        "src": "11779:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1247,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1215,
                        "src": "11788:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1248,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1217,
                        "src": "11799:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1249,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "11808:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1245,
                      "name": "AddLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3514,
                      "src": "11766:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11766:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1251,
                  "nodeType": "EmitStatement",
                  "src": "11761:55:1"
                }
              ]
            },
            "baseFunctions": [
              42619
            ],
            "documentation": {
              "id": 1211,
              "nodeType": "StructuredDocumentation",
              "src": "11387:62:1",
              "text": "@dev The Deposit event is used to indicate more liquidity."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "11463:8:1",
            "overrides": {
              "id": 1221,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11597:8:1"
            },
            "parameters": {
              "id": 1220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1213,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "11489:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
                  "src": "11481:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11481:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1215,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "11514:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
                  "src": "11506:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11506:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1217,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "11541:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
                  "src": "11533:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11533:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "11566:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
                  "src": "11558:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11558:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11471:108:1"
            },
            "returnParameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11606:0:1"
            },
            "scope": 1254,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 456,
              "name": "ERC4626",
              "nameLocations": [
                "500:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42684,
              "src": "500:7:1"
            },
            "id": 457,
            "nodeType": "InheritanceSpecifier",
            "src": "500:7:1"
          },
          {
            "baseName": {
              "id": 458,
              "name": "AccessControl",
              "nameLocations": [
                "509:13:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41095,
              "src": "509:13:1"
            },
            "id": 459,
            "nodeType": "InheritanceSpecifier",
            "src": "509:13:1"
          },
          {
            "baseName": {
              "id": 460,
              "name": "ILiquidityPool",
              "nameLocations": [
                "524:14:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3609,
              "src": "524:14:1"
            },
            "id": 461,
            "nodeType": "InheritanceSpecifier",
            "src": "524:14:1"
          }
        ],
        "canonicalName": "LiquidityPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 455,
          "nodeType": "StructuredDocumentation",
          "src": "387:86:1",
          "text": "@notice Liquidity Pool that allows the fast convertion of stAUR to AURORA tokens."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1254,
          3609,
          41095,
          43577,
          43589,
          41168,
          42684,
          41336,
          41923,
          42709,
          42001,
          43378
        ],
        "name": "LiquidityPool",
        "nameLocation": "483:13:1",
        "scope": 1255,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 1
}