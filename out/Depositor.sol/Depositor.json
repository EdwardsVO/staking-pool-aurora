{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collectRewardsRole",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_streamId",
          "type": "uint256"
        }
      ],
      "name": "MoveRewardsToPending",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_new",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "NewManagerUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_assets",
          "type": "uint256"
        }
      ],
      "name": "StakeThroughDepositor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        }
      ],
      "name": "UnstakeAllThroughDepositor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_assets",
          "type": "uint256"
        }
      ],
      "name": "UnstakeThroughDepositor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_streamId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "WithdrawRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_assets",
          "type": "uint256"
        }
      ],
      "name": "WithdrawThroughDepositor",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COLLECT_REWARDS_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auroraStaking",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auroraToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingAurora",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_streamId",
          "type": "uint256"
        }
      ],
      "name": "getPendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_streamId",
          "type": "uint256"
        }
      ],
      "name": "getReleaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_streamId",
          "type": "uint256"
        }
      ],
      "name": "moveRewardsToPending",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stAurVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assets",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assets",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstakeAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingManager",
          "type": "address"
        }
      ],
      "name": "updateStakingManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assets",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_streamId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "withdrawRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b5060405162001e0838038062001e08833981016040819052620000349162000345565b6001600160a01b0382166200008f5760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b038416908117909155604080516306cf931760e31b8152905184929163367c98b89160048083019260209291908290030181865afa158015620000eb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200011191906200037d565b6001600160a01b03166080816001600160a01b031681525050806001600160a01b0316635578fdb26040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000169573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200018f91906200037d565b6001600160a01b031660a0816001600160a01b031681525050806001600160a01b03166346e90fa66040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020d91906200037d565b6001600160a01b031660c052620002457fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753362000287565b620002717f131c12305311744a3f7cfa41d985c1cd8592681deca082296d27adcfcc21a0b88362000287565b6200027e60003362000287565b505050620003a2565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000324576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620002e33390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b80516001600160a01b03811681146200034057600080fd5b919050565b600080604083850312156200035957600080fd5b620003648362000328565b9150620003746020840162000328565b90509250929050565b6000602082840312156200039057600080fd5b6200039b8262000328565b9392505050565b60805160a05160c0516119db6200042d6000396000818161030c015281816105400152818161061c01528181610756015281816108910152818161092401528181610b2801528181610c8901528181610db60152610f97015260008181610360015281816106950152610b070152600081816102a401528181610aa10152610b5601526119db6000f3fe6080604052600436106101445760003560e01c806352db191f116100b6578063a217fddf1161006f578063a217fddf1461040b578063a694fc3a14610420578063d547741f14610440578063ee13ad8e14610460578063f3301f6b14610480578063f9f87c18146104a057600080fd5b806352db191f1461032e5780635578fdb21461034e57806375b238fc1461038257806381739a6e146103b657806391d14854146103cb57806396a1b6b5146103eb57600080fd5b80632f2ff15d116101085780632f2ff15d1461023d57806335322f371461025d57806336568abe14610272578063367c98b81461029257806345015d1b146102c657806346e90fa6146102fa57600080fd5b806301ffc9a71461015057806322828cc214610185578063248a9ca3146101bd5780632e17de78146101fb5780632e1a7d4d1461021d57600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061017061016b366004611687565b6104c0565b60405190151581526020015b60405180910390f35b34801561019157600080fd5b506001546101a5906001600160a01b031681565b6040516001600160a01b03909116815260200161017c565b3480156101c957600080fd5b506101ed6101d83660046116b1565b60009081526020819052604090206001015490565b60405190815260200161017c565b34801561020757600080fd5b5061021b6102163660046116b1565b6104f7565b005b34801561022957600080fd5b5061021b6102383660046116b1565b6105dc565b34801561024957600080fd5b5061021b6102583660046116df565b610700565b34801561026957600080fd5b5061021b61072a565b34801561027e57600080fd5b5061021b61028d3660046116df565b6107f4565b34801561029e57600080fd5b506101a57f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d257600080fd5b506101ed7f131c12305311744a3f7cfa41d985c1cd8592681deca082296d27adcfcc21a0b881565b34801561030657600080fd5b506101a57f000000000000000000000000000000000000000000000000000000000000000081565b34801561033a57600080fd5b506101ed6103493660046116b1565b610872565b34801561035a57600080fd5b506101a57f000000000000000000000000000000000000000000000000000000000000000081565b34801561038e57600080fd5b506101ed7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b3480156103c257600080fd5b506101ed610905565b3480156103d757600080fd5b506101706103e63660046116df565b61099c565b3480156103f757600080fd5b5061021b61040636600461170f565b6109c5565b34801561041757600080fd5b506101ed600081565b34801561042c57600080fd5b5061021b61043b3660046116b1565b610a96565b34801561044c57600080fd5b5061021b61045b3660046116df565b610c24565b34801561046c57600080fd5b5061021b61047b3660046116b1565b610c49565b34801561048c57600080fd5b5061021b61049b3660046116df565b610d26565b3480156104ac57600080fd5b506101ed6104bb3660046116b1565b610f78565b60006001600160e01b03198216637965db0b60e01b14806104f157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6001546001600160a01b0316331461052a5760405162461bcd60e51b81526004016105219061172c565b60405180910390fd5b6040516305c2fbcf60e31b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e17de7890602401600060405180830381600087803b15801561058c57600080fd5b505af11580156105a0573d6000803e3d6000fd5b50506040518381523092507fc4ac969c43c1e7364ef6ca8f015ce3805c77f663b44c96d3742ac3528005c4da915060200160405180910390a250565b6001546001600160a01b031633146106065760405162461bcd60e51b81526004016105219061172c565b604051632e1a7d4d60e01b8152600060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561066857600080fd5b505af115801561067c573d6000803e3d6000fd5b50506001546001600160a01b0390811692506106bc91507f0000000000000000000000000000000000000000000000000000000000000000168284610fce565b6040518281526001600160a01b0382169030907fd45388f1a404ab6ee2093faca0477cf9f59e5f38dc01da05803fbf5bdb0fccc99060200160405180910390a35050565b60008281526020819052604090206001015461071b81611031565b610725838361103e565b505050565b6001546001600160a01b031633146107545760405162461bcd60e51b81526004016105219061172c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166335322f376040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107af57600080fd5b505af11580156107c3573d6000803e3d6000fd5b50506040513092507fa595a4220581687cb91b274080d5c7ca712e5086bd02eb4d216f0bd73275ecc89150600090a2565b6001600160a01b03811633146108645760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610521565b61086e82826110c2565b5050565b60405163c892772360e01b8152600481018290523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c8927723906044015b602060405180830381865afa1580156108e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f1919061175c565b604051637f37df3b60e01b8152600060048201819052306024830152907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637f37df3b90604401602060405180830381865afa158015610973573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610997919061175c565b905090565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756109ef81611031565b6001600160a01b038216610a3c5760405162461bcd60e51b8152602060048201526014602482015273494e56414c49445f5a45524f5f4144445245535360601b6044820152606401610521565b600180546001600160a01b0319166001600160a01b038416908117909155604080519182523360208301527fddc0a9f2354d60930ab764b633fb61eb5faaaede03a5d4505c9825519bdf0b2e910160405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b055760405162461bcd60e51b815260206004820152601460248201527313d3931657d193d497d4d510555497d59055531560621b6044820152606401610521565b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610b7c6001600160a01b0383167f00000000000000000000000000000000000000000000000000000000000000003086611127565b610b906001600160a01b0383168285611165565b60405163534a7e1d60e11b8152600481018490526001600160a01b0382169063a694fc3a90602401600060405180830381600087803b158015610bd257600080fd5b505af1158015610be6573d6000803e3d6000fd5b50506040518581523092507f5c767ca316415a0eee695a6f8fa8dd1d70ab023b6d9407acbf98d4476f1f08a3915060200160405180910390a2505050565b600082815260208190526040902060010154610c3f81611031565b61072583836110c2565b7f131c12305311744a3f7cfa41d985c1cd8592681deca082296d27adcfcc21a0b8610c7381611031565b604051637709d6c760e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ee13ad8e90602401600060405180830381600087803b158015610cd557600080fd5b505af1158015610ce9573d6000803e3d6000fd5b50506040518481523092507f71976f2a943a0c14857b1a13f43a0d2bbc587a3b1151fd48d2c3884b4200bfe0915060200160405180910390a25050565b7f131c12305311744a3f7cfa41d985c1cd8592681deca082296d27adcfcc21a0b8610d5081611031565b60008311610da05760405162461bcd60e51b815260206004820152601960248201527f57495448445241575f4f4e4c595f464f525f52455741524453000000000000006044820152606401610521565b60405163894e9a0d60e01b8152600481018490527f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b0383169063894e9a0d9060240161016060405180830381865afa158015610e0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2f9190611775565b5050604051637f37df3b60e01b8152600481018f905230602482015297995060009850506001600160a01b038a1696637f37df3b96506044019450610e749350505050565b602060405180830381865afa158015610e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb5919061175c565b90508015610f7057604051632e1a7d4d60e01b8152600481018790526001600160a01b03841690632e1a7d4d90602401600060405180830381600087803b158015610eff57600080fd5b505af1158015610f13573d6000803e3d6000fd5b50610f2c925050506001600160a01b0383168683611165565b604080518781526001600160a01b038716602082015230917ffb0872526787ac1be379aa37eaa9913b47d6d50c3f5fe5ec67ffe4282493670e910160405180910390a25b505050505050565b604051637f37df3b60e01b8152600481018290523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637f37df3b906044016108c4565b6040516001600160a01b03831660248201526044810182905261072590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611217565b61103b81336112e9565b50565b611048828261099c565b61086e576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561107e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6110cc828261099c565b1561086e576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6040516001600160a01b038085166024830152831660448201526064810182905261115f9085906323b872dd60e01b90608401610ffa565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156111b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111da919061175c565b6111e4919061182e565b6040516001600160a01b03851660248201526044810182905290915061115f90859063095ea7b360e01b90606401610ffa565b600061126c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113429092919063ffffffff16565b805190915015610725578080602001905181019061128a9190611841565b6107255760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610521565b6112f3828261099c565b61086e5761130081611359565b61130b83602061136b565b60405160200161131c929190611887565b60408051601f198184030181529082905262461bcd60e51b8252610521916004016118fc565b6060611351848460008561150e565b949350505050565b60606104f16001600160a01b03831660145b6060600061137a83600261192f565b61138590600261182e565b67ffffffffffffffff81111561139d5761139d611946565b6040519080825280601f01601f1916602001820160405280156113c7576020820181803683370190505b509050600360fc1b816000815181106113e2576113e261195c565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106114115761141161195c565b60200101906001600160f81b031916908160001a905350600061143584600261192f565b61144090600161182e565b90505b60018111156114b8576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106114745761147461195c565b1a60f81b82828151811061148a5761148a61195c565b60200101906001600160f81b031916908160001a90535060049490941c936114b181611972565b9050611443565b5083156115075760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610521565b9392505050565b60608247101561156f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610521565b600080866001600160a01b0316858760405161158b9190611989565b60006040518083038185875af1925050503d80600081146115c8576040519150601f19603f3d011682016040523d82523d6000602084013e6115cd565b606091505b50915091506115de878383876115e9565b979650505050505050565b60608315611658578251600003611651576001600160a01b0385163b6116515760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610521565b5081611351565b611351838381511561166d5781518083602001fd5b8060405162461bcd60e51b815260040161052191906118fc565b60006020828403121561169957600080fd5b81356001600160e01b03198116811461150757600080fd5b6000602082840312156116c357600080fd5b5035919050565b6001600160a01b038116811461103b57600080fd5b600080604083850312156116f257600080fd5b823591506020830135611704816116ca565b809150509250929050565b60006020828403121561172157600080fd5b8135611507816116ca565b60208082526016908201527527a7262cafa327a92fa9aa20aaa92fa6a0a720a3a2a960511b604082015260600190565b60006020828403121561176e57600080fd5b5051919050565b60008060008060008060008060008060006101608c8e03121561179757600080fd5b8b516117a2816116ca565b60208d0151909b506117b3816116ca565b809a505060408c0151985060608c0151975060808c0151965060a08c0151955060c08c0151945060e08c015193506101008c015192506101208c015191506101408c01516003811061180457600080fd5b809150509295989b509295989b9093969950565b634e487b7160e01b600052601160045260246000fd5b808201808211156104f1576104f1611818565b60006020828403121561185357600080fd5b8151801515811461150757600080fd5b60005b8381101561187e578181015183820152602001611866565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516118bf816017850160208801611863565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516118f0816028840160208801611863565b01602801949350505050565b602081526000825180602084015261191b816040850160208701611863565b601f01601f19169190910160400192915050565b80820281158282048414176104f1576104f1611818565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161198157611981611818565b506000190190565b6000825161199b818460208701611863565b919091019291505056fea26469706673582212204fd5b16a9ab6c4787a9f416e79801102305dd051913d5597d5928a08ff8abbc664736f6c63430008120033",
    "sourceMap": "462:4949:0:-:0;;;1102:575;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1208:29:0;;1200:62;;;;-1:-1:-1;;;1200:62:0;;696:2:70;1200:62:0;;;678:21:70;735:2;715:18;;;708:30;774:22;754:18;;;747:50;814:18;;1200:62:0;;;;;;;;1272:14;:32;;-1:-1:-1;;;;;;1272:32:0;-1:-1:-1;;;;;1272:32:0;;;;;;;;1396:20;;;-1:-1:-1;;;1396:20:0;;;;1272:32;;;1396:18;;:20;;;;;;;;;;;;;;1272:32;1396:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1383:33:0;;;-1:-1:-1;;;;;1383:33:0;;;;;1440:7;-1:-1:-1;;;;;1440:19:0;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1426:35:0;;;-1:-1:-1;;;;;1426:35:0;;;;;1487:7;-1:-1:-1;;;;;1487:21:0;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1471:39:0;;;1521:34;586:23;1544:10;1521;:34::i;:::-;1565:53;662:33;1598:19;1565:10;:53::i;:::-;1628:42;2072:4:52;1659:10:0;1628;:42::i;:::-;1190:487;1102:575;;462:4949;;7461:233:52;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:52;;;;;;;;;;;;7539:149;;7582:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7582:29:52;;;;;;;;;:36;;-1:-1:-1;;7582:36:52;7614:4;7582:36;;;7664:12;719:10:62;;640:96;7664:12:52;-1:-1:-1;;;;;7637:40:52;7655:7;-1:-1:-1;;;;;7637:40:52;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;14:177:70:-;93:13;;-1:-1:-1;;;;;135:31:70;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;843:208::-;913:6;966:2;954:9;945:7;941:23;937:32;934:52;;;982:1;979;972:12;934:52;1005:40;1035:9;1005:40;:::i;:::-;995:50;843:208;-1:-1:-1;;;843:208:70:o;:::-;462:4949:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101445760003560e01c806352db191f116100b6578063a217fddf1161006f578063a217fddf1461040b578063a694fc3a14610420578063d547741f14610440578063ee13ad8e14610460578063f3301f6b14610480578063f9f87c18146104a057600080fd5b806352db191f1461032e5780635578fdb21461034e57806375b238fc1461038257806381739a6e146103b657806391d14854146103cb57806396a1b6b5146103eb57600080fd5b80632f2ff15d116101085780632f2ff15d1461023d57806335322f371461025d57806336568abe14610272578063367c98b81461029257806345015d1b146102c657806346e90fa6146102fa57600080fd5b806301ffc9a71461015057806322828cc214610185578063248a9ca3146101bd5780632e17de78146101fb5780632e1a7d4d1461021d57600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061017061016b366004611687565b6104c0565b60405190151581526020015b60405180910390f35b34801561019157600080fd5b506001546101a5906001600160a01b031681565b6040516001600160a01b03909116815260200161017c565b3480156101c957600080fd5b506101ed6101d83660046116b1565b60009081526020819052604090206001015490565b60405190815260200161017c565b34801561020757600080fd5b5061021b6102163660046116b1565b6104f7565b005b34801561022957600080fd5b5061021b6102383660046116b1565b6105dc565b34801561024957600080fd5b5061021b6102583660046116df565b610700565b34801561026957600080fd5b5061021b61072a565b34801561027e57600080fd5b5061021b61028d3660046116df565b6107f4565b34801561029e57600080fd5b506101a57f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d257600080fd5b506101ed7f131c12305311744a3f7cfa41d985c1cd8592681deca082296d27adcfcc21a0b881565b34801561030657600080fd5b506101a57f000000000000000000000000000000000000000000000000000000000000000081565b34801561033a57600080fd5b506101ed6103493660046116b1565b610872565b34801561035a57600080fd5b506101a57f000000000000000000000000000000000000000000000000000000000000000081565b34801561038e57600080fd5b506101ed7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b3480156103c257600080fd5b506101ed610905565b3480156103d757600080fd5b506101706103e63660046116df565b61099c565b3480156103f757600080fd5b5061021b61040636600461170f565b6109c5565b34801561041757600080fd5b506101ed600081565b34801561042c57600080fd5b5061021b61043b3660046116b1565b610a96565b34801561044c57600080fd5b5061021b61045b3660046116df565b610c24565b34801561046c57600080fd5b5061021b61047b3660046116b1565b610c49565b34801561048c57600080fd5b5061021b61049b3660046116df565b610d26565b3480156104ac57600080fd5b506101ed6104bb3660046116b1565b610f78565b60006001600160e01b03198216637965db0b60e01b14806104f157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6001546001600160a01b0316331461052a5760405162461bcd60e51b81526004016105219061172c565b60405180910390fd5b6040516305c2fbcf60e31b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e17de7890602401600060405180830381600087803b15801561058c57600080fd5b505af11580156105a0573d6000803e3d6000fd5b50506040518381523092507fc4ac969c43c1e7364ef6ca8f015ce3805c77f663b44c96d3742ac3528005c4da915060200160405180910390a250565b6001546001600160a01b031633146106065760405162461bcd60e51b81526004016105219061172c565b604051632e1a7d4d60e01b8152600060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561066857600080fd5b505af115801561067c573d6000803e3d6000fd5b50506001546001600160a01b0390811692506106bc91507f0000000000000000000000000000000000000000000000000000000000000000168284610fce565b6040518281526001600160a01b0382169030907fd45388f1a404ab6ee2093faca0477cf9f59e5f38dc01da05803fbf5bdb0fccc99060200160405180910390a35050565b60008281526020819052604090206001015461071b81611031565b610725838361103e565b505050565b6001546001600160a01b031633146107545760405162461bcd60e51b81526004016105219061172c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166335322f376040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107af57600080fd5b505af11580156107c3573d6000803e3d6000fd5b50506040513092507fa595a4220581687cb91b274080d5c7ca712e5086bd02eb4d216f0bd73275ecc89150600090a2565b6001600160a01b03811633146108645760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610521565b61086e82826110c2565b5050565b60405163c892772360e01b8152600481018290523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c8927723906044015b602060405180830381865afa1580156108e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f1919061175c565b604051637f37df3b60e01b8152600060048201819052306024830152907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637f37df3b90604401602060405180830381865afa158015610973573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610997919061175c565b905090565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756109ef81611031565b6001600160a01b038216610a3c5760405162461bcd60e51b8152602060048201526014602482015273494e56414c49445f5a45524f5f4144445245535360601b6044820152606401610521565b600180546001600160a01b0319166001600160a01b038416908117909155604080519182523360208301527fddc0a9f2354d60930ab764b633fb61eb5faaaede03a5d4505c9825519bdf0b2e910160405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b055760405162461bcd60e51b815260206004820152601460248201527313d3931657d193d497d4d510555497d59055531560621b6044820152606401610521565b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610b7c6001600160a01b0383167f00000000000000000000000000000000000000000000000000000000000000003086611127565b610b906001600160a01b0383168285611165565b60405163534a7e1d60e11b8152600481018490526001600160a01b0382169063a694fc3a90602401600060405180830381600087803b158015610bd257600080fd5b505af1158015610be6573d6000803e3d6000fd5b50506040518581523092507f5c767ca316415a0eee695a6f8fa8dd1d70ab023b6d9407acbf98d4476f1f08a3915060200160405180910390a2505050565b600082815260208190526040902060010154610c3f81611031565b61072583836110c2565b7f131c12305311744a3f7cfa41d985c1cd8592681deca082296d27adcfcc21a0b8610c7381611031565b604051637709d6c760e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ee13ad8e90602401600060405180830381600087803b158015610cd557600080fd5b505af1158015610ce9573d6000803e3d6000fd5b50506040518481523092507f71976f2a943a0c14857b1a13f43a0d2bbc587a3b1151fd48d2c3884b4200bfe0915060200160405180910390a25050565b7f131c12305311744a3f7cfa41d985c1cd8592681deca082296d27adcfcc21a0b8610d5081611031565b60008311610da05760405162461bcd60e51b815260206004820152601960248201527f57495448445241575f4f4e4c595f464f525f52455741524453000000000000006044820152606401610521565b60405163894e9a0d60e01b8152600481018490527f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b0383169063894e9a0d9060240161016060405180830381865afa158015610e0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2f9190611775565b5050604051637f37df3b60e01b8152600481018f905230602482015297995060009850506001600160a01b038a1696637f37df3b96506044019450610e749350505050565b602060405180830381865afa158015610e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb5919061175c565b90508015610f7057604051632e1a7d4d60e01b8152600481018790526001600160a01b03841690632e1a7d4d90602401600060405180830381600087803b158015610eff57600080fd5b505af1158015610f13573d6000803e3d6000fd5b50610f2c925050506001600160a01b0383168683611165565b604080518781526001600160a01b038716602082015230917ffb0872526787ac1be379aa37eaa9913b47d6d50c3f5fe5ec67ffe4282493670e910160405180910390a25b505050505050565b604051637f37df3b60e01b8152600481018290523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637f37df3b906044016108c4565b6040516001600160a01b03831660248201526044810182905261072590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611217565b61103b81336112e9565b50565b611048828261099c565b61086e576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561107e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6110cc828261099c565b1561086e576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6040516001600160a01b038085166024830152831660448201526064810182905261115f9085906323b872dd60e01b90608401610ffa565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156111b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111da919061175c565b6111e4919061182e565b6040516001600160a01b03851660248201526044810182905290915061115f90859063095ea7b360e01b90606401610ffa565b600061126c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113429092919063ffffffff16565b805190915015610725578080602001905181019061128a9190611841565b6107255760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610521565b6112f3828261099c565b61086e5761130081611359565b61130b83602061136b565b60405160200161131c929190611887565b60408051601f198184030181529082905262461bcd60e51b8252610521916004016118fc565b6060611351848460008561150e565b949350505050565b60606104f16001600160a01b03831660145b6060600061137a83600261192f565b61138590600261182e565b67ffffffffffffffff81111561139d5761139d611946565b6040519080825280601f01601f1916602001820160405280156113c7576020820181803683370190505b509050600360fc1b816000815181106113e2576113e261195c565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106114115761141161195c565b60200101906001600160f81b031916908160001a905350600061143584600261192f565b61144090600161182e565b90505b60018111156114b8576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106114745761147461195c565b1a60f81b82828151811061148a5761148a61195c565b60200101906001600160f81b031916908160001a90535060049490941c936114b181611972565b9050611443565b5083156115075760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610521565b9392505050565b60608247101561156f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610521565b600080866001600160a01b0316858760405161158b9190611989565b60006040518083038185875af1925050503d80600081146115c8576040519150601f19603f3d011682016040523d82523d6000602084013e6115cd565b606091505b50915091506115de878383876115e9565b979650505050505050565b60608315611658578251600003611651576001600160a01b0385163b6116515760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610521565b5081611351565b611351838381511561166d5781518083602001fd5b8060405162461bcd60e51b815260040161052191906118fc565b60006020828403121561169957600080fd5b81356001600160e01b03198116811461150757600080fd5b6000602082840312156116c357600080fd5b5035919050565b6001600160a01b038116811461103b57600080fd5b600080604083850312156116f257600080fd5b823591506020830135611704816116ca565b809150509250929050565b60006020828403121561172157600080fd5b8135611507816116ca565b60208082526016908201527527a7262cafa327a92fa9aa20aaa92fa6a0a720a3a2a960511b604082015260600190565b60006020828403121561176e57600080fd5b5051919050565b60008060008060008060008060008060006101608c8e03121561179757600080fd5b8b516117a2816116ca565b60208d0151909b506117b3816116ca565b809a505060408c0151985060608c0151975060808c0151965060a08c0151955060c08c0151945060e08c015193506101008c015192506101208c015191506101408c01516003811061180457600080fd5b809150509295989b509295989b9093969950565b634e487b7160e01b600052601160045260246000fd5b808201808211156104f1576104f1611818565b60006020828403121561185357600080fd5b8151801515811461150757600080fd5b60005b8381101561187e578181015183820152602001611866565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516118bf816017850160208801611863565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516118f0816028840160208801611863565b01602801949350505050565b602081526000825180602084015261191b816040850160208701611863565b601f01601f19169190910160400192915050565b80820281158282048414176104f1576104f1611818565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161198157611981611818565b506000190190565b6000825161199b818460208701611863565b919091019291505056fea26469706673582212204fd5b16a9ab6c4787a9f416e79801102305dd051913d5597d5928a08ff8abbc664736f6c63430008120033",
    "sourceMap": "462:4949:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:52;;;;;;;;;;-1:-1:-1;2606:202:52;;;;;:::i;:::-;;:::i;:::-;;;470:14:70;;463:22;445:41;;433:2;418:18;2606:202:52;;;;;;;;702:29:0;;;;;;;;;;-1:-1:-1;702:29:0;;;;-1:-1:-1;;;;;702:29:0;;;;;;-1:-1:-1;;;;;661:32:70;;;643:51;;631:2;616:18;702:29:0;497:203:70;4378:129:52;;;;;;;;;;-1:-1:-1;4378:129:52;;;;;:::i;:::-;4452:7;4478:12;;;;;;;;;;:22;;;;4378:129;;;;1036:25:70;;;1024:2;1009:18;4378:129:52;890:177:70;2624:181:0;;;;;;;;;;-1:-1:-1;2624:181:0;;;;;:::i;:::-;;:::i;:::-;;3261:313;;;;;;;;;;-1:-1:-1;3261:313:0;;;;;:::i;:::-;;:::i;4803:145:52:-;;;;;;;;;;-1:-1:-1;4803:145:52;;;;;:::i;:::-;;:::i;2882:159:0:-;;;;;;;;;;;;;:::i;5912:214:52:-;;;;;;;;;;-1:-1:-1;5912:214:52;;;;;:::i;:::-;;:::i;737:35:0:-;;;;;;;;;;;;;;;615:80;;;;;;;;;;;;662:33;615:80;;820:38;;;;;;;;;;;;;;;3653:169;;;;;;;;;;-1:-1:-1;3653:169:0;;;;;:::i;:::-;;:::i;778:36::-;;;;;;;;;;;;;;;549:60;;;;;;;;;;;;586:23;549:60;;3989:142;;;;;;;;;;;;;:::i;2895:145:52:-;;;;;;;;;;-1:-1:-1;2895:145:52;;;;;:::i;:::-;;:::i;1787:281:0:-;;;;;;;;;;-1:-1:-1;1787:281:0;;;;;:::i;:::-;;:::i;2027:49:52:-;;;;;;;;;;-1:-1:-1;2027:49:52;2072:4;2027:49;;2143:404:0;;;;;;;;;;-1:-1:-1;2143:404:0;;;;;:::i;:::-;;:::i;5228:147:52:-;;;;;;;;;;-1:-1:-1;5228:147:52;;;;;:::i;:::-;;:::i;4460:243:0:-;;;;;;;;;;-1:-1:-1;4460:243:0;;;;;:::i;:::-;;:::i;4786:623::-;;;;;;;;;;-1:-1:-1;4786:623:0;;;;;:::i;:::-;;:::i;4210:168::-;;;;;;;;;;-1:-1:-1;4210:168:0;;;;;:::i;:::-;;:::i;2606:202:52:-;2691:4;-1:-1:-1;;;;;;2714:47:52;;-1:-1:-1;;;2714:47:52;;:87;;-1:-1:-1;;;;;;;;;;937:40:64;;;2765:36:52;2707:94;2606:202;-1:-1:-1;;2606:202:52:o;2624:181:0:-;920:14;;-1:-1:-1;;;;;920:14:0;906:10;:28;898:63;;;;-1:-1:-1;;;898:63:0;;;;;;;:::i;:::-;;;;;;;;;2689:46:::1;::::0;-1:-1:-1;;;2689:46:0;;::::1;::::0;::::1;1036:25:70::0;;;2704:13:0::1;-1:-1:-1::0;;;;;2689:37:0::1;::::0;::::1;::::0;1009:18:70;;2689:46:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2751:47:0::1;::::0;1036:25:70;;;2783:4:0::1;::::0;-1:-1:-1;2751:47:0::1;::::0;-1:-1:-1;1024:2:70;1009:18;2751:47:0::1;;;;;;;2624:181:::0;:::o;3261:313::-;920:14;;-1:-1:-1;;;;;920:14:0;906:10;:28;898:63;;;;-1:-1:-1;;;898:63:0;;;;;;;:::i;:::-;3327:41:::1;::::0;-1:-1:-1;;;3327:41:0;;3366:1:::1;3327:41;::::0;::::1;1036:25:70::0;3342:13:0::1;-1:-1:-1::0;;;;;3327:38:0::1;::::0;::::1;::::0;1009:18:70;;3327:41:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3404:14:0::1;::::0;-1:-1:-1;;;;;3404:14:0;;::::1;::::0;-1:-1:-1;3428:58:0::1;::::0;-1:-1:-1;3435:11:0::1;3428:32;3404:14:::0;3478:7;3428:32:::1;:58::i;:::-;3502:65;::::0;1036:25:70;;;-1:-1:-1;;;;;3502:65:0;::::1;::::0;3535:4:::1;::::0;3502:65:::1;::::0;1024:2:70;1009:18;3502:65:0::1;;;;;;;3317:257;3261:313:::0;:::o;4803:145:52:-;4452:7;4478:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;2882:159:0:-;920:14;;-1:-1:-1;;;;;920:14:0;906:10;:28;898:63;;;;-1:-1:-1;;;898:63:0;;;;;;;:::i;:::-;2950:13:::1;-1:-1:-1::0;;;;;2935:40:0::1;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2993:41:0::1;::::0;3028:4:::1;::::0;-1:-1:-1;2993:41:0::1;::::0;-1:-1:-1;2993:41:0;;::::1;2882:159::o:0;5912:214:52:-;-1:-1:-1;;;;;6007:23:52;;719:10:62;6007:23:52;5999:83;;;;-1:-1:-1;;;5999:83:52;;3210:2:70;5999:83:52;;;3192:21:70;3249:2;3229:18;;;3222:30;3288:34;3268:18;;;3261:62;-1:-1:-1;;;3339:18:70;;;3332:45;3394:19;;5999:83:52;3008:411:70;5999:83:52;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;3653:169:0:-;3745:70;;-1:-1:-1;;;3745:70:0;;;;;3598:25:70;;;3809:4:0;3639:18:70;;;3632:60;3719:7:0;;3760:13;-1:-1:-1;;;;;3745:44:0;;;;3571:18:70;;3745:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3989:142::-;4066:58;;-1:-1:-1;;;4066:58:0;;4040:7;4066:58;;;3598:25:70;;;4118:4:0;3639:18:70;;;3632:60;4040:7:0;4081:13;-1:-1:-1;;;;;4066:40:0;;;;3571:18:70;;4066:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4059:65;;3989:142;:::o;2895:145:52:-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:52;;;;;;;;;;;;;;;2895:145::o;1787:281:0:-;586:23;2505:16:52;2516:4;2505:10;:16::i;:::-;-1:-1:-1;;;;;1904:29:0;::::1;1896:62;;;::::0;-1:-1:-1;;;1896:62:0;;4381:2:70;1896:62:0::1;::::0;::::1;4363:21:70::0;4420:2;4400:18;;;4393:30;-1:-1:-1;;;4439:18:70;;;4432:50;4499:18;;1896:62:0::1;4179:344:70::0;1896:62:0::1;1968:14;:32:::0;;-1:-1:-1;;;;;;1968:32:0::1;-1:-1:-1::0;;;;;1968:32:0;::::1;::::0;;::::1;::::0;;;2016:45:::1;::::0;;4740:34:70;;;2050:10:0::1;4805:2:70::0;4790:18;;4783:43;2016:45:0::1;::::0;4675:18:70;2016:45:0::1;;;;;;;1787:281:::0;;:::o;2143:404::-;1029:10;-1:-1:-1;;;;;1043:10:0;1029:24;;1021:57;;;;-1:-1:-1;;;1021:57:0;;5039:2:70;1021:57:0;;;5021:21:70;5078:2;5058:18;;;5051:30;-1:-1:-1;;;5097:18:70;;;5090:50;5157:18;;1021:57:0;4837:344:70;1021:57:0;2232:11:::1;2279:13;2302:59;-1:-1:-1::0;;;;;2302:23:0;::::1;2326:10;2346:4;2353:7:::0;2302:23:::1;:59::i;:::-;2371:53;-1:-1:-1::0;;;;;2371:28:0;::::1;2400:14:::0;2416:7;2371:28:::1;:53::i;:::-;2434:45;::::0;-1:-1:-1;;;2434:45:0;;::::1;::::0;::::1;1036:25:70::0;;;-1:-1:-1;;;;;2434:36:0;::::1;::::0;::::1;::::0;1009:18:70;;2434:45:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2495:45:0::1;::::0;1036:25:70;;;2525:4:0::1;::::0;-1:-1:-1;2495:45:0::1;::::0;-1:-1:-1;1024:2:70;1009:18;2495:45:0::1;;;;;;;2199:348;;2143:404:::0;:::o;5228:147:52:-;4452:7;4478:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;4460:243:0:-:0;662:33;2505:16:52;2516:4;2505:10;:16::i;:::-;4573:61:0::1;::::0;-1:-1:-1;;;4573:61:0;;::::1;::::0;::::1;1036:25:70::0;;;4588:13:0::1;-1:-1:-1::0;;;;;4573:50:0::1;::::0;::::1;::::0;1009:18:70;;4573:61:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4650:46:0::1;::::0;1036:25:70;;;4679:4:0::1;::::0;-1:-1:-1;4650:46:0::1;::::0;-1:-1:-1;1024:2:70;1009:18;4650:46:0::1;;;;;;;4460:243:::0;;:::o;4786:623::-;662:33;2505:16:52;2516:4;2505:10;:16::i;:::-;4940:1:0::1;4928:9;:13;4920:51;;;::::0;-1:-1:-1;;;4920:51:0;;5388:2:70;4920:51:0::1;::::0;::::1;5370:21:70::0;5427:2;5407:18;;;5400:30;5466:27;5446:18;;;5439:55;5511:18;;4920:51:0::1;5186:349:70::0;4920:51:0::1;5079:28;::::0;-1:-1:-1;;;5079:28:0;;::::1;::::0;::::1;1036:25:70::0;;;5021:13:0::1;::::0;4981:22:::1;::::0;-1:-1:-1;;;;;5079:17:0;::::1;::::0;::::1;::::0;1009:18:70;;5079:28:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;5135:44:0::1;::::0;-1:-1:-1;;;5135:44:0;;::::1;::::0;::::1;3598:25:70::0;;;5173:4:0::1;3639:18:70::0;;;3632:60;5045:62:0;;-1:-1:-1;5117:15:0::1;::::0;-1:-1:-1;;;;;;;5135:18:0;::::1;::::0;::::1;::::0;-1:-1:-1;3571:18:70;;;-1:-1:-1;5135:44:0::1;::::0;-1:-1:-1;;;;3424:274:70;5135:44:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5117:62:::0;-1:-1:-1;5193:11:0;;5189:214:::1;;5220:27;::::0;-1:-1:-1;;;5220:27:0;;::::1;::::0;::::1;1036:25:70::0;;;-1:-1:-1;;;;;5220:16:0;::::1;::::0;::::1;::::0;1009:18:70;;5220:27:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;5261:60:0::1;::::0;-1:-1:-1;;;;;;;;5261:41:0;::::1;5303:8:::0;5313:7;5261:41:::1;:60::i;:::-;5341:51;::::0;;3598:25:70;;;-1:-1:-1;;;;;3659:32:70;;3654:2;3639:18;;3632:60;5365:4:0::1;::::0;5341:51:::1;::::0;3571:18:70;5341:51:0::1;;;;;;;5189:214;4910:499;;;4786:623:::0;;;:::o;4210:168::-;4305:66;;-1:-1:-1;;;4305:66:0;;;;;3598:25:70;;;4365:4:0;3639:18:70;;;3632:60;4279:7:0;;4320:13;-1:-1:-1;;;;;4305:40:0;;;;3571:18:70;;4305:66:0;3424:274:70;763:205:60;902:58;;-1:-1:-1;;;;;6780:32:70;;902:58:60;;;6762:51:70;6829:18;;;6822:34;;;875:86:60;;895:5;;-1:-1:-1;;;925:23:60;6735:18:70;;902:58:60;;;;-1:-1:-1;;902:58:60;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:60;-1:-1:-1;;;;;;902:58:60;;;;;;;;;;875:19;:86::i;3334:103:52:-;3400:30;3411:4;719:10:62;3400::52;:30::i;:::-;3334:103;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7582:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7582:29:52;;;;;;;;;:36;;-1:-1:-1;;7582:36:52;7614:4;7582:36;;;7664:12;719:10:62;;640:96;7664:12:52;-1:-1:-1;;;;;7637:40:52;7655:7;-1:-1:-1;;;;;7637:40:52;7649:4;7637:40;;;;;;;;;;7461:233;;:::o;7865:234::-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:12;;;;;;;;;;;-1:-1:-1;;;;;7986:29:52;;;;;;;;;;:37;;-1:-1:-1;;7986:37:52;;;8042:40;719:10:62;;7986:12:52;;8042:40;;8018:5;8042:40;7865:234;;:::o;974:241:60:-;1139:68;;-1:-1:-1;;;;;7125:15:70;;;1139:68:60;;;7107:34:70;7177:15;;7157:18;;;7150:43;7209:18;;;7202:34;;;1112:96:60;;1132:5;;-1:-1:-1;;;1162:27:60;7042:18:70;;1139:68:60;6867:375:70;1112:96:60;974:241;;;;:::o;2084:310::-;2233:39;;-1:-1:-1;;;2233:39:60;;2257:4;2233:39;;;4740:34:70;-1:-1:-1;;;;;4810:15:70;;;4790:18;;;4783:43;2210:20:60;;2275:5;;2233:15;;;;;4675:18:70;;2233:39:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2317:69;;-1:-1:-1;;;;;6780:32:70;;2317:69:60;;;6762:51:70;6829:18;;;6822:34;;;2210:70:60;;-1:-1:-1;2290:97:60;;2310:5;;-1:-1:-1;;;2340:22:60;6735:18:70;;2317:69:60;6588:274:70;3747:706:60;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:60;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:60;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:60;;7993:2:70;4351:85:60;;;7975:21:70;8032:2;8012:18;;;8005:30;8071:34;8051:18;;;8044:62;-1:-1:-1;;;8122:18:70;;;8115:40;8172:19;;4351:85:60;7791:406:70;3718:479:52;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:252:52;;;;;;;;;;-1:-1:-1;;;3844:336:52;;;;;;;:::i;3873:223:61:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:61:o;2102:149:63:-;2160:13;2192:52;-1:-1:-1;;;;;2204:22:63;;311:2;1513:437;1588:13;1613:19;1645:10;1649:6;1645:1;:10;:::i;:::-;:14;;1658:1;1645:14;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1635:25:63;;1613:47;;-1:-1:-1;;;1670:6:63;1677:1;1670:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1670:15:63;;;;;;;;;-1:-1:-1;;;1695:6:63;1702:1;1695:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1695:15:63;;;;;;;;-1:-1:-1;1725:9:63;1737:10;1741:6;1737:1;:10;:::i;:::-;:14;;1750:1;1737:14;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;-1:-1:-1;;;1800:5:63;1808:3;1800:11;1791:21;;;;;;;:::i;:::-;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1779:33:63;;;;;;;;-1:-1:-1;1836:1:63;1826:11;;;;;1760:3;;;:::i;:::-;;;1720:128;;;-1:-1:-1;1865:10:63;;1857:55;;;;-1:-1:-1;;;1857:55:63;;10455:2:70;1857:55:63;;;10437:21:70;;;10474:18;;;10467:30;10533:34;10513:18;;;10506:62;10585:18;;1857:55:63;10253:356:70;1857:55:63;1936:6;1513:437;-1:-1:-1;;;1513:437:63:o;4960:446:61:-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:61;;10816:2:70;5149:81:61;;;10798:21:70;10855:2;10835:18;;;10828:30;10894:34;10874:18;;;10867:62;-1:-1:-1;;;10945:18:70;;;10938:36;10991:19;;5149:81:61;10614:402:70;5149:81:61;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:61;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:61:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:61;;;7908:60;;;;-1:-1:-1;;;7908:60:61;;11515:2:70;7908:60:61;;;11497:21:70;11554:2;11534:18;;;11527:30;11593:31;11573:18;;;11566:59;11642:18;;7908:60:61;11313:353:70;7908:60:61;-1:-1:-1;8003:10:61;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:61;;;;;;;;:::i;14:286:70:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:70;;209:43;;199:71;;266:1;263;256:12;705:180;764:6;817:2;805:9;796:7;792:23;788:32;785:52;;;833:1;830;823:12;785:52;-1:-1:-1;856:23:70;;705:180;-1:-1:-1;705:180:70:o;1257:131::-;-1:-1:-1;;;;;1332:31:70;;1322:42;;1312:70;;1378:1;1375;1368:12;1393:315;1461:6;1469;1522:2;1510:9;1501:7;1497:23;1493:32;1490:52;;;1538:1;1535;1528:12;1490:52;1574:9;1561:23;1551:33;;1634:2;1623:9;1619:18;1606:32;1647:31;1672:5;1647:31;:::i;:::-;1697:5;1687:15;;;1393:315;;;;;:::o;1895:247::-;1954:6;2007:2;1995:9;1986:7;1982:23;1978:32;1975:52;;;2023:1;2020;2013:12;1975:52;2062:9;2049:23;2081:31;2106:5;2081:31;:::i;2467:346::-;2669:2;2651:21;;;2708:2;2688:18;;;2681:30;-1:-1:-1;;;2742:2:70;2727:18;;2720:52;2804:2;2789:18;;2467:346::o;3703:184::-;3773:6;3826:2;3814:9;3805:7;3801:23;3797:32;3794:52;;;3842:1;3839;3832:12;3794:52;-1:-1:-1;3865:16:70;;3703:184;-1:-1:-1;3703:184:70:o;5540:1043::-;5717:6;5725;5733;5741;5749;5757;5765;5773;5781;5789;5797:7;5851:3;5839:9;5830:7;5826:23;5822:33;5819:53;;;5868:1;5865;5858:12;5819:53;5900:9;5894:16;5919:31;5944:5;5919:31;:::i;:::-;6019:2;6004:18;;5998:25;5969:5;;-1:-1:-1;6032:33:70;5998:25;6032:33;:::i;:::-;6084:7;6074:17;;;6131:2;6120:9;6116:18;6110:25;6100:35;;6175:2;6164:9;6160:18;6154:25;6144:35;;6219:3;6208:9;6204:19;6198:26;6188:36;;6264:3;6253:9;6249:19;6243:26;6233:36;;6309:3;6298:9;6294:19;6288:26;6278:36;;6354:3;6343:9;6339:19;6333:26;6323:36;;6399:3;6388:9;6384:19;6378:26;6368:36;;6444:3;6433:9;6429:19;6423:26;6413:36;;6494:3;6483:9;6479:19;6473:26;6530:1;6521:7;6518:14;6508:42;;6546:1;6543;6536:12;6508:42;6570:7;6559:18;;;5540:1043;;;;;;;;;;;;;;:::o;7247:127::-;7308:10;7303:3;7299:20;7296:1;7289:31;7339:4;7336:1;7329:15;7363:4;7360:1;7353:15;7379:125;7444:9;;;7465:10;;;7462:36;;;7478:18;;:::i;7509:277::-;7576:6;7629:2;7617:9;7608:7;7604:23;7600:32;7597:52;;;7645:1;7642;7635:12;7597:52;7677:9;7671:16;7730:5;7723:13;7716:21;7709:5;7706:32;7696:60;;7752:1;7749;7742:12;8202:250;8287:1;8297:113;8311:6;8308:1;8305:13;8297:113;;;8387:11;;;8381:18;8368:11;;;8361:39;8333:2;8326:10;8297:113;;;-1:-1:-1;;8444:1:70;8426:16;;8419:27;8202:250::o;8457:812::-;8868:25;8863:3;8856:38;8838:3;8923:6;8917:13;8939:75;9007:6;9002:2;8997:3;8993:12;8986:4;8978:6;8974:17;8939:75;:::i;:::-;-1:-1:-1;;;9073:2:70;9033:16;;;9065:11;;;9058:40;9123:13;;9145:76;9123:13;9207:2;9199:11;;9192:4;9180:17;;9145:76;:::i;:::-;9241:17;9260:2;9237:26;;8457:812;-1:-1:-1;;;;8457:812:70:o;9274:396::-;9423:2;9412:9;9405:21;9386:4;9455:6;9449:13;9498:6;9493:2;9482:9;9478:18;9471:34;9514:79;9586:6;9581:2;9570:9;9566:18;9561:2;9553:6;9549:15;9514:79;:::i;:::-;9654:2;9633:15;-1:-1:-1;;9629:29:70;9614:45;;;;9661:2;9610:54;;9274:396;-1:-1:-1;;9274:396:70:o;9675:168::-;9748:9;;;9779;;9796:15;;;9790:22;;9776:37;9766:71;;9817:18;;:::i;9848:127::-;9909:10;9904:3;9900:20;9897:1;9890:31;9940:4;9937:1;9930:15;9964:4;9961:1;9954:15;9980:127;10041:10;10036:3;10032:20;10029:1;10022:31;10072:4;10069:1;10062:15;10096:4;10093:1;10086:15;10112:136;10151:3;10179:5;10169:39;;10188:18;;:::i;:::-;-1:-1:-1;;;10224:18:70;;10112:136::o;11021:287::-;11150:3;11188:6;11182:13;11204:66;11263:6;11258:3;11251:4;11243:6;11239:17;11204:66;:::i;:::-;11286:16;;;;;11021:287;-1:-1:-1;;11021:287:70:o",
    "linkReferences": {},
    "immutableReferences": {
      "30": [
        {
          "start": 676,
          "length": 32
        },
        {
          "start": 2721,
          "length": 32
        },
        {
          "start": 2902,
          "length": 32
        }
      ],
      "32": [
        {
          "start": 864,
          "length": 32
        },
        {
          "start": 1685,
          "length": 32
        },
        {
          "start": 2823,
          "length": 32
        }
      ],
      "34": [
        {
          "start": 780,
          "length": 32
        },
        {
          "start": 1344,
          "length": 32
        },
        {
          "start": 1564,
          "length": 32
        },
        {
          "start": 1878,
          "length": 32
        },
        {
          "start": 2193,
          "length": 32
        },
        {
          "start": 2340,
          "length": 32
        },
        {
          "start": 2856,
          "length": 32
        },
        {
          "start": 3209,
          "length": 32
        },
        {
          "start": 3510,
          "length": 32
        },
        {
          "start": 3991,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ADMIN_ROLE()": "75b238fc",
    "COLLECT_REWARDS_ROLE()": "45015d1b",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "auroraStaking()": "46e90fa6",
    "auroraToken()": "5578fdb2",
    "getPendingAurora()": "81739a6e",
    "getPendingRewards(uint256)": "f9f87c18",
    "getReleaseTime(uint256)": "52db191f",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "moveRewardsToPending(uint256)": "ee13ad8e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "stAurVault()": "367c98b8",
    "stake(uint256)": "a694fc3a",
    "stakingManager()": "22828cc2",
    "supportsInterface(bytes4)": "01ffc9a7",
    "unstake(uint256)": "2e17de78",
    "unstakeAll()": "35322f37",
    "updateStakingManager(address)": "96a1b6b5",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawRewards(uint256,address)": "f3301f6b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collectRewardsRole\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_streamId\",\"type\":\"uint256\"}],\"name\":\"MoveRewardsToPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"NewManagerUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"}],\"name\":\"StakeThroughDepositor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"}],\"name\":\"UnstakeAllThroughDepositor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"}],\"name\":\"UnstakeThroughDepositor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_streamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"WithdrawRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"}],\"name\":\"WithdrawThroughDepositor\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COLLECT_REWARDS_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auroraStaking\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auroraToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingAurora\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_streamId\",\"type\":\"uint256\"}],\"name\":\"getPendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_streamId\",\"type\":\"uint256\"}],\"name\":\"getReleaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_streamId\",\"type\":\"uint256\"}],\"name\":\"moveRewardsToPending\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stAurVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingManager\",\"type\":\"address\"}],\"name\":\"updateStakingManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getPendingAurora()\":{\"details\":\"The param of 0 in getPendings refers to the streamId for the Aurora Token.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateStakingManager(address)\":{\"details\":\"In case of emergency \\ud83d\\udedf, update the Manager contract.\"},\"withdraw(uint256)\":{\"details\":\"The param of 0 in withdraw refers to the streamId for the Aurora Token.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPendingAurora()\":{\"notice\":\"Interface for the Aurora Staking (Aurora Plus) contract.\"},\"getPendingRewards(uint256)\":{\"notice\":\"Interface for the Aurora Staking (Aurora Plus) contract.\"},\"getReleaseTime(uint256)\":{\"notice\":\"Interface for the Aurora Staking (Aurora Plus) contract.\"},\"moveRewardsToPending(uint256)\":{\"notice\":\"Manually collect depositor Stream Rewards from Aurora Plus.\"},\"stake(uint256)\":{\"notice\":\"The staking has to go first through the stAUR vault.\"},\"unstake(uint256)\":{\"notice\":\"The unstake is made by the Robot \\ud83e\\udd16 clean-order job.\"},\"unstakeAll()\":{\"notice\":\"The unstake is made by the Robot \\ud83e\\udd16 clean-order job.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw transfers AURORA tokens to the Manager. The withdraw is made by the Robot \\ud83e\\udd16 clean-order job.\"},\"withdrawRewards(uint256,address)\":{\"notice\":\"Manually withdraw depositor Stream Rewards from Aurora Plus.\"}},\"notice\":\"In case of emergency, keep the Depositors alive and update the Staking Manager logic.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Depositor.sol\":\"Depositor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/Depositor.sol\":{\"keccak256\":\"0x6eb3f9cae1ea7b943477cc8356c4f77813cc40a55bbe6f5c115008f79a0c33bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c82912283f7a2ee31fac790f8d2a13dd5728508de49474b838b39136012a917\",\"dweb:/ipfs/QmPf6tTZqXPAspK8i3N2wxNeGJGqedTgqSFe96Z4oFkSp6\"]},\"contracts/interfaces/IAuroraStaking.sol\":{\"keccak256\":\"0x83d6dfb1e30ad03c674f5c156466aa2ab3b117d97c2037824890efb2b347a1d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e645f27bdd0556bad2eba3d8e9bed562802a6ea52299ef03444b8c62c71f8b\",\"dweb:/ipfs/QmbCD1bJcP1vmAEQx7xJErmfVkohDawL4bh4AEWc1RJXEi\"]},\"contracts/interfaces/IDepositor.sol\":{\"keccak256\":\"0xb1ffac39e049d6bf7d37cdb20fd6b3915353f7f1d1675a236b8dc060b510f12a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f7392e39a3a1a3ed0f0ef4a15f6e8b65dc1de9e78d129a1705dfee0fd5d3efa\",\"dweb:/ipfs/QmXRAEgsuENjZZmGJSTqyH4RUupK6iQUM8uVnTqtpExCGZ\"]},\"contracts/interfaces/IStakingManager.sol\":{\"keccak256\":\"0xf4de30869f43369bb0164bbf660bde7667b53e82327790af8a544c3fd88e8534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33576014bb847fef639d66ed484ec9dd3b9783871e46d894d5ae8481471703ef\",\"dweb:/ipfs/QmdiBTjvtvXC96jubzVaGDTnUGfadPa1f9kJHT5eZff7oo\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingManager",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_collectRewardsRole",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_depositor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_streamId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MoveRewardsToPending",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_new",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewManagerUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_depositor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakeThroughDepositor",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_depositor",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "UnstakeAllThroughDepositor",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_depositor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UnstakeThroughDepositor",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_depositor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_streamId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawRewards",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_depositor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawThroughDepositor",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "COLLECT_REWARDS_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "auroraStaking",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "auroraToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPendingAurora",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_streamId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPendingRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_streamId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReleaseTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_streamId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "moveRewardsToPending"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stAurVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstakeAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateStakingManager"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_streamId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewards"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getPendingAurora()": {
            "details": "The param of 0 in getPendings refers to the streamId for the Aurora Token."
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "updateStakingManager(address)": {
            "details": "In case of emergency 🛟, update the Manager contract."
          },
          "withdraw(uint256)": {
            "details": "The param of 0 in withdraw refers to the streamId for the Aurora Token."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getPendingAurora()": {
            "notice": "Interface for the Aurora Staking (Aurora Plus) contract."
          },
          "getPendingRewards(uint256)": {
            "notice": "Interface for the Aurora Staking (Aurora Plus) contract."
          },
          "getReleaseTime(uint256)": {
            "notice": "Interface for the Aurora Staking (Aurora Plus) contract."
          },
          "moveRewardsToPending(uint256)": {
            "notice": "Manually collect depositor Stream Rewards from Aurora Plus."
          },
          "stake(uint256)": {
            "notice": "The staking has to go first through the stAUR vault."
          },
          "unstake(uint256)": {
            "notice": "The unstake is made by the Robot 🤖 clean-order job."
          },
          "unstakeAll()": {
            "notice": "The unstake is made by the Robot 🤖 clean-order job."
          },
          "withdraw(uint256)": {
            "notice": "Withdraw transfers AURORA tokens to the Manager. The withdraw is made by the Robot 🤖 clean-order job."
          },
          "withdrawRewards(uint256,address)": {
            "notice": "Manually withdraw depositor Stream Rewards from Aurora Plus."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Depositor.sol": "Depositor"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Depositor.sol": {
        "keccak256": "0x6eb3f9cae1ea7b943477cc8356c4f77813cc40a55bbe6f5c115008f79a0c33bb",
        "urls": [
          "bzz-raw://2c82912283f7a2ee31fac790f8d2a13dd5728508de49474b838b39136012a917",
          "dweb:/ipfs/QmPf6tTZqXPAspK8i3N2wxNeGJGqedTgqSFe96Z4oFkSp6"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAuroraStaking.sol": {
        "keccak256": "0x83d6dfb1e30ad03c674f5c156466aa2ab3b117d97c2037824890efb2b347a1d5",
        "urls": [
          "bzz-raw://d9e645f27bdd0556bad2eba3d8e9bed562802a6ea52299ef03444b8c62c71f8b",
          "dweb:/ipfs/QmbCD1bJcP1vmAEQx7xJErmfVkohDawL4bh4AEWc1RJXEi"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositor.sol": {
        "keccak256": "0xb1ffac39e049d6bf7d37cdb20fd6b3915353f7f1d1675a236b8dc060b510f12a",
        "urls": [
          "bzz-raw://0f7392e39a3a1a3ed0f0ef4a15f6e8b65dc1de9e78d129a1705dfee0fd5d3efa",
          "dweb:/ipfs/QmXRAEgsuENjZZmGJSTqyH4RUupK6iQUM8uVnTqtpExCGZ"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingManager.sol": {
        "keccak256": "0xf4de30869f43369bb0164bbf660bde7667b53e82327790af8a544c3fd88e8534",
        "urls": [
          "bzz-raw://33576014bb847fef639d66ed484ec9dd3b9783871e46d894d5ae8481471703ef",
          "dweb:/ipfs/QmdiBTjvtvXC96jubzVaGDTnUGfadPa1f9kJHT5eZff7oo"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a",
        "urls": [
          "bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe",
          "dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Depositor.sol",
    "id": 447,
    "exportedSymbols": {
      "AccessControl": [
        41095
      ],
      "Address": [
        43356
      ],
      "Context": [
        43378
      ],
      "Depositor": [
        446
      ],
      "ERC165": [
        43577
      ],
      "IAccessControl": [
        41168
      ],
      "IAuroraStaking": [
        3413
      ],
      "IDepositor": [
        3502
      ],
      "IERC165": [
        43589
      ],
      "IERC20": [
        42001
      ],
      "IERC20Permit": [
        42745
      ],
      "IStakingManager": [
        3897
      ],
      "Math": [
        44454
      ],
      "SafeERC20": [
        43026
      ],
      "StreamStatus": [
        3326
      ],
      "Strings": [
        43553
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5379:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "57:41:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IAuroraStaking.sol",
        "file": "./interfaces/IAuroraStaking.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 447,
        "sourceUnit": 3414,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "99:37:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositor.sol",
        "file": "./interfaces/IDepositor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 447,
        "sourceUnit": 3503,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "137:42:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingManager.sol",
        "file": "./interfaces/IStakingManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 447,
        "sourceUnit": 3898,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "180:58:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 447,
        "sourceUnit": 41096,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "239:56:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 447,
        "sourceUnit": 42002,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "296:65:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 447,
        "sourceUnit": 43027,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 446,
        "nodeType": "ContractDefinition",
        "src": "462:4949:0",
        "nodes": [
          {
            "id": 16,
            "nodeType": "UsingForDirective",
            "src": "516:27:0",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13,
              "name": "SafeERC20",
              "nameLocations": [
                "522:9:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43026,
              "src": "522:9:0"
            },
            "typeName": {
              "id": 15,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14,
                "name": "IERC20",
                "nameLocations": [
                  "536:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42001,
                "src": "536:6:0"
              },
              "referencedDeclaration": 42001,
              "src": "536:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$42001",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 21,
            "nodeType": "VariableDeclaration",
            "src": "549:60:0",
            "nodes": [],
            "constant": true,
            "functionSelector": "75b238fc",
            "mutability": "constant",
            "name": "ADMIN_ROLE",
            "nameLocation": "573:10:0",
            "scope": 446,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 17,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "549:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e5f524f4c45",
                  "id": 19,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "596:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  },
                  "value": "ADMIN_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  }
                ],
                "id": 18,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "586:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "586:23:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26,
            "nodeType": "VariableDeclaration",
            "src": "615:80:0",
            "nodes": [],
            "constant": true,
            "functionSelector": "45015d1b",
            "mutability": "constant",
            "name": "COLLECT_REWARDS_ROLE",
            "nameLocation": "639:20:0",
            "scope": 446,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 22,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "615:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "434f4c4c4543545f524557415244535f524f4c45",
                  "id": 24,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "672:22:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_131c12305311744a3f7cfa41d985c1cd8592681deca082296d27adcfcc21a0b8",
                    "typeString": "literal_string \"COLLECT_REWARDS_ROLE\""
                  },
                  "value": "COLLECT_REWARDS_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_131c12305311744a3f7cfa41d985c1cd8592681deca082296d27adcfcc21a0b8",
                    "typeString": "literal_string \"COLLECT_REWARDS_ROLE\""
                  }
                ],
                "id": 23,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "662:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 25,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "662:33:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28,
            "nodeType": "VariableDeclaration",
            "src": "702:29:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "22828cc2",
            "mutability": "mutable",
            "name": "stakingManager",
            "nameLocation": "717:14:0",
            "scope": 446,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 27,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "702:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30,
            "nodeType": "VariableDeclaration",
            "src": "737:35:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "367c98b8",
            "mutability": "immutable",
            "name": "stAurVault",
            "nameLocation": "762:10:0",
            "scope": 446,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "737:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32,
            "nodeType": "VariableDeclaration",
            "src": "778:36:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "5578fdb2",
            "mutability": "immutable",
            "name": "auroraToken",
            "nameLocation": "803:11:0",
            "scope": 446,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "778:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 34,
            "nodeType": "VariableDeclaration",
            "src": "820:38:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "46e90fa6",
            "mutability": "immutable",
            "name": "auroraStaking",
            "nameLocation": "845:13:0",
            "scope": 446,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "820:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46,
            "nodeType": "ModifierDefinition",
            "src": "865:114:0",
            "nodes": [],
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "888:91:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "906:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "910:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "906:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 39,
                          "name": "stakingManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "920:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "906:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f464f525f53544155525f4d414e41474552",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "936:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d33a698fd33ba953e75ee5d5e75cf8cb45dcd2ea74e33a7f33b9301bf612b5f7",
                          "typeString": "literal_string \"ONLY_FOR_STAUR_MANAGER\""
                        },
                        "value": "ONLY_FOR_STAUR_MANAGER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d33a698fd33ba953e75ee5d5e75cf8cb45dcd2ea74e33a7f33b9301bf612b5f7",
                          "typeString": "literal_string \"ONLY_FOR_STAUR_MANAGER\""
                        }
                      ],
                      "id": 36,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "898:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "898:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "898:63:0"
                },
                {
                  "id": 44,
                  "nodeType": "PlaceholderStatement",
                  "src": "971:1:0"
                }
              ]
            },
            "name": "onlyManager",
            "nameLocation": "874:11:0",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "885:2:0"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 58,
            "nodeType": "ModifierDefinition",
            "src": "985:111:0",
            "nodes": [],
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "1011:85:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 49,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1029:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1033:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1029:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 51,
                          "name": "stAurVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1043:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1029:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f464f525f53544155525f5641554c54",
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1055:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c8e75ec6330a623f1a99eecbfb7f450990b8b6d59c62a9c31ff8219e989608c",
                          "typeString": "literal_string \"ONLY_FOR_STAUR_VAULT\""
                        },
                        "value": "ONLY_FOR_STAUR_VAULT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c8e75ec6330a623f1a99eecbfb7f450990b8b6d59c62a9c31ff8219e989608c",
                          "typeString": "literal_string \"ONLY_FOR_STAUR_VAULT\""
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1021:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:57:0"
                },
                {
                  "id": 56,
                  "nodeType": "PlaceholderStatement",
                  "src": "1088:1:0"
                }
              ]
            },
            "name": "onlyStAurVault",
            "nameLocation": "994:14:0",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1008:2:0"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 122,
            "nodeType": "FunctionDefinition",
            "src": "1102:575:0",
            "nodes": [],
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1190:487:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66,
                          "name": "_stakingManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "1208:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1235:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1227:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 67,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1227:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1227:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1208:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e56414c49445f5a45524f5f41444452455353",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1239:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a5a6fa8818e8780fab0c0fa60c5846123b4c114f4f77a89436958663aff4437",
                          "typeString": "literal_string \"INVALID_ZERO_ADDRESS\""
                        },
                        "value": "INVALID_ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a5a6fa8818e8780fab0c0fa60c5846123b4c114f4f77a89436958663aff4437",
                          "typeString": "literal_string \"INVALID_ZERO_ADDRESS\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1200:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1200:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1200:62:0"
                },
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75,
                      "name": "stakingManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1272:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76,
                      "name": "_stakingManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1289:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1272:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:32:0"
                },
                {
                  "assignments": [
                    81
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81,
                      "mutability": "mutable",
                      "name": "manager",
                      "nameLocation": "1331:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 121,
                      "src": "1315:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingManager_$3897",
                        "typeString": "contract IStakingManager"
                      },
                      "typeName": {
                        "id": 80,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 79,
                          "name": "IStakingManager",
                          "nameLocations": [
                            "1315:15:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3897,
                          "src": "1315:15:0"
                        },
                        "referencedDeclaration": 3897,
                        "src": "1315:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingManager_$3897",
                          "typeString": "contract IStakingManager"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83,
                        "name": "_stakingManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "1357:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 82,
                      "name": "IStakingManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3897,
                      "src": "1341:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStakingManager_$3897_$",
                        "typeString": "type(contract IStakingManager)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingManager_$3897",
                      "typeString": "contract IStakingManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1315:58:0"
                },
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "stAurVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1383:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 87,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "1396:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStakingManager_$3897",
                            "typeString": "contract IStakingManager"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1404:10:0",
                        "memberName": "stAurVault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3882,
                        "src": "1396:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1396:20:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1383:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1383:33:0"
                },
                {
                  "expression": {
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92,
                      "name": "auroraToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1426:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 93,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "1440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStakingManager_$3897",
                            "typeString": "contract IStakingManager"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1448:11:0",
                        "memberName": "auroraToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3775,
                        "src": "1440:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1440:21:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1426:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1426:35:0"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98,
                      "name": "auroraStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1471:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 99,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "1487:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStakingManager_$3897",
                            "typeString": "contract IStakingManager"
                          }
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1495:13:0",
                        "memberName": "auroraStaking",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3770,
                        "src": "1487:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1487:23:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1471:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 105,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1532:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 106,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1544:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1548:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1544:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 104,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41063,
                      "src": "1521:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1521:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 111,
                        "name": "COLLECT_REWARDS_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1576:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 112,
                        "name": "_collectRewardsRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1598:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 110,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41063,
                      "src": "1565:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1565:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1565:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40807,
                        "src": "1639:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 117,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1659:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1663:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1659:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 115,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41063,
                      "src": "1628:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1628:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1628:42:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "_stakingManager",
                  "nameLocation": "1131:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1123:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_collectRewardsRole",
                  "nameLocation": "1164:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1156:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1113:76:0"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1190:0:0"
            },
            "scope": 446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 126,
            "nodeType": "FunctionDefinition",
            "src": "1683:29:0",
            "nodes": [],
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "1710:2:0",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1690:2:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1710:0:0"
            },
            "scope": 446,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 156,
            "nodeType": "FunctionDefinition",
            "src": "1787:281:0",
            "nodes": [],
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "1886:182:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 136,
                          "name": "_stakingManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 129,
                          "src": "1904:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1931:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1923:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 137,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1923:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1923:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1904:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e56414c49445f5a45524f5f41444452455353",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1935:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a5a6fa8818e8780fab0c0fa60c5846123b4c114f4f77a89436958663aff4437",
                          "typeString": "literal_string \"INVALID_ZERO_ADDRESS\""
                        },
                        "value": "INVALID_ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a5a6fa8818e8780fab0c0fa60c5846123b4c114f4f77a89436958663aff4437",
                          "typeString": "literal_string \"INVALID_ZERO_ADDRESS\""
                        }
                      ],
                      "id": 135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1896:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:62:0"
                },
                {
                  "expression": {
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 145,
                      "name": "stakingManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1968:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 146,
                      "name": "_stakingManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "1985:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1968:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "1968:32:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 150,
                        "name": "_stakingManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2033:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 151,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2050:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2054:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2050:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 149,
                      "name": "NewManagerUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3427,
                      "src": "2016:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "EmitStatement",
                  "src": "2011:50:0"
                }
              ]
            },
            "documentation": {
              "id": 127,
              "nodeType": "StructuredDocumentation",
              "src": "1718:64:0",
              "text": "@dev In case of emergency 🛟, update the Manager contract."
            },
            "functionSelector": "96a1b6b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 132,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21,
                    "src": "1874:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 131,
                  "name": "onlyRole",
                  "nameLocations": [
                    "1865:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40818,
                  "src": "1865:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1865:20:0"
              }
            ],
            "name": "updateStakingManager",
            "nameLocation": "1796:20:0",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_stakingManager",
                  "nameLocation": "1834:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1826:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1816:39:0"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1886:0:0"
            },
            "scope": 446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 209,
            "nodeType": "FunctionDefinition",
            "src": "2143:404:0",
            "nodes": [],
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "2199:348:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 166,
                      "mutability": "mutable",
                      "name": "aurora",
                      "nameLocation": "2216:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 208,
                      "src": "2209:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42001",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 165,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 164,
                          "name": "IERC20",
                          "nameLocations": [
                            "2209:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42001,
                          "src": "2209:6:0"
                        },
                        "referencedDeclaration": 42001,
                        "src": "2209:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42001",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 170,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 168,
                        "name": "auroraToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "2232:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 167,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42001,
                      "src": "2225:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$42001_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42001",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2209:35:0"
                },
                {
                  "assignments": [
                    172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "_auroraStaking",
                      "nameLocation": "2262:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 208,
                      "src": "2254:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2254:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "initialValue": {
                    "id": 173,
                    "name": "auroraStaking",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34,
                    "src": "2279:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2254:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 178,
                        "name": "stAurVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "2326:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 181,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2346:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          ],
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2338:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 179,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2338:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2338:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 183,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "2353:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 175,
                        "name": "aurora",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2302:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42001",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2309:16:0",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42803,
                      "src": "2302:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42001_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42001_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2302:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 189,
                        "name": "_auroraStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "2400:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 190,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "2416:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 186,
                        "name": "aurora",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2371:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42001",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2378:21:0",
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42883,
                      "src": "2371:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42001_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42001_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2371:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2371:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 197,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "2471:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 194,
                            "name": "_auroraStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "2449:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 193,
                          "name": "IAuroraStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3413,
                          "src": "2434:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAuroraStaking_$3413_$",
                            "typeString": "type(contract IAuroraStaking)"
                          }
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2434:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                          "typeString": "contract IAuroraStaking"
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2465:5:0",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3394,
                      "src": "2434:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2434:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2434:45:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 203,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2525:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          ],
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2517:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 201,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2517:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2517:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 205,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "2532:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 200,
                      "name": "StakeThroughDepositor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3433,
                      "src": "2495:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2495:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "EmitStatement",
                  "src": "2490:50:0"
                }
              ]
            },
            "baseFunctions": [
              3481
            ],
            "documentation": {
              "id": 157,
              "nodeType": "StructuredDocumentation",
              "src": "2074:64:0",
              "text": "@notice The staking has to go first through the stAUR vault."
            },
            "functionSelector": "a694fc3a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 162,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 161,
                  "name": "onlyStAurVault",
                  "nameLocations": [
                    "2184:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "2184:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2184:14:0"
              }
            ],
            "name": "stake",
            "nameLocation": "2152:5:0",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "2166:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2158:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2157:17:0"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2199:0:0"
            },
            "scope": 446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 233,
            "nodeType": "FunctionDefinition",
            "src": "2624:181:0",
            "nodes": [],
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "2679:126:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 221,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "2727:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 218,
                            "name": "auroraStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2704:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 217,
                          "name": "IAuroraStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3413,
                          "src": "2689:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAuroraStaking_$3413_$",
                            "typeString": "type(contract IAuroraStaking)"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2689:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                          "typeString": "contract IAuroraStaking"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2719:7:0",
                      "memberName": "unstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3404,
                      "src": "2689:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2689:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2689:46:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 227,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2783:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          ],
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2775:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 225,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2775:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2775:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 229,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "2790:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 224,
                      "name": "UnstakeThroughDepositor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3443,
                      "src": "2751:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2751:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "EmitStatement",
                  "src": "2746:52:0"
                }
              ]
            },
            "baseFunctions": [
              3486
            ],
            "documentation": {
              "id": 210,
              "nodeType": "StructuredDocumentation",
              "src": "2553:66:0",
              "text": "@notice The unstake is made by the Robot 🤖 clean-order job."
            },
            "functionSelector": "2e17de78",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 215,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 214,
                  "name": "onlyManager",
                  "nameLocations": [
                    "2667:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2667:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2667:11:0"
              }
            ],
            "name": "unstake",
            "nameLocation": "2633:7:0",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "2649:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2641:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2641:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2640:17:0"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2679:0:0"
            },
            "scope": 446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 253,
            "nodeType": "FunctionDefinition",
            "src": "2882:159:0",
            "nodes": [],
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "2925:116:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 240,
                            "name": "auroraStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2950:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 239,
                          "name": "IAuroraStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3413,
                          "src": "2935:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAuroraStaking_$3413_$",
                            "typeString": "type(contract IAuroraStaking)"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2935:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                          "typeString": "contract IAuroraStaking"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2965:10:0",
                      "memberName": "unstakeAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3407,
                      "src": "2935:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2935:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2935:42:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 248,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3028:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          ],
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3020:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 246,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3020:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3020:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 245,
                      "name": "UnstakeAllThroughDepositor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3437,
                      "src": "2993:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2993:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "EmitStatement",
                  "src": "2988:46:0"
                }
              ]
            },
            "baseFunctions": [
              3489
            ],
            "documentation": {
              "id": 234,
              "nodeType": "StructuredDocumentation",
              "src": "2811:66:0",
              "text": "@notice The unstake is made by the Robot 🤖 clean-order job."
            },
            "functionSelector": "35322f37",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 237,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 236,
                  "name": "onlyManager",
                  "nameLocations": [
                    "2913:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2913:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2913:11:0"
              }
            ],
            "name": "unstakeAll",
            "nameLocation": "2891:10:0",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2901:2:0"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2925:0:0"
            },
            "scope": 446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 290,
            "nodeType": "FunctionDefinition",
            "src": "3261:313:0",
            "nodes": [],
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "3317:257:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3366:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 262,
                            "name": "auroraStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "3342:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 261,
                          "name": "IAuroraStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3413,
                          "src": "3327:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAuroraStaking_$3413_$",
                            "typeString": "type(contract IAuroraStaking)"
                          }
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3327:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                          "typeString": "contract IAuroraStaking"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3357:8:0",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3412,
                      "src": "3327:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3327:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "3327:41:0"
                },
                {
                  "assignments": [
                    269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 269,
                      "mutability": "mutable",
                      "name": "_stakingManager",
                      "nameLocation": "3386:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "3378:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 268,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3378:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 271,
                  "initialValue": {
                    "id": 270,
                    "name": "stakingManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28,
                    "src": "3404:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3378:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 276,
                        "name": "_stakingManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "3461:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 277,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "3478:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 273,
                            "name": "auroraToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "3435:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 272,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42001,
                          "src": "3428:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$42001_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3428:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42001",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3448:12:0",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42777,
                      "src": "3428:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42001_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42001_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3428:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "3428:58:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 283,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3535:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          ],
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3527:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3527:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3527:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 285,
                        "name": "_stakingManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "3542:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 286,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "3559:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 280,
                      "name": "WithdrawThroughDepositor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3459,
                      "src": "3502:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3502:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "EmitStatement",
                  "src": "3497:70:0"
                }
              ]
            },
            "baseFunctions": [
              3494
            ],
            "documentation": {
              "id": 254,
              "nodeType": "StructuredDocumentation",
              "src": "3047:209:0",
              "text": "@notice Withdraw transfers AURORA tokens to the Manager. The withdraw\n is made by the Robot 🤖 clean-order job.\n @dev The param of 0 in withdraw refers to the streamId for the Aurora Token."
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 258,
                  "name": "onlyManager",
                  "nameLocations": [
                    "3305:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "3305:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3305:11:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3270:8:0",
            "parameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "3287:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "3279:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3279:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3278:17:0"
            },
            "returnParameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3317:0:0"
            },
            "scope": 446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 310,
            "nodeType": "FunctionDefinition",
            "src": "3653:169:0",
            "nodes": [],
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "3728:94:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 302,
                        "name": "_streamId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "3790:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 305,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3809:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          ],
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3801:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 303,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3801:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3801:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 299,
                            "name": "auroraStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "3760:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 298,
                          "name": "IAuroraStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3413,
                          "src": "3745:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAuroraStaking_$3413_$",
                            "typeString": "type(contract IAuroraStaking)"
                          }
                        },
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3745:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                          "typeString": "contract IAuroraStaking"
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3775:14:0",
                      "memberName": "getReleaseTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3344,
                      "src": "3745:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view external returns (uint256)"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3745:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 297,
                  "id": 308,
                  "nodeType": "Return",
                  "src": "3738:77:0"
                }
              ]
            },
            "documentation": {
              "id": 291,
              "nodeType": "StructuredDocumentation",
              "src": "3580:68:0",
              "text": "@notice Interface for the Aurora Staking (Aurora Plus) contract."
            },
            "functionSelector": "52db191f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReleaseTime",
            "nameLocation": "3662:14:0",
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "_streamId",
                  "nameLocation": "3685:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "3677:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3677:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3676:19:0"
            },
            "returnParameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 296,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "3719:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3719:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3718:9:0"
            },
            "scope": 446,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 328,
            "nodeType": "FunctionDefinition",
            "src": "3989:142:0",
            "nodes": [],
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "4049:82:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4107:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 323,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4118:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          ],
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4110:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 321,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4110:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4110:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 317,
                            "name": "auroraStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "4081:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 316,
                          "name": "IAuroraStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3413,
                          "src": "4066:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAuroraStaking_$3413_$",
                            "typeString": "type(contract IAuroraStaking)"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4066:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                          "typeString": "contract IAuroraStaking"
                        }
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4096:10:0",
                      "memberName": "getPending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3335,
                      "src": "4066:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view external returns (uint256)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4066:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 315,
                  "id": 326,
                  "nodeType": "Return",
                  "src": "4059:65:0"
                }
              ]
            },
            "baseFunctions": [
              3464
            ],
            "documentation": {
              "id": 311,
              "nodeType": "StructuredDocumentation",
              "src": "3828:156:0",
              "text": "@notice Interface for the Aurora Staking (Aurora Plus) contract.\n @dev The param of 0 in getPendings refers to the streamId for the Aurora Token."
            },
            "functionSelector": "81739a6e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingAurora",
            "nameLocation": "3998:16:0",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4014:2:0"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "4040:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4040:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4039:9:0"
            },
            "scope": 446,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 348,
            "nodeType": "FunctionDefinition",
            "src": "4210:168:0",
            "nodes": [],
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "4288:90:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 340,
                        "name": "_streamId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "4346:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 343,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4365:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          ],
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4357:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 341,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4357:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4357:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 337,
                            "name": "auroraStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "4320:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 336,
                          "name": "IAuroraStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3413,
                          "src": "4305:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAuroraStaking_$3413_$",
                            "typeString": "type(contract IAuroraStaking)"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4305:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                          "typeString": "contract IAuroraStaking"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4335:10:0",
                      "memberName": "getPending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3335,
                      "src": "4305:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view external returns (uint256)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4305:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 335,
                  "id": 346,
                  "nodeType": "Return",
                  "src": "4298:73:0"
                }
              ]
            },
            "baseFunctions": [
              3471
            ],
            "documentation": {
              "id": 329,
              "nodeType": "StructuredDocumentation",
              "src": "4137:68:0",
              "text": "@notice Interface for the Aurora Staking (Aurora Plus) contract."
            },
            "functionSelector": "f9f87c18",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingRewards",
            "nameLocation": "4219:17:0",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "_streamId",
                  "nameLocation": "4245:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "4237:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4237:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4236:19:0"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "4279:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4279:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4278:9:0"
            },
            "scope": 446,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 373,
            "nodeType": "FunctionDefinition",
            "src": "4460:243:0",
            "nodes": [],
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "4563:140:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 361,
                        "name": "_streamId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "4624:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 358,
                            "name": "auroraStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "4588:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 357,
                          "name": "IAuroraStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3413,
                          "src": "4573:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAuroraStaking_$3413_$",
                            "typeString": "type(contract IAuroraStaking)"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4573:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                          "typeString": "contract IAuroraStaking"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4603:20:0",
                      "memberName": "moveRewardsToPending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3389,
                      "src": "4573:50:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4573:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "4573:61:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 367,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4679:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          ],
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4671:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 365,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4671:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4671:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 369,
                        "name": "_streamId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "4686:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 364,
                      "name": "MoveRewardsToPending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3421,
                      "src": "4650:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4650:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "EmitStatement",
                  "src": "4645:51:0"
                }
              ]
            },
            "baseFunctions": [
              3476
            ],
            "documentation": {
              "id": 349,
              "nodeType": "StructuredDocumentation",
              "src": "4384:71:0",
              "text": "@notice Manually collect depositor Stream Rewards from Aurora Plus."
            },
            "functionSelector": "ee13ad8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 354,
                    "name": "COLLECT_REWARDS_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26,
                    "src": "4541:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 355,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 353,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4532:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40818,
                  "src": "4532:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4532:30:0"
              }
            ],
            "name": "moveRewardsToPending",
            "nameLocation": "4469:20:0",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "_streamId",
                  "nameLocation": "4507:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "4499:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4499:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4489:33:0"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4563:0:0"
            },
            "scope": 446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 445,
            "nodeType": "FunctionDefinition",
            "src": "4786:623:0",
            "nodes": [],
            "body": {
              "id": 444,
              "nodeType": "Block",
              "src": "4910:499:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 385,
                          "name": "_streamId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 376,
                          "src": "4928:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4940:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4928:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57495448445241575f4f4e4c595f464f525f52455741524453",
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4943:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2148617d9d85cfaf6a44b844bc6b4021eb447835ecbd2907c38b474dd7124a4",
                          "typeString": "literal_string \"WITHDRAW_ONLY_FOR_REWARDS\""
                        },
                        "value": "WITHDRAW_ONLY_FOR_REWARDS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2148617d9d85cfaf6a44b844bc6b4021eb447835ecbd2907c38b474dd7124a4",
                          "typeString": "literal_string \"WITHDRAW_ONLY_FOR_REWARDS\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4920:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4920:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "4920:51:0"
                },
                {
                  "assignments": [
                    393
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 393,
                      "mutability": "mutable",
                      "name": "staking",
                      "nameLocation": "4996:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 444,
                      "src": "4981:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                        "typeString": "contract IAuroraStaking"
                      },
                      "typeName": {
                        "id": 392,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 391,
                          "name": "IAuroraStaking",
                          "nameLocations": [
                            "4981:14:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3413,
                          "src": "4981:14:0"
                        },
                        "referencedDeclaration": 3413,
                        "src": "4981:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                          "typeString": "contract IAuroraStaking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 397,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 395,
                        "name": "auroraStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "5021:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 394,
                      "name": "IAuroraStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3413,
                      "src": "5006:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAuroraStaking_$3413_$",
                        "typeString": "type(contract IAuroraStaking)"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5006:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                      "typeString": "contract IAuroraStaking"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4981:54:0"
                },
                {
                  "assignments": [
                    null,
                    399,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 399,
                      "mutability": "mutable",
                      "name": "rewardToken",
                      "nameLocation": "5055:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 444,
                      "src": "5047:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 398,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5047:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 404,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 402,
                        "name": "_streamId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "5097:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 400,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "5079:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                          "typeString": "contract IAuroraStaking"
                        }
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5087:9:0",
                      "memberName": "getStream",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3372,
                      "src": "5079:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_StreamStatus_$3326_$",
                        "typeString": "function (uint256) view external returns (address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,enum StreamStatus)"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5079:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_StreamStatus_$3326_$",
                      "typeString": "tuple(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,enum StreamStatus)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5045:62:0"
                },
                {
                  "assignments": [
                    406
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 406,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "5125:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 444,
                      "src": "5117:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 405,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5117:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 415,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 409,
                        "name": "_streamId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "5154:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 412,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5173:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Depositor_$446",
                              "typeString": "contract Depositor"
                            }
                          ],
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5165:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 410,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5165:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5165:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 407,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "5135:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                          "typeString": "contract IAuroraStaking"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5143:10:0",
                      "memberName": "getPending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3335,
                      "src": "5135:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view external returns (uint256)"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5135:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5117:62:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 416,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "5193:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5203:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5193:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 443,
                  "nodeType": "IfStatement",
                  "src": "5189:214:0",
                  "trueBody": {
                    "id": 442,
                    "nodeType": "Block",
                    "src": "5206:197:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 422,
                              "name": "_streamId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "5237:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 419,
                              "name": "staking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 393,
                              "src": "5220:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAuroraStaking_$3413",
                                "typeString": "contract IAuroraStaking"
                              }
                            },
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5228:8:0",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3412,
                            "src": "5220:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5220:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 424,
                        "nodeType": "ExpressionStatement",
                        "src": "5220:27:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 429,
                              "name": "_spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "5303:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 430,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "5313:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 426,
                                  "name": "rewardToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 399,
                                  "src": "5268:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 425,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42001,
                                "src": "5261:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$42001_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5261:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$42001",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5281:21:0",
                            "memberName": "safeIncreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42883,
                            "src": "5261:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42001_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42001_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5261:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 432,
                        "nodeType": "ExpressionStatement",
                        "src": "5261:60:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 436,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5365:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Depositor_$446",
                                    "typeString": "contract Depositor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Depositor_$446",
                                    "typeString": "contract Depositor"
                                  }
                                ],
                                "id": 435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5357:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 434,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5357:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5357:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 438,
                              "name": "_streamId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "5372:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 439,
                              "name": "_spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "5383:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 433,
                            "name": "WithdrawRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3451,
                            "src": "5341:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,address)"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5341:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 441,
                        "nodeType": "EmitStatement",
                        "src": "5336:56:0"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              3501
            ],
            "documentation": {
              "id": 374,
              "nodeType": "StructuredDocumentation",
              "src": "4709:72:0",
              "text": "@notice Manually withdraw depositor Stream Rewards from Aurora Plus."
            },
            "functionSelector": "f3301f6b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 381,
                    "name": "COLLECT_REWARDS_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26,
                    "src": "4888:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 382,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 380,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4879:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40818,
                  "src": "4879:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4879:30:0"
              }
            ],
            "name": "withdrawRewards",
            "nameLocation": "4795:15:0",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "_streamId",
                  "nameLocation": "4828:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "4820:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4820:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "4855:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "4847:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4847:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4810:59:0"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4910:0:0"
            },
            "scope": 446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9,
              "name": "AccessControl",
              "nameLocations": [
                "484:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41095,
              "src": "484:13:0"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "484:13:0"
          },
          {
            "baseName": {
              "id": 11,
              "name": "IDepositor",
              "nameLocations": [
                "499:10:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3502,
              "src": "499:10:0"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "499:10:0"
          }
        ],
        "canonicalName": "Depositor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8,
          "nodeType": "StructuredDocumentation",
          "src": "363:98:0",
          "text": "@notice In case of emergency, keep the Depositors alive and update the Staking Manager logic."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          446,
          3502,
          41095,
          43577,
          43589,
          41168,
          43378
        ],
        "name": "Depositor",
        "nameLocation": "471:9:0",
        "scope": 447,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 0
}